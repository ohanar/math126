surfaceNets=function(r,a,v){var n=new Int32Array(24),f=new Int32Array(256);(function(){var r=0;for(var a=0;a<8;++a){for(var v=1;v<=4;v<<=1){var e=a^v;if(a<=e){n[r++]=a;n[r++]=e}}}for(var a=0;a<256;++a){var o=0;for(var v=0;v<24;v+=2){var t=!!(a&1<<n[v]),i=!!(a&1<<n[v+1]);o|=t!==i?1<<(v>>1):0}f[a]=o}})();var e=new Array(4096);(function(){for(var r=0;r<e.length;++r){e[r]=0}})();if(!v){v=[[0,0,0],r]}var o=[0,0,0];var t=[0,0,0];for(var i=0;i<3;++i){o[i]=(v[1][i]-v[0][i])/r[i];t[i]=v[0][i]}var h=[],l=[],s=0,u=[0,0,0],c=[1,r[0]+1,(r[0]+1)*(r[1]+1)],g=[0,0,0,0,0,0,0,0],p=1;if(c[2]*2>e.length){var w=e.length;e.length=c[2]*2;while(w<e.length){e[w++]=0}}for(u[2]=0;u[2]<r[2]-1;++u[2],s+=r[0],p^=1,c[2]=-c[2]){var y=1+(r[0]+1)*(1+p*(r[1]+1));for(u[1]=0;u[1]<r[1]-1;++u[1],++s,y+=2){for(u[0]=0;u[0]<r[0]-1;++u[0],++s,++y){var A=0,F=0;for(var I=0;I<2;++I)for(var M=0;M<2;++M)for(var i=0;i<2;++i,++F){var b=a(o[0]*(u[0]+i)+t[0],o[1]*(u[1]+M)+t[1],o[2]*(u[2]+I)+t[2]);g[F]=b;A|=b<0?1<<F:0}if(A===0||A===255){continue}var m=f[A],q=[0,0,0],N=0;for(var i=0;i<12;++i){if(!(m&1<<i)){continue}++N;var d=n[i<<1],j=n[(i<<1)+1],k=g[d],x=g[j],z=k-x;if(Math.abs(z)>1e-6){z=k/z}else{continue}for(var M=0,I=1;M<3;++M,I<<=1){var B=d&I,C=j&I;if(B!==C){q[M]+=B?1-z:z}else{q[M]+=B?1:0}}}var D=1/N;for(var i=0;i<3;++i){q[i]=o[i]*(u[i]+D*q[i])+t[i]}e[y]=h.length;h.push(q);for(var i=0;i<3;++i){if(!(m&1<<i)){continue}var E=(i+1)%3,G=(i+2)%3;if(u[E]===0||u[G]===0){continue}var H=c[E],J=c[G];if(A&1){l.push([e[y],e[y-H],e[y-J]]);l.push([e[y-J],e[y-H],e[y-H-J]])}else{l.push([e[y],e[y-J],e[y-H]]);l.push([e[y-H],e[y-J],e[y-H-J]])}}}}}var K=new Float32Array(l.length*3*3),L=new Float32Array(l.length*3*3);for(var i=0,O=0;i<l.length;i++,O+=9){var P=l[i];var B=h[P[0]];var C=h[P[1]];var Q=h[P[2]];K[O]=B[0];K[O+1]=B[1];K[O+2]=B[2];K[O+3]=C[0];K[O+4]=C[1];K[O+5]=C[2];K[O+6]=Q[0];K[O+7]=Q[1];K[O+8]=Q[2];var R=[Q[0]-C[0],Q[1]-C[1],Q[2]-C[2]];var S=[B[0]-C[0],B[1]-C[1],B[2]-C[2]];var T=[R[1]*S[2]-R[2]*S[1],-R[0]*S[2]+R[2]*S[0],R[0]*S[1]-R[1]*S[0]];var U=Math.sqrt(T[0]*T[0]+T[1]*T[1]+T[2]*T[2]);var s=[T[0]/U,T[1]/U,T[2]/U];L[O]=s[0];L[O+1]=s[1];L[O+2]=s[2];L[O+3]=s[0];L[O+4]=s[1];L[O+5]=s[2];L[O+6]=s[0];L[O+7]=s[1];L[O+8]=s[2]}return{positions:K,normals:L}};