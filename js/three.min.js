"use strict";var THREE={REVISION:"68"};"object"===typeof module&&(module.exports=THREE);THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1e3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){e instanceof THREE.Color?this.copy(e):"number"===typeof e?this.setHex(e):"string"===typeof e&&this.setStyle(e);return this},setHex:function(e){e=Math.floor(e);this.r=(e>>16&255)/255;this.g=(e>>8&255)/255;this.b=(e&255)/255;return this},setRGB:function(e,t,r){this.r=e;this.g=t;this.b=r;return this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var i=function(e,t,r){0>r&&(r+=1);1<r&&(r-=1);return r<1/6?e+6*(t-e)*r:.5>r?t:r<2/3?e+6*(t-e)*(2/3-r):e};t=.5>=r?r*(1+t):r+t-r*t;r=2*r-t;this.r=i(r,t,e+1/3);this.g=i(r,t,e);this.b=i(r,t,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e))return e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e))return e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(e))return e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e))return e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this;if(/^(\w+)$/i.test(e))return this.setHex(THREE.ColorKeywords[e]),this},copy:function(e){this.r=e.r;this.g=e.g;this.b=e.b;return this},copyGammaToLinear:function(e){this.r=e.r*e.r;this.g=e.g*e.g;this.b=e.b*e.b;return this},copyLinearToGamma:function(e){this.r=Math.sqrt(e.r);this.g=Math.sqrt(e.g);this.b=Math.sqrt(e.b);return this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;this.r=e*e;this.g=t*t;this.b=r*r;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e=e||{h:0,s:0,l:0};var t=this.r,r=this.g,i=this.b,n=Math.max(t,r,i),o=Math.min(t,r,i),a,s=(o+n)/2;if(o===n)o=a=0;else{var h=n-o,o=.5>=s?h/(n+o):h/(2-n-o);switch(n){case t:a=(r-i)/h+(r<i?6:0);break;case r:a=(i-t)/h+2;break;case i:a=(t-r)/h+4}a/=6}e.h=a;e.s=o;e.l=s;return e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var i=this.getHSL();i.h+=e;i.s+=t;i.l+=r;this.setHSL(i.h,i.s,i.l);return this},add:function(e){this.r+=e.r;this.g+=e.g;this.b+=e.b;return this},addColors:function(e,t){this.r=e.r+t.r;this.g=e.g+t.g;this.b=e.b+t.b;return this},addScalar:function(e){this.r+=e;this.g+=e;this.b+=e;return this},multiply:function(e){this.r*=e.r;this.g*=e.g;this.b*=e.b;return this},multiplyScalar:function(e){this.r*=e;this.g*=e;this.b*=e;return this},lerp:function(e,t){this.r+=(e.r-this.r)*t;this.g+=(e.g-this.g)*t;this.b+=(e.b-this.b)*t;return this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){this.r=e[0];this.g=e[1];this.b=e[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(e,t,r,i){this._x=e||0;this._y=t||0;this._z=r||0;this._w=void 0!==i?i:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(e){this._x=e;this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e;this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e;this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e;this.onChangeCallback()},set:function(e,t,r,i){this._x=e;this._y=t;this._z=r;this._w=i;this.onChangeCallback();return this},copy:function(e){this._x=e.x;this._y=e.y;this._z=e.z;this._w=e.w;this.onChangeCallback();return this},setFromEuler:function(e,t){if(!1===e instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(e._x/2),i=Math.cos(e._y/2),n=Math.cos(e._z/2),o=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2);"XYZ"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===e.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===e.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===e.order&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s);if(!1!==t)this.onChangeCallback();return this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);this._x=e.x*i;this._y=e.y*i;this._z=e.z*i;this._w=Math.cos(r);this.onChangeCallback();return this},setFromRotationMatrix:function(e){var t=e.elements,r=t[0];e=t[4];var i=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],t=t[10],l=r+o+t;0<l?(r=.5/Math.sqrt(l+1),this._w=.25/r,this._x=(h-a)*r,this._y=(i-s)*r,this._z=(n-e)*r):r>o&&r>t?(r=2*Math.sqrt(1+r-o-t),this._w=(h-a)/r,this._x=.25*r,this._y=(e+n)/r,this._z=(i+s)/r):o>t?(r=2*Math.sqrt(1+o-r-t),this._w=(i-s)/r,this._x=(e+n)/r,this._y=.25*r,this._z=(a+h)/r):(r=2*Math.sqrt(1+t-r-o),this._w=(n-e)/r,this._x=(i+s)/r,this._y=(a+h)/r,this._z=.25*r);this.onChangeCallback();return this},setFromUnitVectors:function(){var e,t;return function(r,i){void 0===e&&(e=new THREE.Vector3);t=r.dot(i)+1;1e-6>t?(t=0,Math.abs(r.x)>Math.abs(r.z)?e.set(-r.y,r.x,0):e.set(0,-r.z,r.y)):e.crossVectors(r,i);this._x=e.x;this._y=e.y;this._z=e.z;this._w=t;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e);this.onChangeCallback();return this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,n=e._z,o=e._w,a=t._x,s=t._y,h=t._z,l=t._w;this._x=r*l+o*a+i*h-n*s;this._y=i*l+o*s+n*a-r*h;this._z=n*l+o*h+r*s-i*a;this._w=o*l-r*a-i*s-n*h;this.onChangeCallback();return this},multiplyVector3:function(e){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return e.applyQuaternion(this)},slerp:function(e,t){var r=this._x,i=this._y,n=this._z,o=this._w,a=o*e._w+r*e._x+i*e._y+n*e._z;0>a?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e);if(1<=a)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);if(.001>Math.abs(h))return this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this;a=Math.sin((1-t)*s)/h;s=Math.sin(t*s)/h;this._w=o*a+this._w*s;this._x=r*a+this._x*s;this._y=i*a+this._y*s;this._z=n*a+this._z*s;this.onChangeCallback();return this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];this._w=e[3];this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(e){this.onChangeCallback=e;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)};THREE.Vector2=function(e,t){this.x=e||0;this.y=t||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){this.x=e;this.y=t;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;return this},add:function(e,t){if(void 0!==t)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;return this},addScalar:function(e){this.x+=e;this.y+=e;return this},sub:function(e,t){if(void 0!==t)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;return this},multiply:function(e){this.x*=e.x;this.y*=e.y;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;return this},divide:function(e){this.x/=e.x;this.y/=e.y;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e):this.y=this.x=0;return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);return this},clampScalar:function(){var e,t;return function(r,i){void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2);e.set(r,r);t.set(i,i);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;e=this.y-e.y;return t*t+e*e},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;return this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){this.x=e[0];this.y=e[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,t,r){this.x=e||0;this.y=t||0;this.z=r||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){this.x=e;this.y=t;this.z=r;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;return this},add:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;this.z+=e.z;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this},sub:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;this.z-=e.z;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this},multiply:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t);this.x*=e.x;this.y*=e.y;this.z*=e.z;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;return this},multiplyVectors:function(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this},applyEuler:function(){var e;return function(t){!1===t instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");void 0===e&&(e=new THREE.Quaternion);this.applyQuaternion(e.setFromEuler(t));return this}}(),applyAxisAngle:function(){var e;return function(t,r){void 0===e&&(e=new THREE.Quaternion);this.applyQuaternion(e.setFromAxisAngle(t,r));return this}}(),applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z;e=e.elements;this.x=e[0]*t+e[3]*r+e[6]*i;this.y=e[1]*t+e[4]*r+e[7]*i;this.z=e[2]*t+e[5]*r+e[8]*i;return this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z;e=e.elements;this.x=e[0]*t+e[4]*r+e[8]*i+e[12];this.y=e[1]*t+e[5]*r+e[9]*i+e[13];this.z=e[2]*t+e[6]*r+e[10]*i+e[14];return this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z;e=e.elements;var n=1/(e[3]*t+e[7]*r+e[11]*i+e[15]);this.x=(e[0]*t+e[4]*r+e[8]*i+e[12])*n;this.y=(e[1]*t+e[5]*r+e[9]*i+e[13])*n;this.z=(e[2]*t+e[6]*r+e[10]*i+e[14])*n;return this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,n=e.x,o=e.y,a=e.z;e=e.w;var s=e*t+o*i-a*r,h=e*r+a*t-n*i,l=e*i+n*r-o*t,t=-n*t-o*r-a*i;this.x=s*e+t*-n+h*-a-l*-o;this.y=h*e+t*-o+l*-n-s*-a;this.z=l*e+t*-a+s*-o-h*-n;return this},transformDirection:function(e){var t=this.x,r=this.y,i=this.z;e=e.elements;this.x=e[0]*t+e[4]*r+e[8]*i;this.y=e[1]*t+e[5]*r+e[9]*i;this.z=e[2]*t+e[6]*r+e[10]*i;this.normalize();return this},divide:function(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0;return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);this.z>e.z&&(this.z=e.z);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);this.z<e.z&&(this.z=e.z);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z);return this},clampScalar:function(){var e,t;return function(r,i){void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3);e.set(r,r,r);t.set(i,i,i);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this},cross:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,n=this.z;this.x=i*e.z-n*e.y;this.y=n*e.x-r*e.z;this.z=r*e.y-i*e.x;return this},crossVectors:function(e,t){var r=e.x,i=e.y,n=e.z,o=t.x,a=t.y,s=t.z;this.x=i*s-n*a;this.y=n*o-r*s;this.z=r*a-i*o;return this},projectOnVector:function(){var e,t;return function(r){void 0===e&&(e=new THREE.Vector3);e.copy(r).normalize();t=this.dot(e);return this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){void 0===e&&(e=new THREE.Vector3);e.copy(this).projectOnVector(t);return this.sub(e)}}(),reflect:function(){var e;return function(t){void 0===e&&(e=new THREE.Vector3);return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){e=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;e=this.z-e.z;return t*t+r*r+e*e},setEulerFromRotationMatrix:function(e,t){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(e,t){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){this.x=e.elements[12];this.y=e.elements[13];this.z=e.elements[14];return this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length();e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=t;this.y=r;this.z=e;return this},setFromMatrixColumn:function(e,t){var r=4*e,i=t.elements;this.x=i[r];this.y=i[r+1];this.z=i[r+2];return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(e,t,r,i){this.x=e||0;this.y=t||0;this.z=r||0;this.w=void 0!==i?i:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){this.x=e;this.y=t;this.z=r;this.w=i;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setW:function(e){this.w=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;this.w=void 0!==e.w?e.w:1;return this},add:function(e,t){if(void 0!==t)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;this.z+=e.z;this.w+=e.w;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;this.w+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;this.w=e.w+t.w;return this},sub:function(e,t){if(void 0!==t)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;this.z-=e.z;this.w-=e.w;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;this.w=e.w-t.w;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;this.w*=e;return this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=this.w;e=e.elements;this.x=e[0]*t+e[4]*r+e[8]*i+e[12]*n;this.y=e[1]*t+e[5]*r+e[9]*i+e[13]*n;this.z=e[2]*t+e[6]*r+e[10]*i+e[14]*n;this.w=e[3]*t+e[7]*r+e[11]*i+e[15]*n;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t);return this},setAxisAngleFromRotationMatrix:function(e){var t,r,i;e=e.elements;var n=e[0];i=e[4];var o=e[8],a=e[1],s=e[5],h=e[9];r=e[2];t=e[6];var l=e[10];if(.01>Math.abs(i-a)&&.01>Math.abs(o-r)&&.01>Math.abs(h-t)){if(.1>Math.abs(i+a)&&.1>Math.abs(o+r)&&.1>Math.abs(h+t)&&.1>Math.abs(n+s+l-3))return this.set(1,0,0,0),this;e=Math.PI;n=(n+1)/2;s=(s+1)/2;l=(l+1)/2;i=(i+a)/4;o=(o+r)/4;h=(h+t)/4;n>s&&n>l?.01>n?(t=0,i=r=.707106781):(t=Math.sqrt(n),r=i/t,i=o/t):s>l?.01>s?(t=.707106781,r=0,i=.707106781):(r=Math.sqrt(s),t=i/r,i=h/r):.01>l?(r=t=.707106781,i=0):(i=Math.sqrt(l),t=o/i,r=h/i);this.set(t,r,i,e);return this}e=Math.sqrt((t-h)*(t-h)+(o-r)*(o-r)+(a-i)*(a-i));.001>Math.abs(e)&&(e=1);this.x=(t-h)/e;this.y=(o-r)/e;this.z=(a-i)/e;this.w=Math.acos((n+s+l-1)/2);return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);this.z>e.z&&(this.z=e.z);this.w>e.w&&(this.w=e.w);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);this.z<e.z&&(this.z=e.z);this.w<e.w&&(this.w=e.w);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z);this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w);return this},clampScalar:function(){var e,t;return function(r,i){void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4);e.set(r,r,r,r);t.set(i,i,i,i);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;this.w+=(e.w-this.w)*t;return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];this.w=e[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(e,t,r,i){this._x=e||0;this._y=t||0;this._z=r||0;this._order=i||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(e){this._x=e;this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e;this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e;this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e;this.onChangeCallback()},set:function(e,t,r,i){this._x=e;this._y=t;this._z=r;this._order=i||this._order;this.onChangeCallback();return this},copy:function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._order=e._order;this.onChangeCallback();return this},setFromRotationMatrix:function(e,t){var r=THREE.Math.clamp,i=e.elements,n=i[0],o=i[4],a=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],i=i[10];t=t||this._order;"XYZ"===t?(this._y=Math.asin(r(a,-1,1)),.99999>Math.abs(a)?(this._x=Math.atan2(-l,i),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(l,-1,1)),.99999>Math.abs(l)?(this._y=Math.atan2(a,i),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(u,-1,1)),.99999>Math.abs(u)?(this._y=Math.atan2(-c,i),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===t?(this._y=Math.asin(-r(c,-1,1)),.99999>Math.abs(c)?(this._x=Math.atan2(u,i),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===t?(this._z=Math.asin(r(s,-1,1)),.99999>Math.abs(s)?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,i))):"XZY"===t?(this._z=Math.asin(-r(o,-1,1)),.99999>Math.abs(o)?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,i),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t);this._order=t;this.onChangeCallback();return this},setFromQuaternion:function(e,t,r){var i=THREE.Math.clamp,n=e.x*e.x,o=e.y*e.y,a=e.z*e.z,s=e.w*e.w;t=t||this._order;"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-n-o+a),this._y=Math.asin(i(2*(e.x*e.z+e.y*e.w),-1,1)),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+n-o-a)):"YXZ"===t?(this._x=Math.asin(i(2*(e.x*e.w-e.y*e.z),-1,1)),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-n-o+a),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-n+o-a)):"ZXY"===t?(this._x=Math.asin(i(2*(e.x*e.w+e.y*e.z),-1,1)),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-n-o+a),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-n+o-a)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-n-o+a),this._y=Math.asin(i(2*(e.y*e.w-e.x*e.z),-1,1)),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+n-o-a)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-n+o-a),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+n-o-a),this._z=Math.asin(i(2*(e.x*e.y+e.z*e.w),-1,1))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-n+o-a),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+n-o-a),this._z=Math.asin(i(2*(e.z*e.w-e.x*e.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+t);
this._order=t;if(!1!==r)this.onChangeCallback();return this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this);this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];void 0!==e[3]&&(this._order=e[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(e){this.onChangeCallback=e;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3;this.end=void 0!==t?t:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){this.start.copy(e);this.end.copy(t);return this},copy:function(e){this.start.copy(e.start);this.end.copy(e.end);return this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start);t.subVectors(this.end,this.start);var n=t.dot(t),n=t.dot(e)/n;i&&(n=THREE.Math.clamp(n,0,1));return n}}(),closestPointToPoint:function(e,t,r){e=this.closestPointToPointParameter(e,t);r=r||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){this.start.applyMatrix4(e);this.end.applyMatrix4(e);return this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==t?t:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var i=e.copy(r).multiplyScalar(.5);this.min.copy(t).sub(i);this.max.copy(t).add(i);return this}}(),copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==t?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var i=e.copy(r).multiplyScalar(.5);this.min.copy(t).sub(i);this.max.copy(t).add(i);return this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;t.updateMatrixWorld(!0);this.makeEmpty();t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var i=t.geometry.vertices,n=0,o=i.length;n<o;n++)e.copy(i[n]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)});return this}}(),copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){t=t||new THREE.Sphere;t.center=this.center();t.radius=.5*this.size(e).length();return t}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t);e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t);e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t);e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t);e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t);e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t);e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t);e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t);this.makeEmpty();this.setFromPoints(e);return this}}(),translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(e,t,r,i,n,o,a,s,h){var l=this.elements=new Float32Array(9);l[0]=void 0!==e?e:1;l[3]=t||0;l[6]=r||0;l[1]=i||0;l[4]=void 0!==n?n:1;l[7]=o||0;l[2]=a||0;l[5]=s||0;l[8]=void 0!==h?h:1};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,n,o,a,s,h){var l=this.elements;l[0]=e;l[3]=t;l[6]=r;l[1]=i;l[4]=n;l[7]=o;l[2]=a;l[5]=s;l[8]=h;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(e){e=e.elements;this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]);return this},multiplyVector3:function(e){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)},multiplyVector3Array:function(e){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0);void 0===i&&(i=t.length);for(var n=0;n<i;n+=3,r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix3(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[3]*=e;t[6]*=e;t[1]*=e;t[4]*=e;t[7]*=e;t[2]*=e;t[5]*=e;t[8]*=e;return this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],e=e[8];return t*o*e-t*a*h-r*n*e+r*a*s+i*n*h-i*o*s},getInverse:function(e,t){var r=e.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9];i[1]=-r[10]*r[1]+r[2]*r[9];i[2]=r[6]*r[1]-r[2]*r[5];i[3]=-r[10]*r[4]+r[6]*r[8];i[4]=r[10]*r[0]-r[2]*r[8];i[5]=-r[6]*r[0]+r[2]*r[4];i[6]=r[9]*r[4]-r[5]*r[8];i[7]=-r[9]*r[0]+r[1]*r[8];i[8]=r[5]*r[0]-r[1]*r[4];r=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===r){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/r);return this},transpose:function(){var e,t=this.elements;e=t[1];t[1]=t[3];t[3]=e;e=t[2];t[2]=t[6];t[6]=e;e=t[5];t[5]=t[7];t[7]=e;return this},flattenToArrayOffset:function(e,t){var r=this.elements;e[t]=r[0];e[t+1]=r[1];e[t+2]=r[2];e[t+3]=r[3];e[t+4]=r[4];e[t+5]=r[5];e[t+6]=r[6];e[t+7]=r[7];e[t+8]=r[8];return e},getNormalMatrix:function(e){this.getInverse(e).transpose();return this},transposeIntoArray:function(e){var t=this.elements;e[0]=t[0];e[1]=t[3];e[2]=t[6];e[3]=t[1];e[4]=t[4];e[5]=t[7];e[6]=t[2];e[7]=t[5];e[8]=t[8];return this},fromArray:function(e){this.elements.set(e);return this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}};THREE.Matrix4=function(e,t,r,i,n,o,a,s,h,l,c,u,f,E,p,d){var m=this.elements=new Float32Array(16);m[0]=void 0!==e?e:1;m[4]=t||0;m[8]=r||0;m[12]=i||0;m[1]=n||0;m[5]=void 0!==o?o:1;m[9]=a||0;m[13]=s||0;m[2]=h||0;m[6]=l||0;m[10]=void 0!==c?c:1;m[14]=u||0;m[3]=f||0;m[7]=E||0;m[11]=p||0;m[15]=void 0!==d?d:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,n,o,a,s,h,l,c,u,f,E,p,d){var m=this.elements;m[0]=e;m[4]=t;m[8]=r;m[12]=i;m[1]=n;m[5]=o;m[9]=a;m[13]=s;m[2]=h;m[6]=l;m[10]=c;m[14]=u;m[3]=f;m[7]=E;m[11]=p;m[15]=d;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(e){this.elements.set(e.elements);return this},extractPosition:function(e){console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(e)},copyPosition:function(e){var t=this.elements;e=e.elements;t[12]=e[12];t[13]=e[13];t[14]=e[14];return this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements;t=t.elements;var i=1/e.set(t[0],t[1],t[2]).length(),n=1/e.set(t[4],t[5],t[6]).length(),o=1/e.set(t[8],t[9],t[10]).length();r[0]=t[0]*i;r[1]=t[1]*i;r[2]=t[2]*i;r[4]=t[4]*n;r[5]=t[5]*n;r[6]=t[6]*n;r[8]=t[8]*o;r[9]=t[9]*o;r[10]=t[10]*o;return this}}(),makeRotationFromEuler:function(e){!1===e instanceof THREE.Euler&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,r=e.x,i=e.y,n=e.z,o=Math.cos(r),r=Math.sin(r),a=Math.cos(i),i=Math.sin(i),s=Math.cos(n),n=Math.sin(n);if("XYZ"===e.order){e=o*s;var h=o*n,l=r*s,c=r*n;t[0]=a*s;t[4]=-a*n;t[8]=i;t[1]=h+l*i;t[5]=e-c*i;t[9]=-r*a;t[2]=c-e*i;t[6]=l+h*i;t[10]=o*a}else"YXZ"===e.order?(e=a*s,h=a*n,l=i*s,c=i*n,t[0]=e+c*r,t[4]=l*r-h,t[8]=o*i,t[1]=o*n,t[5]=o*s,t[9]=-r,t[2]=h*r-l,t[6]=c+e*r,t[10]=o*a):"ZXY"===e.order?(e=a*s,h=a*n,l=i*s,c=i*n,t[0]=e-c*r,t[4]=-o*n,t[8]=l+h*r,t[1]=h+l*r,t[5]=o*s,t[9]=c-e*r,t[2]=-o*i,t[6]=r,t[10]=o*a):"ZYX"===e.order?(e=o*s,h=o*n,l=r*s,c=r*n,t[0]=a*s,t[4]=l*i-h,t[8]=e*i+c,t[1]=a*n,t[5]=c*i+e,t[9]=h*i-l,t[2]=-i,t[6]=r*a,t[10]=o*a):"YZX"===e.order?(e=o*a,h=o*i,l=r*a,c=r*i,t[0]=a*s,t[4]=c-e*n,t[8]=l*n+h,t[1]=n,t[5]=o*s,t[9]=-r*s,t[2]=-i*s,t[6]=h*n+l,t[10]=e-c*n):"XZY"===e.order&&(e=o*a,h=o*i,l=r*a,c=r*i,t[0]=a*s,t[4]=-n,t[8]=i*s,t[1]=e*n+c,t[5]=o*s,t[9]=h*n-l,t[2]=l*n-h,t[6]=r*s,t[10]=c*n+e);t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},setRotationFromQuaternion:function(e){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,o=e.w,a=r+r,s=i+i,h=n+n;e=r*a;var l=r*s,r=r*h,c=i*s,i=i*h,n=n*h,a=o*a,s=o*s,o=o*h;t[0]=1-(c+n);t[4]=l-o;t[8]=r+s;t[1]=l+o;t[5]=1-(e+n);t[9]=i-a;t[2]=r-s;t[6]=i+a;t[10]=1-(e+c);t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o){var a=this.elements;r.subVectors(i,n).normalize();0===r.length()&&(r.z=1);e.crossVectors(o,r).normalize();0===e.length()&&(r.x+=1e-4,e.crossVectors(o,r).normalize());t.crossVectors(r,e);a[0]=e.x;a[4]=t.x;a[8]=r.x;a[1]=e.y;a[5]=t.y;a[9]=r.y;a[2]=e.z;a[6]=t.z;a[10]=r.z;return this}}(),multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,o=r[0],a=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],f=r[13],E=r[2],p=r[6],d=r[10],m=r[14],g=r[3],T=r[7],v=r[11],r=r[15],y=i[0],R=i[4],x=i[8],H=i[12],_=i[1],b=i[5],w=i[9],M=i[13],S=i[2],C=i[6],A=i[10],L=i[14],P=i[3],F=i[7],D=i[11],i=i[15];n[0]=o*y+a*_+s*S+h*P;n[4]=o*R+a*b+s*C+h*F;n[8]=o*x+a*w+s*A+h*D;n[12]=o*H+a*M+s*L+h*i;n[1]=l*y+c*_+u*S+f*P;n[5]=l*R+c*b+u*C+f*F;n[9]=l*x+c*w+u*A+f*D;n[13]=l*H+c*M+u*L+f*i;n[2]=E*y+p*_+d*S+m*P;n[6]=E*R+p*b+d*C+m*F;n[10]=E*x+p*w+d*A+m*D;n[14]=E*H+p*M+d*L+m*i;n[3]=g*y+T*_+v*S+r*P;n[7]=g*R+T*b+v*C+r*F;n[11]=g*x+T*w+v*A+r*D;n[15]=g*H+T*M+v*L+r*i;return this},multiplyToArray:function(e,t,r){var i=this.elements;this.multiplyMatrices(e,t);r[0]=i[0];r[1]=i[1];r[2]=i[2];r[3]=i[3];r[4]=i[4];r[5]=i[5];r[6]=i[6];r[7]=i[7];r[8]=i[8];r[9]=i[9];r[10]=i[10];r[11]=i[11];r[12]=i[12];r[13]=i[13];r[14]=i[14];r[15]=i[15];return this},multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[4]*=e;t[8]*=e;t[12]*=e;t[1]*=e;t[5]*=e;t[9]*=e;t[13]*=e;t[2]*=e;t[6]*=e;t[10]*=e;t[14]*=e;t[3]*=e;t[7]*=e;t[11]*=e;t[15]*=e;return this},multiplyVector3:function(e){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return e.applyProjection(this)},multiplyVector4:function(e){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},multiplyVector3Array:function(e){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0);void 0===i&&(i=t.length);for(var n=0;n<i;n+=3,r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix4(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");e.transformDirection(this)},crossVector:function(e){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],f=e[14];return e[3]*(+n*s*c-i*h*c-n*a*u+r*h*u+i*a*f-r*s*f)+e[7]*(+t*s*f-t*h*u+n*o*u-i*o*f+i*h*l-n*s*l)+e[11]*(+t*h*c-t*a*f-n*o*c+r*o*f+n*a*l-r*h*l)+e[15]*(-i*a*l-t*s*c+t*a*u+i*o*c-r*o*u+r*s*l)},transpose:function(){var e=this.elements,t;t=e[1];e[1]=e[4];e[4]=t;t=e[2];e[2]=e[8];e[8]=t;t=e[6];e[6]=e[9];e[9]=t;t=e[3];e[3]=e[12];e[12]=t;t=e[7];e[7]=e[13];e[13]=t;t=e[11];e[11]=e[14];e[14]=t;return this},flattenToArrayOffset:function(e,t){var r=this.elements;e[t]=r[0];e[t+1]=r[1];e[t+2]=r[2];e[t+3]=r[3];e[t+4]=r[4];e[t+5]=r[5];e[t+6]=r[6];e[t+7]=r[7];e[t+8]=r[8];e[t+9]=r[9];e[t+10]=r[10];e[t+11]=r[11];e[t+12]=r[12];e[t+13]=r[13];e[t+14]=r[14];e[t+15]=r[15];return e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;t[12]=e.x;t[13]=e.y;t[14]=e.z;return this},getInverse:function(e,t){var r=this.elements,i=e.elements,n=i[0],o=i[4],a=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],f=i[2],E=i[6],p=i[10],d=i[14],m=i[3],g=i[7],T=i[11],i=i[15];r[0]=c*d*g-u*p*g+u*E*T-l*d*T-c*E*i+l*p*i;r[4]=s*p*g-a*d*g-s*E*T+o*d*T+a*E*i-o*p*i;r[8]=a*u*g-s*c*g+s*l*T-o*u*T-a*l*i+o*c*i;r[12]=s*c*E-a*u*E-s*l*p+o*u*p+a*l*d-o*c*d;r[1]=u*p*m-c*d*m-u*f*T+h*d*T+c*f*i-h*p*i;r[5]=a*d*m-s*p*m+s*f*T-n*d*T-a*f*i+n*p*i;r[9]=s*c*m-a*u*m-s*h*T+n*u*T+a*h*i-n*c*i;r[13]=a*u*f-s*c*f+s*h*p-n*u*p-a*h*d+n*c*d;r[2]=l*d*m-u*E*m+u*f*g-h*d*g-l*f*i+h*E*i;r[6]=s*E*m-o*d*m-s*f*g+n*d*g+o*f*i-n*E*i;r[10]=o*u*m-s*l*m+s*h*g-n*u*g-o*h*i+n*l*i;r[14]=s*l*f-o*u*f-s*h*E+n*u*E+o*h*d-n*l*d;r[3]=c*E*m-l*p*m-c*f*g+h*p*g+l*f*T-h*E*T;r[7]=o*p*m-a*E*m+a*f*g-n*p*g-o*f*T+n*E*T;r[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*T-n*l*T;r[15]=o*c*f-a*l*f+a*h*E-n*c*E-o*h*p+n*l*p;r=n*r[0]+h*r[4]+f*r[8]+m*r[12];if(0==r){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/r);return this},translate:function(e){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(e){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(e){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(e){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,i=e.y;e=e.z;t[0]*=r;t[4]*=i;t[8]*=e;t[1]*=r;t[5]*=i;t[9]*=e;t[2]*=r;t[6]*=i;t[10]*=e;t[3]*=r;t[7]*=i;t[11]*=e;return this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,r){this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1);return this},makeRotationX:function(e){var t=Math.cos(e);e=Math.sin(e);this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1);return this},makeRotationY:function(e){var t=Math.cos(e);e=Math.sin(e);this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1);return this},makeRotationZ:function(e){var t=Math.cos(e);e=Math.sin(e);this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),n=1-r,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;this.set(h*o+r,h*a-i*s,h*s+i*a,0,h*a+i*s,l*a+r,l*s-i*o,0,h*s-i*a,l*s+i*o,n*s*s+r,0,0,0,0,1);return this},makeScale:function(e,t,r){this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1);return this},compose:function(e,t,r){this.makeRotationFromQuaternion(t);this.scale(r);this.setPosition(e);return this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,i,n){var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),h=e.set(o[8],o[9],o[10]).length();0>this.determinant()&&(a=-a);r.x=o[12];r.y=o[13];r.z=o[14];t.elements.set(this.elements);r=1/a;var o=1/s,l=1/h;t.elements[0]*=r;t.elements[1]*=r;t.elements[2]*=r;t.elements[4]*=o;t.elements[5]*=o;t.elements[6]*=o;t.elements[8]*=l;t.elements[9]*=l;t.elements[10]*=l;i.setFromRotationMatrix(t);n.x=a;n.y=s;n.z=h;return this}}(),makeFrustum:function(e,t,r,i,n,o){var a=this.elements;a[0]=2*n/(t-e);a[4]=0;a[8]=(t+e)/(t-e);a[12]=0;a[1]=0;a[5]=2*n/(i-r);a[9]=(i+r)/(i-r);a[13]=0;a[2]=0;a[6]=0;a[10]=-(o+n)/(o-n);a[14]=-2*o*n/(o-n);a[3]=0;a[7]=0;a[11]=-1;a[15]=0;return this},makePerspective:function(e,t,r,i){e=r*Math.tan(THREE.Math.degToRad(.5*e));var n=-e;return this.makeFrustum(n*t,e*t,n,e,r,i)},makeOrthographic:function(e,t,r,i,n,o){var a=this.elements,s=t-e,h=r-i,l=o-n;a[0]=2/s;a[4]=0;a[8]=0;a[12]=-((t+e)/s);a[1]=0;a[5]=2/h;a[9]=0;a[13]=-((r+i)/h);a[2]=0;a[6]=0;a[10]=-2/l;a[14]=-((o+n)/l);a[3]=0;a[7]=0;a[11]=0;a[15]=1;return this},fromArray:function(e){this.elements.set(e);return this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}};THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3;this.direction=void 0!==t?t:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){this.origin.copy(e);this.direction.copy(t);return this},copy:function(e){this.origin.copy(e.origin);this.direction.copy(e.direction);return this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){this.origin.copy(this.at(t,e));return this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return 0>i?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);if(0>r)return this.origin.distanceTo(t);e.copy(this.direction).multiplyScalar(r).add(this.origin);return e.distanceTo(t)}}(),distanceSqToSegment:function(e,t,r,i){var n=e.clone().add(t).multiplyScalar(.5),o=t.clone().sub(e).normalize(),a=.5*e.distanceTo(t),s=this.origin.clone().sub(n);e=-this.direction.dot(o);t=s.dot(this.direction);var h=-s.dot(o),l=s.lengthSq(),c=Math.abs(1-e*e),u,f;0<=c?(s=e*h-t,u=e*t-h,f=a*c,0<=s?u>=-f?u<=f?(a=1/c,s*=a,u*=a,e=s*(s+e*u+2*t)+u*(e*s+u+2*h)+l):(u=a,s=Math.max(0,-(e*u+t)),e=-s*s+u*(u+2*h)+l):(u=-a,s=Math.max(0,-(e*u+t)),e=-s*s+u*(u+2*h)+l):u<=-f?(s=Math.max(0,-(-e*a+t)),u=0<s?-a:Math.min(Math.max(-a,-h),a),e=-s*s+u*(u+2*h)+l):u<=f?(s=0,u=Math.min(Math.max(-a,-h),a),e=u*(u+2*h)+l):(s=Math.max(0,-(e*a+t)),u=0<s?a:Math.min(Math.max(-a,-h),a),e=-s*s+u*(u+2*h)+l)):(u=0<e?-a:a,s=Math.max(0,-(e*u+t)),e=-s*s+u*(u+2*h)+l);r&&r.copy(this.direction.clone().multiplyScalar(s).add(this.origin));i&&i.copy(o.clone().multiplyScalar(u).add(n));return e},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},intersectSphere:function(){var e=new THREE.Vector3;return function(t,r){e.subVectors(t.center,this.origin);var i=e.dot(this.direction),n=e.dot(e)-i*i,o=t.radius*t.radius;if(n>o)return null;o=Math.sqrt(o-n);n=i-o;i+=o;return 0>n&&0>i?null:0>n?this.at(i,r):this.at(n,r)}}(),isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||0>e.normal.dot(this.direction)*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;e=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=e?e:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,i,n,o,a;i=1/this.direction.x;o=1/this.direction.y;a=1/this.direction.z;var s=this.origin;0<=i?(r=(e.min.x-s.x)*i,i*=e.max.x-s.x):(r=(e.max.x-s.x)*i,i*=e.min.x-s.x);0<=o?(n=(e.min.y-s.y)*o,o*=e.max.y-s.y):(n=(e.max.y-s.y)*o,o*=e.min.y-s.y);if(r>o||n>i)return null;if(n>r||r!==r)r=n;if(o<i||i!==i)i=o;0<=a?(n=(e.min.z-s.z)*a,a*=e.max.z-s.z):(n=(e.max.z-s.z)*a,a*=e.min.z-s.z);if(r>a||n>i)return null;if(n>r||r!==r)r=n;if(a<i||i!==i)i=a;return 0>i?null:this.at(0<=r?r:i,t)},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(n,o,a,s,h){t.subVectors(o,n);r.subVectors(a,n);i.crossVectors(t,r);o=this.direction.dot(i);if(0<o){if(s)return null;s=1}else if(0>o)s=-1,o=-o;else return null;e.subVectors(this.origin,n);n=s*this.direction.dot(r.crossVectors(e,r));if(0>n)return null;a=s*this.direction.dot(t.cross(e));if(0>a||n+a>o)return null;n=-s*e.dot(i);return 0>n?null:this.at(n/o,h)}}(),applyMatrix4:function(e){this.direction.add(this.origin).applyMatrix4(e);this.origin.applyMatrix4(e);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3;this.radius=void 0!==t?t:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){this.center.copy(e);this.radius=t;return this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var i=this.center;void 0!==r?i.copy(r):e.setFromPoints(t).center(i);for(var n=0,o=0,a=t.length;o<a;o++)n=Math.max(n,i.distanceToSquared(t[o]));this.radius=Math.sqrt(n);return this}}(),copy:function(e){this.center.copy(e.center);this.radius=e.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;i.copy(e);r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center));return i},getBoundingBox:function(e){e=e||new THREE.Box3;e.set(this.center,this.center);e.expandByScalar(this.radius);return e},applyMatrix4:function(e){this.center.applyMatrix4(e);this.radius*=e.getMaxScaleOnAxis();return this},translate:function(e){this.center.add(e);return this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(e,t,r,i,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,i,n,o){var a=this.planes;a[0].copy(e);a[1].copy(t);a[2].copy(r);a[3].copy(i);a[4].copy(n);a[5].copy(o);return this},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements;e=r[0];var i=r[1],n=r[2],o=r[3],a=r[4],s=r[5],h=r[6],l=r[7],c=r[8],u=r[9],f=r[10],E=r[11],p=r[12],d=r[13],m=r[14],r=r[15];t[0].setComponents(o-e,l-a,E-c,r-p).normalize();t[1].setComponents(o+e,l+a,E+c,r+p).normalize();t[2].setComponents(o+i,l+s,E+u,r+d).normalize();t[3].setComponents(o-i,l-s,E-u,r-d).normalize();t[4].setComponents(o-n,l-h,E-f,r-m).normalize();t[5].setComponents(o+n,l+h,E+f,r+m).normalize();return this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;null===r.boundingSphere&&r.computeBoundingSphere();e.copy(r.boundingSphere);e.applyMatrix4(t.matrixWorld);return this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes,r=e.center;e=-e.radius;for(var i=0;6>i;i++)if(t[i].distanceToPoint(r)<e)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var i=this.planes,n=0;6>n;n++){var o=i[n];e.x=0<o.normal.x?r.min.x:r.max.x;t.x=0<o.normal.x?r.max.x:r.min.x;e.y=0<o.normal.y?r.min.y:r.max.y;t.y=0<o.normal.y?r.max.y:r.min.y;e.z=0<o.normal.z?r.min.z:r.max.z;t.z=0<o.normal.z?r.max.z:r.min.z;var a=o.distanceToPoint(e),o=o.distanceToPoint(t);if(0>a&&0>o)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0);this.constant=void 0!==t?t:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){this.normal.copy(e);this.constant=t;return this},setComponents:function(e,t,r,i){this.normal.set(e,t,r);this.constant=i;return this},setFromNormalAndCoplanarPoint:function(e,t){this.normal.copy(e);this.constant=-t.dot(this.normal);return this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,n){i=e.subVectors(n,i).cross(t.subVectors(r,i)).normalize();this.setFromNormalAndCoplanarPoint(i,r);return this}}(),copy:function(e){this.normal.copy(e.normal);this.constant=e.constant;return this},normalize:function(){var e=1/this.normal.length();this.normal.multiplyScalar(e);this.constant*=e;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start);e=this.distanceToPoint(e.end);return 0>t&&0<e||0>e&&0<t},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var i=r||new THREE.Vector3,n=t.delta(e),o=this.normal.dot(n);if(0==o){if(0==this.distanceToPoint(t.start))return i.copy(t.start)}else return o=-(t.start.dot(this.normal)+this.constant)/o,0>o||1<o?void 0:i.copy(n).multiplyScalar(o).add(t.start)}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Matrix3;return function(i,n){var o=n||r.getNormalMatrix(i),o=e.copy(this.normal).applyMatrix3(o),a=this.coplanarPoint(t);a.applyMatrix4(i);this.setFromNormalAndCoplanarPoint(o,a);return this}}(),translate:function(e){this.constant-=e.dot(this.normal);return this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=Array(36),r=0,i;return function(){for(var n=0;36>n;n++)8==n||13==n||18==n||23==n?t[n]="-":14==n?t[n]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),i=r&15,r>>=4,t[n]=e[19==n?i&3|8:i]);return t.join("")}}(),clamp:function(e,t,r){return e<t?t:e>r?r:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)},smoothstep:function(e,t,r){if(e<=t)return 0;if(e>=r)return 1;e=(e-t)/(r-t);return e*e*(3-2*e)},smootherstep:function(e,t,r){if(e<=t)return 0;
if(e>=r)return 1;e=(e-t)/(r-t);return e*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:0<e?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e}};THREE.Spline=function(e){function t(e,t,r,i,n,o,a){e=.5*(r-e);i=.5*(i-t);return(2*(t-r)+e+i)*a+(-3*(t-r)-2*e-i)*o+e*n+t}this.points=e;var r=[],i={x:0,y:0,z:0},n,o,a,s,h,l,c,u,f;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}};this.getPoint=function(e){n=(this.points.length-1)*e;o=Math.floor(n);a=n-o;r[0]=0===o?o:o-1;r[1]=o;r[2]=o>this.points.length-2?this.points.length-1:o+1;r[3]=o>this.points.length-3?this.points.length-1:o+2;l=this.points[r[0]];c=this.points[r[1]];u=this.points[r[2]];f=this.points[r[3]];s=a*a;h=a*s;i.x=t(l.x,c.x,u.x,f.x,a,s,h);i.y=t(l.y,c.y,u.y,f.y,a,s,h);i.z=t(l.z,c.z,u.z,f.z,a,s,h);return i};this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;e<r;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i};this.getLength=function(e){var t,r,i,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;s[0]=0;e||(e=100);r=this.points.length*e;o.copy(this.points[0]);for(e=1;e<r;e++)t=e/r,i=this.getPoint(t),a.copy(i),h+=a.distanceTo(o),o.copy(i),t*=this.points.length-1,t=Math.floor(t),t!=n&&(s[t]=h,n=t);s[s.length]=h;return{chunks:s,total:h}};this.reparametrizeByArcLength=function(e){var t,r,i,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();s.push(h.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){r=l.chunks[t]-l.chunks[t-1];a=Math.ceil(e*r/l.total);n=(t-1)/(this.points.length-1);o=t/(this.points.length-1);for(r=1;r<a-1;r++)i=n+1/a*r*(o-n),i=this.getPoint(i),s.push(h.copy(i).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}};THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==t?t:new THREE.Vector3;this.c=void 0!==r?r:new THREE.Vector3};THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,i,n){n=n||new THREE.Vector3;n.subVectors(i,r);e.subVectors(t,r);n.cross(e);t=n.lengthSq();return 0<t?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a,s){e.subVectors(a,n);t.subVectors(o,n);r.subVectors(i,n);i=e.dot(e);n=e.dot(t);o=e.dot(r);var h=t.dot(t);a=t.dot(r);var l=i*h-n*n;s=s||new THREE.Vector3;if(0==l)return s.set(-2,-1,-1);l=1/l;h=(h*o-n*a)*l;i=(i*a-n*o)*l;return s.set(1-h-i,i,h)}}();THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,i,n){t=THREE.Triangle.barycoordFromPoint(t,r,i,n,e);return 0<=t.x&&0<=t.y&&1>=t.x+t.y}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){this.a.copy(e);this.b.copy(t);this.c.copy(r);return this},setFromPointsAndIndices:function(e,t,r,i){this.a.copy(e[t]);this.b.copy(e[r]);this.c.copy(e[i]);return this},copy:function(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){e.subVectors(this.c,this.b);t.subVectors(this.a,this.b);return.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var e=0;this.autoStart&&!this.running&&this.start();if(this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),e=.001*(t-this.oldTime);this.oldTime=t;this.elapsedTime+=e}return e}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener;e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]);-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var r=[],i=t.length,n=0;n<i;n++)r[n]=t[n];for(n=0;n<i;n++)r[n].call(this,e)}}}};(function(e){e.Raycaster=function(t,r,i,n){this.ray=new e.Ray(t,r);this.near=i||0;this.far=n||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var t=function(e,t){return e.distance-t.distance},r=function(e,t,i,n){e.raycast(t,i);if(!0===n){e=e.children;n=0;for(var o=e.length;n<o;n++)r(e[n],t,i,!0)}};e.Raycaster.prototype={constructor:e.Raycaster,precision:1e-4,linePrecision:1,set:function(e,t){this.ray.set(e,t)},intersectObject:function(e,i){var n=[];r(e,this,n,i);n.sort(t);return n},intersectObjects:function(e,i){for(var n=[],o=0,a=e.length;o<a;o++)r(e[o],this,n,i);n.sort(t);return n}}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var e=new THREE.Vector3,t=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1);t.onChange(function(){r.setFromEuler(t,!1)});r.onChange(function(){t.setFromQuaternion(r,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i}});this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");return this.rotation.order},set eulerOrder(e){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");this.rotation.order=e},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){e.setFromAxisAngle(t,r);this.quaternion.multiply(e);return this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){e.copy(t).applyQuaternion(this.quaternion);this.position.add(e.multiplyScalar(r));return this}}(),translate:function(e,t){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up);this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}if(e===this)return console.error("THREE.Object3D.add:",e,"can't be added as a child of itself."),this;if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e);e.parent=this;e.dispatchEvent({type:"added"});this.children.push(e);for(t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}else console.error("THREE.Object3D.add:",e,"is not an instance of THREE.Object3D.");return this},remove:function(e){if(1<arguments.length)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);t=this.children.indexOf(e);if(-1!==t){e.parent=void 0;e.dispatchEvent({type:"removed"});this.children.splice(t,1);for(t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},raycast:function(){},traverse:function(e){e(this);for(var t=0,r=this.children.length;t<r;t++)this.children[t].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=0,r=this.children.length;t<r;t++)this.children[t].traverseVisible(e)}},getObjectById:function(e,t){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r];if(n.id===e||!0===t&&(n=n.getObjectById(e,t),void 0!==n))return n}},getObjectByName:function(e,t){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r];if(n.name===e||!0===t&&(n=n.getObjectByName(e,t),void 0!==n))return n}},getChildByName:function(e,t){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(e,t)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){void 0===e&&(e=new THREE.Object3D);void 0===t&&(t=!0);e.name=this.name;e.up.copy(this.up);e.position.copy(this.position);e.quaternion.copy(this.quaternion);e.scale.copy(this.scale);e.renderDepth=this.renderDepth;e.rotationAutoUpdate=this.rotationAutoUpdate;e.matrix.copy(this.matrix);e.matrixWorld.copy(this.matrixWorld);e.matrixAutoUpdate=this.matrixAutoUpdate;e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;e.visible=this.visible;e.castShadow=this.castShadow;e.receiveShadow=this.receiveShadow;e.frustumCulled=this.frustumCulled;e.userData=JSON.parse(JSON.stringify(this.userData));if(!0===t)for(var r=0;r<this.children.length;r++)e.add(this.children[r].clone());return e}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function e(){if(u===E){var e=new THREE.RenderableVertex;f.push(e);E++;u++;return e}return f[u++]}function t(){if(d===g){var e=new THREE.RenderableFace;m.push(e);g++;d++;return e}return m[d++]}function r(){if(v===R){var e=new THREE.RenderableLine;y.push(e);R++;v++;return e}return y[v++]}function i(){if(H===b){var e=new THREE.RenderableSprite;_.push(e);b++;H++;return e}return _[H++]}function n(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function o(e,t){var r=0,i=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;if(0<=n&&0<=o&&0<=a&&0<=s)return!0;if(0>n&&0>o||0>a&&0>s)return!1;0>n?r=Math.max(r,n/(n-o)):0>o&&(i=Math.min(i,n/(n-o)));0>a?r=Math.max(r,a/(a-s)):0>s&&(i=Math.min(i,a/(a-s)));if(i<r)return!1;e.lerp(t,r);t.lerp(e,1-i);return!0}var a,s,h=[],l=0,c,u,f=[],E=0,p,d,m=[],g=0,T,v,y=[],R=0,x,H,_=[],b=0,w={objects:[],lights:[],elements:[]},M=new THREE.Vector3,S=new THREE.Vector3,C=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector4,P=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),F=new THREE.Box3,D=Array(3),U=new THREE.Matrix4,V=new THREE.Matrix4,z,B=new THREE.Matrix4,k=new THREE.Matrix3,N=new THREE.Frustum,O=new THREE.Vector4,I=new THREE.Vector4;this.projectVector=function(e,t){t.matrixWorldInverse.getInverse(t.matrixWorld);V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);return e.applyProjection(V)};this.unprojectVector=function(){var e=new THREE.Matrix4;return function(t,r){e.getInverse(r.projectionMatrix);V.multiplyMatrices(r.matrixWorld,e);return t.applyProjection(V)}}();this.pickingRay=function(e,t){e.z=-1;var r=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,t);this.unprojectVector(r,t);r.sub(e).normalize();return new THREE.Raycaster(e,r)};var G=new function(){var i=[],n=[],o=null,a=null,s=new THREE.Matrix3,h=function(e){var t=e.positionWorld,r=e.positionScreen;t.copy(e.position).applyMatrix4(z);r.copy(t).applyMatrix4(V);t=1/r.w;r.x*=t;r.y*=t;r.z*=t;e.visible=-1<=r.x&&1>=r.x&&-1<=r.y&&1>=r.y&&-1<=r.z&&1>=r.z},l=function(e,t,r){if(!0===e.visible||!0===t.visible||!0===r.visible)return!0;D[0]=e.positionScreen;D[1]=t.positionScreen;D[2]=r.positionScreen;return P.isIntersectionBox(F.setFromPoints(D))},u=function(e,t,r){return 0>(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)};return{setObject:function(e){o=e;a=o.material;s.getNormalMatrix(o.matrixWorld);i.length=0;n.length=0},projectVertex:h,checkTriangleVisibility:l,checkBackfaceCulling:u,pushVertex:function(t,r,i){c=e();c.position.set(t,r,i);h(c)},pushNormal:function(e,t,r){i.push(e,t,r)},pushUv:function(e,t){n.push(e,t)},pushLine:function(e,t){var i=f[e],n=f[t];T=r();T.id=o.id;T.v1.copy(i);T.v2.copy(n);T.z=(i.positionScreen.z+n.positionScreen.z)/2;T.material=o.material;w.elements.push(T)},pushTriangle:function(e,r,h){var c=f[e],E=f[r],d=f[h];if(!1!==l(c,E,d)&&(a.side===THREE.DoubleSide||!0===u(c,E,d))){p=t();p.id=o.id;p.v1.copy(c);p.v2.copy(E);p.v3.copy(d);p.z=(c.positionScreen.z+E.positionScreen.z+d.positionScreen.z)/3;for(c=0;3>c;c++)E=3*arguments[c],d=p.vertexNormalsModel[c],d.set(i[E],i[E+1],i[E+2]),d.applyMatrix3(s).normalize(),E=2*arguments[c],p.uvs[c].set(n[E],n[E+1]);p.vertexNormalsLength=3;p.material=o.material;w.elements.push(p)}}}};this.projectScene=function(c,E,m,g){H=v=d=0;w.elements.length=0;!0===c.autoUpdate&&c.updateMatrixWorld();void 0===E.parent&&E.updateMatrixWorld();U.copy(E.matrixWorldInverse.getInverse(E.matrixWorld));V.multiplyMatrices(E.projectionMatrix,U);N.setFromMatrix(V);s=0;w.objects.length=0;w.lights.length=0;c.traverseVisible(function(e){if(e instanceof THREE.Light)w.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite)if(!1===e.frustumCulled||!0===N.intersectsObject(e)){if(s===l){var t=new THREE.RenderableObject;h.push(t);l++;s++;a=t}else a=h[s++];a.id=e.id;a.object=e;null!==e.renderDepth?a.z=e.renderDepth:(A.setFromMatrixPosition(e.matrixWorld),A.applyProjection(V),a.z=A.z);w.objects.push(a)}});!0===m&&w.objects.sort(n);c=0;for(m=w.objects.length;c<m;c++){var y=w.objects[c].object,R=y.geometry;G.setObject(y);z=y.matrixWorld;u=0;if(y instanceof THREE.Mesh)if(R instanceof THREE.BufferGeometry){var _=R.attributes,y=R.offsets;if(void 0!==_.position){for(var b=_.position.array,R=0,P=b.length;R<P;R+=3)G.pushVertex(b[R],b[R+1],b[R+2]);if(void 0!==_.normal)for(var F=_.normal.array,R=0,P=F.length;R<P;R+=3)G.pushNormal(F[R],F[R+1],F[R+2]);if(void 0!==_.uv)for(F=_.uv.array,R=0,P=F.length;R<P;R+=2)G.pushUv(F[R],F[R+1]);if(void 0!==_.index)if(_=_.index.array,0<y.length)for(c=0;c<y.length;c++)for(P=y[c],b=P.index,R=P.start,P=P.start+P.count;R<P;R+=3)G.pushTriangle(_[R]+b,_[R+1]+b,_[R+2]+b);else for(R=0,P=_.length;R<P;R+=3)G.pushTriangle(_[R],_[R+1],_[R+2]);else for(R=0,P=b.length/3;R<P;R+=3)G.pushTriangle(R,R+1,R+2)}}else{if(R instanceof THREE.Geometry){var D=R.vertices,P=R.faces,_=R.faceVertexUvs[0];k.getNormalMatrix(z);for(var b=y.material instanceof THREE.MeshFaceMaterial,F=!0===b?y.material:null,W=0,j=D.length;W<j;W++){var X=D[W];G.pushVertex(X.x,X.y,X.z)}D=0;for(W=P.length;D<W;D++){var j=P[D],Y=!0===b?F.materials[j.materialIndex]:y.material;if(void 0!==Y){var q=Y.side,X=f[j.a],K=f[j.b],Z=f[j.c];if(!0===Y.morphTargets){var Q=R.morphTargets,J=y.morphTargetInfluences,$=X.position,et=K.position,tt=Z.position;M.set(0,0,0);S.set(0,0,0);C.set(0,0,0);for(var rt=0,it=Q.length;rt<it;rt++){var nt=J[rt];if(0!==nt){var ot=Q[rt].vertices;M.x+=(ot[j.a].x-$.x)*nt;M.y+=(ot[j.a].y-$.y)*nt;M.z+=(ot[j.a].z-$.z)*nt;S.x+=(ot[j.b].x-et.x)*nt;S.y+=(ot[j.b].y-et.y)*nt;S.z+=(ot[j.b].z-et.z)*nt;C.x+=(ot[j.c].x-tt.x)*nt;C.y+=(ot[j.c].y-tt.y)*nt;C.z+=(ot[j.c].z-tt.z)*nt}}X.position.add(M);K.position.add(S);Z.position.add(C);G.projectVertex(X);G.projectVertex(K);G.projectVertex(Z)}if(!1!==G.checkTriangleVisibility(X,K,Z)){Q=G.checkBackfaceCulling(X,K,Z);if(q!==THREE.DoubleSide){if(q===THREE.FrontSide&&!1===Q)continue;if(q===THREE.BackSide&&!0===Q)continue}p=t();p.id=y.id;p.v1.copy(X);p.v2.copy(K);p.v3.copy(Z);p.normalModel.copy(j.normal);!1!==Q||q!==THREE.BackSide&&q!==THREE.DoubleSide||p.normalModel.negate();p.normalModel.applyMatrix3(k).normalize();J=j.vertexNormals;$=0;for(et=Math.min(J.length,3);$<et;$++)tt=p.vertexNormalsModel[$],tt.copy(J[$]),!1!==Q||q!==THREE.BackSide&&q!==THREE.DoubleSide||tt.negate(),tt.applyMatrix3(k).normalize();p.vertexNormalsLength=J.length;q=_[D];if(void 0!==q)for(Q=0;3>Q;Q++)p.uvs[Q].copy(q[Q]);p.color=j.color;p.material=Y;p.z=(X.positionScreen.z+K.positionScreen.z+Z.positionScreen.z)/3;w.elements.push(p)}}}}}else if(y instanceof THREE.Line)if(R instanceof THREE.BufferGeometry){if(_=R.attributes,void 0!==_.position){b=_.position.array;R=0;for(P=b.length;R<P;R+=3)G.pushVertex(b[R],b[R+1],b[R+2]);if(void 0!==_.index)for(_=_.index.array,R=0,P=_.length;R<P;R+=2)G.pushLine(_[R],_[R+1]);else for(_=y.type===THREE.LinePieces?2:1,R=0,P=b.length/3-1;R<P;R+=_)G.pushLine(R,R+1)}}else{if(R instanceof THREE.Geometry&&(B.multiplyMatrices(V,z),D=y.geometry.vertices,0!==D.length))for(X=e(),X.positionScreen.copy(D[0]).applyMatrix4(B),_=y.type===THREE.LinePieces?2:1,W=1,j=D.length;W<j;W++)X=e(),X.positionScreen.copy(D[W]).applyMatrix4(B),0<(W+1)%_||(K=f[u-2],O.copy(X.positionScreen),I.copy(K.positionScreen),!0===o(O,I)&&(O.multiplyScalar(1/O.w),I.multiplyScalar(1/I.w),T=r(),T.id=y.id,T.v1.positionScreen.copy(O),T.v2.positionScreen.copy(I),T.z=Math.max(O.z,I.z),T.material=y.material,y.material.vertexColors===THREE.VertexColors&&(T.vertexColors[0].copy(y.geometry.colors[W]),T.vertexColors[1].copy(y.geometry.colors[W-1])),w.elements.push(T)))}else y instanceof THREE.Sprite&&(L.set(z.elements[12],z.elements[13],z.elements[14],1),L.applyMatrix4(V),R=1/L.w,L.z*=R,-1<=L.z&&1>=L.z&&(x=i(),x.id=y.id,x.x=L.x*R,x.y=L.y*R,x.z=L.z,x.object=y,x.rotation=y.rotation,x.scale.x=y.scale.x*Math.abs(x.x-(L.x+E.projectionMatrix.elements[0])/(L.w+E.projectionMatrix.elements[12])),x.scale.y=y.scale.y*Math.abs(x.y-(L.y+E.projectionMatrix.elements[5])/(L.w+E.projectionMatrix.elements[13])),x.material=y.material,w.elements.push(x)))}!0===g&&w.elements.sort(n);return w}};THREE.Face3=function(e,t,r,i,n,o){this.a=e;this.b=t;this.c=r;this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3;this.vertexNormals=i instanceof Array?i:[];this.color=n instanceof THREE.Color?n:new THREE.Color;this.vertexColors=n instanceof Array?n:[];this.vertexTangents=[];this.materialIndex=void 0!==o?o:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.materialIndex=this.materialIndex;for(var t=0,r=this.vertexNormals.length;t<r;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();t=0;for(r=this.vertexColors.length;t<r;t++)e.vertexColors[t]=this.vertexColors[t].clone();t=0;for(r=this.vertexTangents.length;t<r;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}};THREE.Face4=function(e,t,r,i,n,o,a){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(e,t,r,n,o,a)};THREE.BufferAttribute=function(e,t){this.array=e;this.itemSize=t};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(e){this.array.set(e);return this},setX:function(e,t){this.array[e*this.itemSize]=t;return this},setY:function(e,t){this.array[e*this.itemSize+1]=t;return this},setZ:function(e,t){this.array[e*this.itemSize+2]=t;return this},setXY:function(e,t,r){e*=this.itemSize;this.array[e]=t;this.array[e+1]=r;return this},setXYZ:function(e,t,r,i){e*=this.itemSize;this.array[e]=t;this.array[e+1]=r;this.array[e+2]=i;return this},setXYZW:function(e,t,r,i,n){e*=this.itemSize;this.array[e]=t;this.array[e+1]=r;this.array[e+2]=i;this.array[e+3]=n;return this}};THREE.Int8Attribute=function(e,t){console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Uint8Attribute=function(e,t){console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Uint8ClampedAttribute=function(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Int16Attribute=function(e,t){console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Uint16Attribute=function(e,t){console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Int32Attribute=function(e,t){console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Uint32Attribute=function(e,t){console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Float32Attribute=function(e,t){console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Float64Attribute=function(e,t){console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t,r){!1===t instanceof THREE.BufferAttribute?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[e]={array:t,itemSize:r}):this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},addDrawCall:function(e,t,r){this.drawcalls.push({start:e,count:t,index:void 0!==r?r:0})},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);t=this.attributes.normal;void 0!==t&&((new THREE.Matrix3).getNormalMatrix(e).applyToVector3Array(t.array),t.needsUpdate=!0)},fromGeometry:function(e,t){t=t||{vertexColors:THREE.NoColors};var r=e.vertices,i=e.faces,n=e.faceVertexUvs,o=t.vertexColors,a=0<n[0].length,s=3==i[0].vertexNormals.length,h=new Float32Array(9*i.length);this.addAttribute("position",new THREE.BufferAttribute(h,3));var l=new Float32Array(9*i.length);this.addAttribute("normal",new THREE.BufferAttribute(l,3));if(o!==THREE.NoColors){var c=new Float32Array(9*i.length);this.addAttribute("color",new THREE.BufferAttribute(c,3))}if(!0===a){var u=new Float32Array(6*i.length);this.addAttribute("uvs",new THREE.BufferAttribute(u,2))}for(var f=0,E=0,p=0;f<i.length;f++,E+=6,p+=9){var d=i[f],m=r[d.a],g=r[d.b],T=r[d.c];h[p]=m.x;h[p+1]=m.y;h[p+2]=m.z;h[p+3]=g.x;h[p+4]=g.y;h[p+5]=g.z;h[p+6]=T.x;h[p+7]=T.y;h[p+8]=T.z;!0===s?(m=d.vertexNormals[0],g=d.vertexNormals[1],T=d.vertexNormals[2],l[p]=m.x,l[p+1]=m.y,l[p+2]=m.z,l[p+3]=g.x,l[p+4]=g.y,l[p+5]=g.z,l[p+6]=T.x,l[p+7]=T.y,l[p+8]=T.z):(m=d.normal,l[p]=m.x,l[p+1]=m.y,l[p+2]=m.z,l[p+3]=m.x,l[p+4]=m.y,l[p+5]=m.z,l[p+6]=m.x,l[p+7]=m.y,l[p+8]=m.z);o===THREE.FaceColors?(d=d.color,c[p]=d.r,c[p+1]=d.g,c[p+2]=d.b,c[p+3]=d.r,c[p+4]=d.g,c[p+5]=d.b,c[p+6]=d.r,c[p+7]=d.g,c[p+8]=d.b):o===THREE.VertexColors&&(m=d.vertexColors[0],g=d.vertexColors[1],d=d.vertexColors[2],c[p]=m.r,c[p+1]=m.g,c[p+2]=m.b,c[p+3]=g.r,c[p+4]=g.g,c[p+5]=g.b,c[p+6]=d.r,c[p+7]=d.g,c[p+8]=d.b);!0===a&&(d=n[0][f][0],m=n[0][f][1],g=n[0][f][2],u[E]=d.x,u[E+1]=d.y,u[E+2]=m.x,u[E+3]=m.y,u[E+4]=g.x,u[E+5]=g.y)}this.computeBoundingSphere();return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox;3<=e.length&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var r=3,i=e.length;r<i;r+=3){var n=e[r],o=e[r+1],a=e[r+2];n<t.min.x?t.min.x=n:n>t.max.x&&(t.max.x=n);o<t.min.y?t.min.y=o:o>t.max.y&&(t.max.y=o);a<t.min.z?t.min.z=a:a>t.max.z&&(t.max.z=a)}}if(void 0===e||0===e.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){e.makeEmpty();for(var i=this.boundingSphere.center,n=0,o=r.length;n<o;n+=3)t.set(r[n],r[n+1],r[n+2]),e.expandByPoint(t);e.center(i);for(var a=0,n=0,o=r.length;n<o;n+=3)t.set(r[n],r[n+1],r[n+2]),a=Math.max(a,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i;e=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e)};else for(e=0,t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0;var n=this.attributes.position.array,o=this.attributes.normal.array,a,s,h,l,c,u,f=new THREE.Vector3,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,T=0<this.offsets.length?this.offsets:[{start:0,count:g.length,index:0}];r=0;for(i=T.length;r<i;++r){t=T[r].start;a=T[r].count;var v=T[r].index;e=t;for(t+=a;e<t;e+=3)a=v+g[e],s=v+g[e+1],h=v+g[e+2],l=n[3*a],c=n[3*a+1],u=n[3*a+2],f.set(l,c,u),l=n[3*s],c=n[3*s+1],u=n[3*s+2],E.set(l,c,u),l=n[3*h],c=n[3*h+1],u=n[3*h+2],p.set(l,c,u),d.subVectors(p,E),m.subVectors(f,E),d.cross(m),o[3*a]+=d.x,o[3*a+1]+=d.y,o[3*a+2]+=d.z,o[3*s]+=d.x,o[3*s+1]+=d.y,o[3*s+2]+=d.z,o[3*h]+=d.x,o[3*h+1]+=d.y,o[3*h+2]+=d.z}}else for(e=0,t=n.length;e<t;e+=9)l=n[e],c=n[e+1],u=n[e+2],f.set(l,c,u),l=n[e+3],c=n[e+4],u=n[e+5],E.set(l,c,u),l=n[e+6],c=n[e+7],u=n[e+8],p.set(l,c,u),d.subVectors(p,E),m.subVectors(f,E),d.cross(m),o[e]=d.x,o[e+1]=d.y,o[e+2]=d.z,o[e+3]=d.x,o[e+4]=d.y,o[e+5]=d.z,o[e+6]=d.x,o[e+7]=d.y,o[e+8]=d.z;this.normalizeNormals();this.normalsNeedUpdate=!0}},computeTangents:function(){function e(e,t,r){u=i[3*e];f=i[3*e+1];E=i[3*e+2];p=i[3*t];d=i[3*t+1];m=i[3*t+2];g=i[3*r];T=i[3*r+1];v=i[3*r+2];y=o[2*e];R=o[2*e+1];x=o[2*t];H=o[2*t+1];_=o[2*r];b=o[2*r+1];w=p-u;M=g-u;S=d-f;C=T-f;A=m-E;L=v-E;P=x-y;F=_-y;D=H-R;U=b-R;V=1/(P*U-F*D);z.set((U*w-D*M)*V,(U*S-D*C)*V,(U*A-D*L)*V);B.set((P*M-F*w)*V,(P*C-F*S)*V,(P*L-F*A)*V);h[e].add(z);h[t].add(z);h[r].add(z);l[e].add(B);l[t].add(B);l[r].add(B)}function t(e){q.x=n[3*e];q.y=n[3*e+1];q.z=n[3*e+2];K.copy(q);Q=h[e];X.copy(Q);X.sub(q.multiplyScalar(q.dot(Q))).normalize();Y.crossVectors(K,Q);J=Y.dot(l[e]);Z=0>J?-1:1;s[4*e]=X.x;s[4*e+1]=X.y;s[4*e+2]=X.z;s[4*e+3]=Z}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,o=this.attributes.uv.array,a=i.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*a)});for(var s=this.attributes.tangent.array,h=[],l=[],c=0;c<a;c++)h[c]=new THREE.Vector3,l[c]=new THREE.Vector3;var u,f,E,p,d,m,g,T,v,y,R,x,H,_,b,w,M,S,C,A,L,P,F,D,U,V,z=new THREE.Vector3,B=new THREE.Vector3,k,N,O,I,G,W=this.offsets,c=0;for(N=W.length;c<N;++c){k=W[c].start;O=W[c].count;var j=W[c].index,a=k;for(k+=O;a<k;a+=3)O=j+r[a],I=j+r[a+1],G=j+r[a+2],e(O,I,G)}var X=new THREE.Vector3,Y=new THREE.Vector3,q=new THREE.Vector3,K=new THREE.Vector3,Z,Q,J,c=0;for(N=W.length;c<N;++c)for(k=W[c].start,O=W[c].count,j=W[c].index,a=k,k+=O;a<k;a+=3)O=j+r[a],I=j+r[a+1],G=j+r[a+2],t(O),t(I),t(G)}},computeOffsets:function(e){var t=e;void 0===e&&(t=65535);Date.now();e=this.attributes.index.array;for(var r=this.attributes.position.array,i=e.length/3,n=new Uint16Array(e.length),o=0,a=0,s=[{start:0,count:0,index:0}],h=s[0],l=0,c=0,u=new Int32Array(6),f=new Int32Array(r.length),E=new Int32Array(r.length),p=0;p<r.length;p++)f[p]=-1,E[p]=-1;for(r=0;r<i;r++){for(var d=c=0;3>d;d++)p=e[3*r+d],-1==f[p]?(u[2*d]=p,u[2*d+1]=-1,c++):f[p]<h.index?(u[2*d]=p,u[2*d+1]=-1,l++):(u[2*d]=p,u[2*d+1]=f[p]);if(a+c>h.index+t)for(h={start:o,count:0,index:a},s.push(h),c=0;6>c;c+=2)d=u[c+1],-1<d&&d<h.index&&(u[c+1]=-1);for(c=0;6>c;c+=2)p=u[c],d=u[c+1],-1===d&&(d=a++),f[p]=d,E[d]=p,n[o++]=d-h.index,h.count++}this.reorderBuffers(n,E,a);return this.offsets=s},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,r,i,n=0,o=e.length;n<o;n+=3)t=e[n],r=e[n+1],i=e[n+2],t=1/Math.sqrt(t*t+r*r+i*i),e[n]*=t,e[n+1]*=t,e[n+2]*=t
},reorderBuffers:function(e,t,r){var i={},n=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],o;for(o in this.attributes)if("index"!=o)for(var a=this.attributes[o].array,s=0,h=n.length;s<h;s++){var l=n[s];if(a instanceof l){i[o]=new l(this.attributes[o].itemSize*r);break}}for(n=0;n<r;n++)for(o in a=t[n],this.attributes)if("index"!=o)for(var s=this.attributes[o].array,h=this.attributes[o].itemSize,l=i[o],c=0;c<h;c++)l[n*h+c]=s[a*h+c];this.attributes.index.array=e;for(o in this.attributes)"index"!=o&&(this.attributes[o].array=i[o],this.attributes[o].numItems=this.attributes[o].itemSize*r)},clone:function(){var e=new THREE.BufferGeometry,t=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],r;for(r in this.attributes){for(var i=this.attributes[r],n=i.array,o={itemSize:i.itemSize,array:null},i=0,a=t.length;i<a;i++){var s=t[i];if(n instanceof s){o.array=new s(n);break}}e.attributes[r]=o}i=0;for(a=this.offsets.length;i<a;i++)t=this.offsets[i],e.offsets.push({start:t.start,index:t.index,count:t.count});return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),r=0,i=this.vertices.length;r<i;r++)this.vertices[r].applyMatrix4(e);r=0;for(i=this.faces.length;r<i;r++){e=this.faces[r];e.normal.applyMatrix3(t).normalize();for(var n=0,o=e.vertexNormals.length;n<o;n++)e.vertexNormals[n].applyMatrix3(t).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var e=new THREE.Vector3;e.addVectors(this.boundingBox.min,this.boundingBox.max);e.multiplyScalar(-.5);this.applyMatrix((new THREE.Matrix4).makeTranslation(e.x,e.y,e.z));this.computeBoundingBox();return e},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b];e.subVectors(this.vertices[n.c],a);t.subVectors(o,a);e.cross(t);e.normalize();n.normal.copy(e)}},computeVertexNormals:function(e){var t,r,i;i=Array(this.vertices.length);t=0;for(r=this.vertices.length;t<r;t++)i[t]=new THREE.Vector3;if(e){var n,o,a,s=new THREE.Vector3,h=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;e=0;for(t=this.faces.length;e<t;e++)r=this.faces[e],n=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],s.subVectors(a,o),h.subVectors(n,o),s.cross(h),i[r.a].add(s),i[r.b].add(s),i[r.c].add(s)}else for(e=0,t=this.faces.length;e<t;e++)r=this.faces[e],i[r.a].add(r.normal),i[r.b].add(r.normal),i[r.c].add(r.normal);t=0;for(r=this.vertices.length;t<r;t++)i[t].normalize();e=0;for(t=this.faces.length;e<t;e++)r=this.faces[e],r.vertexNormals[0]=i[r.a].clone(),r.vertexNormals[1]=i[r.b].clone(),r.vertexNormals[2]=i[r.c].clone()},computeMorphNormals:function(){var e,t,r,i,n;r=0;for(i=this.faces.length;r<i;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;e<t;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;o.faces=this.faces;e=0;for(t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];n=this.morphNormals[e].faceNormals;var a=this.morphNormals[e].vertexNormals,s,h;r=0;for(i=this.faces.length;r<i;r++)s=new THREE.Vector3,h={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(s),a.push(h)}a=this.morphNormals[e];o.vertices=this.morphTargets[e].vertices;o.computeFaceNormals();o.computeVertexNormals();r=0;for(i=this.faces.length;r<i;r++)n=this.faces[r],s=a.faceNormals[r],h=a.vertexNormals[r],s.copy(n.normal),h.a.copy(n.vertexNormals[0]),h.b.copy(n.vertexNormals[1]),h.c.copy(n.vertexNormals[2])}r=0;for(i=this.faces.length;r<i;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var e,t,r,i,n,o,a,s,h,l,c,u,f,E,p,d,m,g=[],T=[];r=new THREE.Vector3;var v=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,x=new THREE.Vector3;e=0;for(t=this.vertices.length;e<t;e++)g[e]=new THREE.Vector3,T[e]=new THREE.Vector3;e=0;for(t=this.faces.length;e<t;e++)n=this.faces[e],o=this.faceVertexUvs[0][e],i=n.a,m=n.b,n=n.c,a=this.vertices[i],s=this.vertices[m],h=this.vertices[n],l=o[0],c=o[1],u=o[2],o=s.x-a.x,f=h.x-a.x,E=s.y-a.y,p=h.y-a.y,s=s.z-a.z,a=h.z-a.z,h=c.x-l.x,d=u.x-l.x,c=c.y-l.y,l=u.y-l.y,u=1/(h*l-d*c),r.set((l*o-c*f)*u,(l*E-c*p)*u,(l*s-c*a)*u),v.set((h*f-d*o)*u,(h*p-d*E)*u,(h*a-d*s)*u),g[i].add(r),g[m].add(r),g[n].add(r),T[i].add(v),T[m].add(v),T[n].add(v);v=["a","b","c","d"];e=0;for(t=this.faces.length;e<t;e++)for(n=this.faces[e],r=0;r<Math.min(n.vertexNormals.length,3);r++)x.copy(n.vertexNormals[r]),i=n[v[r]],m=g[i],y.copy(m),y.sub(x.multiplyScalar(x.dot(m))).normalize(),R.crossVectors(n.vertexNormals[r],m),i=R.dot(T[i]),i=0>i?-1:1,n.vertexTangents[r]=new THREE.Vector4(y.x,y.y,y.z,i);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;r<i;r++)0<r&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(!1===e instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);else{var i,n=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,h=e.faces,l=this.faceVertexUvs[0];e=e.faceVertexUvs[0];void 0===r&&(r=0);void 0!==t&&(i=(new THREE.Matrix3).getNormalMatrix(t));for(var c=0,u=a.length;c<u;c++){var f=a[c].clone();void 0!==t&&f.applyMatrix4(t);o.push(f)}c=0;for(u=h.length;c<u;c++){var a=h[c],E,p=a.vertexNormals,d=a.vertexColors,f=new THREE.Face3(a.a+n,a.b+n,a.c+n);f.normal.copy(a.normal);void 0!==i&&f.normal.applyMatrix3(i).normalize();t=0;for(o=p.length;t<o;t++)E=p[t].clone(),void 0!==i&&E.applyMatrix3(i).normalize(),f.vertexNormals.push(E);f.color.copy(a.color);t=0;for(o=d.length;t<o;t++)E=d[t],f.vertexColors.push(E.clone());f.materialIndex=a.materialIndex+r;s.push(f)}c=0;for(u=e.length;c<u;c++)if(r=e[c],i=[],void 0!==r){t=0;for(o=r.length;t<o;t++)i.push(new THREE.Vector2(r[t].x,r[t].y));l.push(i)}}},mergeVertices:function(){var e={},t=[],r=[],i,n=Math.pow(10,4),o,a;o=0;for(a=this.vertices.length;o<a;o++)i=this.vertices[o],i=Math.round(i.x*n)+"_"+Math.round(i.y*n)+"_"+Math.round(i.z*n),void 0===e[i]?(e[i]=o,t.push(this.vertices[o]),r[o]=t.length-1):r[o]=r[e[i]];e=[];o=0;for(a=this.faces.length;o<a;o++)for(n=this.faces[o],n.a=r[n.a],n.b=r[n.b],n.c=r[n.c],n=[n.a,n.b,n.c],i=0;3>i;i++)if(n[i]==n[(i+1)%3]){e.push(o);break}for(o=e.length-1;0<=o;o--)for(n=e[o],this.faces.splice(n,1),r=0,a=this.faceVertexUvs.length;r<a;r++)this.faceVertexUvs[r].splice(n,1);o=this.vertices.length-t.length;this.vertices=t;return o},makeGroups:function(){var e=0;return function(t,r){var i,n,o,a,s={},h,l=this.morphTargets.length,c=this.morphNormals.length;this.geometryGroups={};this.geometryGroupsList=[];i=0;for(n=this.faces.length;i<n;i++)o=this.faces[i],o=t?o.materialIndex:0,o in s||(s[o]={hash:o,counter:0}),a=s[o].hash+"_"+s[o].counter,a in this.geometryGroups||(h={id:e++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:l,numMorphNormals:c},this.geometryGroups[a]=h,this.geometryGroupsList.push(h)),this.geometryGroups[a].vertices+3>r&&(s[o].counter+=1,a=s[o].hash+"_"+s[o].counter,a in this.geometryGroups||(h={id:e++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:l,numMorphNormals:c},this.geometryGroups[a]=h,this.geometryGroupsList.push(h))),this.geometryGroups[a].faces3.push(i),this.geometryGroups[a].vertices+=3}}(),clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;r<i;r++)e.vertices.push(t[r].clone());t=this.faces;r=0;for(i=t.length;r<i;r++)e.faces.push(t[r].clone());t=this.faceVertexUvs[0];r=0;for(i=t.length;r<i;r++){for(var n=t[r],o=[],a=0,s=n.length;a<s;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));e.faceVertexUvs[0].push(o)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up);this.quaternion.setFromRotationMatrix(e)}}();THREE.Camera.prototype.clone=function(e){void 0===e&&(e=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,e);e.matrixWorldInverse.copy(this.matrixWorldInverse);e.projectionMatrix.copy(this.projectionMatrix);return e};THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(1,0,0));this.add(i);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0);n.lookAt(new THREE.Vector3(-1,0,0));this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1);o.lookAt(new THREE.Vector3(0,1,0));this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1);a.lookAt(new THREE.Vector3(0,-1,0));this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0);s.lookAt(new THREE.Vector3(0,0,1));this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(e,t){var r=this.renderTarget,l=r.generateMipmaps;r.generateMipmaps=!1;r.activeCubeFace=0;e.render(t,i,r);r.activeCubeFace=1;e.render(t,n,r);r.activeCubeFace=2;e.render(t,o,r);r.activeCubeFace=3;e.render(t,a,r);r.activeCubeFace=4;e.render(t,s,r);r.generateMipmaps=l;r.activeCubeFace=5;e.render(t,h,r)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.OrthographicCamera=function(e,t,r,i,n,o){THREE.Camera.call(this);this.left=e;this.right=t;this.top=r;this.bottom=i;this.near=void 0!==n?n:.1;this.far=void 0!==o?o:2e3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,e);e.left=this.left;e.right=this.right;e.top=this.top;e.bottom=this.bottom;e.near=this.near;e.far=this.far;return e};THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this);this.fov=void 0!==e?e:50;this.aspect=void 0!==t?t:1;this.near=void 0!==r?r:.1;this.far=void 0!==i?i:2e3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,n,o){this.fullWidth=e;this.fullHeight=t;this.x=r;this.y=i;this.width=n;this.height=o;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-t,i=e*r,e=Math.abs(e*t-i),r=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*e/this.fullWidth,i+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*r/this.fullHeight,t-this.y*r/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,e);e.fov=this.fov;e.aspect=this.aspect;e.near=this.near;e.far=this.far;return e};THREE.Light=function(e){THREE.Object3D.call(this);this.color=new THREE.Color(e)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(e){void 0===e&&(e=new THREE.Light);THREE.Object3D.prototype.clone.call(this,e);e.color.copy(this.color);return e};THREE.AmbientLight=function(e){THREE.Light.call(this,e)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,e);return e};THREE.AreaLight=function(e,t){THREE.Light.call(this,e);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==t?t:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==t?t:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,e);e.target=this.target.clone();e.intensity=this.intensity;e.castShadow=this.castShadow;e.onlyShadow=this.onlyShadow;e.shadowCameraNear=this.shadowCameraNear;e.shadowCameraFar=this.shadowCameraFar;e.shadowCameraLeft=this.shadowCameraLeft;e.shadowCameraRight=this.shadowCameraRight;e.shadowCameraTop=this.shadowCameraTop;e.shadowCameraBottom=this.shadowCameraBottom;e.shadowCameraVisible=this.shadowCameraVisible;e.shadowBias=this.shadowBias;e.shadowDarkness=this.shadowDarkness;e.shadowMapWidth=this.shadowMapWidth;e.shadowMapHeight=this.shadowMapHeight;e.shadowCascade=this.shadowCascade;e.shadowCascadeOffset.copy(this.shadowCascadeOffset);e.shadowCascadeCount=this.shadowCascadeCount;e.shadowCascadeBias=this.shadowCascadeBias.slice(0);e.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);e.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);e.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);e.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return e};THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e);this.position.set(0,100,0);this.groundColor=new THREE.Color(t);this.intensity=void 0!==r?r:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,e);e.groundColor.copy(this.groundColor);e.intensity=this.intensity;return e};THREE.PointLight=function(e,t,r){THREE.Light.call(this,e);this.intensity=void 0!==t?t:1;this.distance=void 0!==r?r:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;THREE.Light.prototype.clone.call(this,e);e.intensity=this.intensity;e.distance=this.distance;return e};THREE.SpotLight=function(e,t,r,i,n){THREE.Light.call(this,e);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==t?t:1;this.distance=void 0!==r?r:0;this.angle=void 0!==i?i:Math.PI/3;this.exponent=void 0!==n?n:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,e);e.target=this.target.clone();e.intensity=this.intensity;e.distance=this.distance;e.angle=this.angle;e.exponent=this.exponent;e.castShadow=this.castShadow;e.onlyShadow=this.onlyShadow;e.shadowCameraNear=this.shadowCameraNear;e.shadowCameraFar=this.shadowCameraFar;e.shadowCameraFov=this.shadowCameraFov;e.shadowCameraVisible=this.shadowCameraVisible;e.shadowBias=this.shadowBias;e.shadowDarkness=this.shadowDarkness;e.shadowMapWidth=this.shadowMapWidth;e.shadowMapHeight=this.shadowMapHeight;return e};THREE.Cache=function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(e,t){this.files[e]=t},get:function(e){return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var e=document.createElement("div");e.style.position="absolute";e.style.right="0px";e.style.top="0px";e.style.fontSize="0.8em";e.style.textAlign="left";e.style.background="rgba(0,0,0,0.25)";e.style.color="#fff";e.style.width="120px";e.style.padding="0.5em 0.5em 0.5em 0.5em";e.style.zIndex=1e3;e.innerHTML="Loading ...";return e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){e=e.split("/");if(1===e.length)return"./";e.pop();return e.join("/")+"/"},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;t<r;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function r(e){e=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(e))}function i(e,i,n,a,s,h,l){var c=t+n,u,f=THREE.Loader.Handlers.get(c);null!==f?u=f.load(c):(u=new THREE.Texture,f=o.imageLoader,f.crossOrigin=o.crossOrigin,f.load(c,function(e){if(!1===THREE.Math.isPowerOfTwo(e.width)||!1===THREE.Math.isPowerOfTwo(e.height)){var t=r(e.width),i=r(e.height),n=document.createElement("canvas");n.width=t;n.height=i;n.getContext("2d").drawImage(e,0,0,t,i);u.image=n}else u.image=e;u.needsUpdate=!0}));u.sourceFile=n;a&&(u.repeat.set(a[0],a[1]),1!==a[0]&&(u.wrapS=THREE.RepeatWrapping),1!==a[1]&&(u.wrapT=THREE.RepeatWrapping));s&&u.offset.set(s[0],s[1]);h&&(n={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==n[h[0]]&&(u.wrapS=n[h[0]]),void 0!==n[h[1]]&&(u.wrapT=n[h[1]]));l&&(u.anisotropy=l);e[i]=u}function n(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var o=this,a="MeshLambertMaterial",s={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var h=e.shading.toLowerCase();"phong"===h?a="MeshPhongMaterial":"basic"===h&&(a="MeshBasicMaterial")}void 0!==e.blending&&void 0!==THREE[e.blending]&&(s.blending=THREE[e.blending]);if(void 0!==e.transparent||1>e.opacity)s.transparent=e.transparent;void 0!==e.depthTest&&(s.depthTest=e.depthTest);void 0!==e.depthWrite&&(s.depthWrite=e.depthWrite);void 0!==e.visible&&(s.visible=e.visible);void 0!==e.flipSided&&(s.side=THREE.BackSide);void 0!==e.doubleSided&&(s.side=THREE.DoubleSide);void 0!==e.wireframe&&(s.wireframe=e.wireframe);void 0!==e.vertexColors&&("face"===e.vertexColors?s.vertexColors=THREE.FaceColors:e.vertexColors&&(s.vertexColors=THREE.VertexColors));e.colorDiffuse?s.color=n(e.colorDiffuse):e.DbgColor&&(s.color=e.DbgColor);e.colorSpecular&&(s.specular=n(e.colorSpecular));e.colorAmbient&&(s.ambient=n(e.colorAmbient));e.colorEmissive&&(s.emissive=n(e.colorEmissive));e.transparency&&(s.opacity=e.transparency);e.specularCoef&&(s.shininess=e.specularCoef);e.mapDiffuse&&t&&i(s,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);e.mapLight&&t&&i(s,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);e.mapBump&&t&&i(s,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);e.mapNormal&&t&&i(s,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);e.mapSpecular&&t&&i(s,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);e.mapAlpha&&t&&i(s,"alphaMap",e.mapAlpha,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy);e.mapBumpScale&&(s.bumpScale=e.mapBumpScale);e.mapNormal?(a=THREE.ShaderLib.normalmap,h=THREE.UniformsUtils.clone(a.uniforms),h.tNormal.value=s.normalMap,e.mapNormalFactor&&h.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),s.map&&(h.tDiffuse.value=s.map,h.enableDiffuse.value=!0),s.specularMap&&(h.tSpecular.value=s.specularMap,h.enableSpecular.value=!0),s.lightMap&&(h.tAO.value=s.lightMap,h.enableAO.value=!0),h.diffuse.value.setHex(s.color),h.specular.value.setHex(s.specular),h.ambient.value.setHex(s.ambient),h.shininess.value=s.shininess,void 0!==s.opacity&&(h.opacity.value=s.opacity),a=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,lights:!0,fog:!0}),s.transparent&&(a.transparent=!0)):a=new THREE[a](s);void 0!==e.DbgName&&(a.name=e.DbgName);return a}};THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=0,r=this.handlers.length;t<r;t+=2){var i=this.handlers[t+1];if(this.handlers[t].test(e))return i}return null}};THREE.XHRLoader=function(e){this.cache=new THREE.Cache;this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,i){var n=this,o=n.cache.get(e);void 0!==o?t&&t(o):(o=new XMLHttpRequest,o.open("GET",e,!0),o.addEventListener("load",function(r){n.cache.add(e,this.response);t&&t(this.response);n.manager.itemEnd(e)},!1),void 0!==r&&o.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&o.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(o.responseType=this.responseType),o.send(null),n.manager.itemStart(e))},setResponseType:function(e){this.responseType=e},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.ImageLoader=function(e){this.cache=new THREE.Cache;this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,i){var n=this,o=n.cache.get(e);if(void 0!==o)t(o);else return o=document.createElement("img"),void 0!==t&&o.addEventListener("load",function(r){n.cache.add(e,this);t(this);n.manager.itemEnd(e)},!1),void 0!==r&&o.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&o.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=e,n.manager.itemStart(e),o},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.JSONLoader=function(e){THREE.Loader.call(this,e);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"===typeof r?r:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,t,r)};THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText);if(void 0!==s.metadata&&"scene"===s.metadata.type){console.error('THREE.JSONLoader: "'+t+'" seems to be a Scene. Use THREE.SceneLoader instead.');return}s=e.parse(s,i);r(s.geometry,s.materials)}else console.error('THREE.JSONLoader: "'+t+'" seems to be unreachable or the file is empty.');e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+t+'" ('+o.status+")");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&void 0!==n&&(a=o.getResponseHeader("Content-Length"))};o.open("GET",t,!0);o.withCredentials=this.withCredentials;o.send(null)};THREE.JSONLoader.prototype.parse=function(e,t){var r=new THREE.Geometry,i=void 0!==e.scale?1/e.scale:1;(function(t){var i,n,o,a,s,h,l,c,u,f,E,p,d,m=e.faces;h=e.vertices;var g=e.normals,T=e.colors,v=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&v++;for(i=0;i<v;i++)r.faceVertexUvs[i]=[]}a=0;for(s=h.length;a<s;)i=new THREE.Vector3,i.x=h[a++]*t,i.y=h[a++]*t,i.z=h[a++]*t,r.vertices.push(i);a=0;for(s=m.length;a<s;)if(t=m[a++],u=t&1,o=t&2,i=t&8,l=t&16,f=t&32,h=t&64,t&=128,u){u=new THREE.Face3;u.a=m[a];u.b=m[a+1];u.c=m[a+3];E=new THREE.Face3;E.a=m[a+1];E.b=m[a+2];E.c=m[a+3];a+=4;o&&(o=m[a++],u.materialIndex=o,E.materialIndex=o);o=r.faces.length;if(i)for(i=0;i<v;i++)for(p=e.uvs[i],r.faceVertexUvs[i][o]=[],r.faceVertexUvs[i][o+1]=[],n=0;4>n;n++)c=m[a++],d=p[2*c],c=p[2*c+1],d=new THREE.Vector2(d,c),2!==n&&r.faceVertexUvs[i][o].push(d),0!==n&&r.faceVertexUvs[i][o+1].push(d);l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l]),E.normal.copy(u.normal));if(f)for(i=0;4>i;i++)l=3*m[a++],f=new THREE.Vector3(g[l++],g[l++],g[l]),2!==i&&u.vertexNormals.push(f),0!==i&&E.vertexNormals.push(f);h&&(h=m[a++],h=T[h],u.color.setHex(h),E.color.setHex(h));if(t)for(i=0;4>i;i++)h=m[a++],h=T[h],2!==i&&u.vertexColors.push(new THREE.Color(h)),0!==i&&E.vertexColors.push(new THREE.Color(h));r.faces.push(u);r.faces.push(E)}else{u=new THREE.Face3;u.a=m[a++];u.b=m[a++];u.c=m[a++];o&&(o=m[a++],u.materialIndex=o);o=r.faces.length;if(i)for(i=0;i<v;i++)for(p=e.uvs[i],r.faceVertexUvs[i][o]=[],n=0;3>n;n++)c=m[a++],d=p[2*c],c=p[2*c+1],d=new THREE.Vector2(d,c),r.faceVertexUvs[i][o].push(d);l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l]));if(f)for(i=0;3>i;i++)l=3*m[a++],f=new THREE.Vector3(g[l++],g[l++],g[l]),u.vertexNormals.push(f);h&&(h=m[a++],u.color.setHex(T[h]));if(t)for(i=0;3>i;i++)h=m[a++],u.vertexColors.push(new THREE.Color(T[h]));r.faces.push(u)}})(i);(function(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var i=0,n=e.skinWeights.length;i<n;i+=t)r.skinWeights.push(new THREE.Vector4(e.skinWeights[i],1<t?e.skinWeights[i+1]:0,2<t?e.skinWeights[i+2]:0,3<t?e.skinWeights[i+3]:0));if(e.skinIndices)for(i=0,n=e.skinIndices.length;i<n;i+=t)r.skinIndices.push(new THREE.Vector4(e.skinIndices[i],1<t?e.skinIndices[i+1]:0,2<t?e.skinIndices[i+2]:0,3<t?e.skinIndices[i+3]:0));r.bones=e.bones;r.bones&&0<r.bones.length&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match.");r.animation=e.animation;r.animations=e.animations})();(function(t){if(void 0!==e.morphTargets){var i,n,o,a,s,h;i=0;for(n=e.morphTargets.length;i<n;i++)for(r.morphTargets[i]={},r.morphTargets[i].name=e.morphTargets[i].name,r.morphTargets[i].vertices=[],s=r.morphTargets[i].vertices,h=e.morphTargets[i].vertices,o=0,a=h.length;o<a;o+=3){var l=new THREE.Vector3;l.x=h[o]*t;l.y=h[o+1]*t;l.z=h[o+2]*t;s.push(l)}}if(void 0!==e.morphColors)for(i=0,n=e.morphColors.length;i<n;i++)for(r.morphColors[i]={},r.morphColors[i].name=e.morphColors[i].name,r.morphColors[i].colors=[],a=r.morphColors[i].colors,s=e.morphColors[i].colors,t=0,o=s.length;t<o;t+=3)h=new THREE.Color(16755200),h.setRGB(s[t],s[t+1],s[t+2]),a.push(h)})(i);r.computeFaceNormals();r.computeBoundingSphere();if(void 0===e.materials||0===e.materials.length)return{geometry:r};i=this.initMaterials(e.materials,t);this.needsTangents(i)&&r.computeTangents();return{geometry:r,materials:i}};THREE.LoadingManager=function(e,t,r){var i=this,n=0,o=0;this.onLoad=e;this.onProgress=t;this.onError=r;this.itemStart=function(e){o++};this.itemEnd=function(e){n++;if(void 0!==i.onProgress)i.onProgress(e,n,o);if(n===o&&void 0!==i.onLoad)i.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,i){var n=this,o=new THREE.XHRLoader;o.setCrossOrigin(this.crossOrigin);o.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,r=e.attributes,i;for(i in r){var n=r[i];t.attributes[i]={itemSize:n.itemSize,array:new self[n.type](n.array)}}r=e.offsets;void 0!==r&&(t.offsets=JSON.parse(JSON.stringify(r)));e=e.boundingSphere;void 0!==e&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius));return t}};THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,i){var n=this,o=new THREE.XHRLoader;o.setCrossOrigin(this.crossOrigin);o.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];void 0!==e.color&&t.color.setHex(e.color);void 0!==e.ambient&&t.ambient.setHex(e.ambient);void 0!==e.emissive&&t.emissive.setHex(e.emissive);void 0!==e.specular&&t.specular.setHex(e.specular);void 0!==e.shininess&&(t.shininess=e.shininess);void 0!==e.uniforms&&(t.uniforms=e.uniforms);void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader);void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader);void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors);void 0!==e.blending&&(t.blending=e.blending);void 0!==e.side&&(t.side=e.side);void 0!==e.opacity&&(t.opacity=e.opacity);void 0!==e.transparent&&(t.transparent=e.transparent);void 0!==e.wireframe&&(t.wireframe=e.wireframe);if(void 0!==e.materials)for(var r=0,i=e.materials.length;r<i;r++)t.materials.push(this.parse(e.materials[r]));return t}};THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin);o.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e
},parse:function(e){var t=this.parseGeometries(e.geometries),r=this.parseMaterials(e.materials);return this.parseObject(e.object,t,r)},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=e.length;n<o;n++){var a,s=e[n];switch(s.type){case"PlaneGeometry":a=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=i.parse(s.data);break;case"Geometry":a=r.parse(s.data).geometry}a.uuid=s.uuid;void 0!==s.name&&(a.name=s.name);t[s.uuid]=a}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var r=new THREE.MaterialLoader,i=0,n=e.length;i<n;i++){var o=e[i],a=r.parse(o);a.uuid=o.uuid;void 0!==o.name&&(a.name=o.name);t[o.uuid]=a}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,i){var n;switch(t.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":n=new THREE.AmbientLight(t.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":n=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":n=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":n=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":n=r[t.geometry];var o=i[t.material];void 0===n&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry);void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material);n=new THREE.Mesh(n,o);break;case"Sprite":o=i[t.material];void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material);n=new THREE.Sprite(o);break;default:n=new THREE.Object3D}n.uuid=t.uuid;void 0!==t.name&&(n.name=t.name);void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.scale&&n.scale.fromArray(t.scale));void 0!==t.visible&&(n.visible=t.visible);void 0!==t.userData&&(n.userData=t.userData);if(void 0!==t.children)for(var a in t.children)n.add(this.parseObject(t.children[a],r,i));return n}}()};THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,i){var n=new THREE.ImageLoader(this.manager);n.setCrossOrigin(this.crossOrigin);n.load(e,function(e){e=new THREE.Texture(e);e.needsUpdate=!0;void 0!==t&&t(e)},r,i)},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0===r)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var i=this[t];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]="overdraw"==t?Number(r):r}}},clone:function(e){void 0===e&&(e=new THREE.Material);e.name=this.name;e.side=this.side;e.opacity=this.opacity;e.transparent=this.transparent;e.blending=this.blending;e.blendSrc=this.blendSrc;e.blendDst=this.blendDst;e.blendEquation=this.blendEquation;e.depthTest=this.depthTest;e.depthWrite=this.depthWrite;e.polygonOffset=this.polygonOffset;e.polygonOffsetFactor=this.polygonOffsetFactor;e.polygonOffsetUnits=this.polygonOffsetUnits;e.alphaTest=this.alphaTest;e.overdraw=this.overdraw;e.visible=this.visible;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(e)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.linewidth=this.linewidth;e.linecap=this.linecap;e.linejoin=this.linejoin;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.LineDashedMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(e)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.linewidth=this.linewidth;e.scale=this.scale;e.dashSize=this.dashSize;e.gapSize=this.gapSize;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.MeshBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.lightMap=this.lightMap;e.specularMap=this.specularMap;e.alphaMap=this.alphaMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;return e};THREE.MeshLambertMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.ambient.copy(this.ambient);e.emissive.copy(this.emissive);e.wrapAround=this.wrapAround;e.wrapRGB.copy(this.wrapRGB);e.map=this.map;e.lightMap=this.lightMap;e.specularMap=this.specularMap;e.alphaMap=this.alphaMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.MeshPhongMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.ambient.copy(this.ambient);e.emissive.copy(this.emissive);e.specular.copy(this.specular);e.shininess=this.shininess;e.metal=this.metal;e.wrapAround=this.wrapAround;e.wrapRGB.copy(this.wrapRGB);e.map=this.map;e.lightMap=this.lightMap;e.bumpMap=this.bumpMap;e.bumpScale=this.bumpScale;e.normalMap=this.normalMap;e.normalScale.copy(this.normalScale);e.specularMap=this.specularMap;e.alphaMap=this.alphaMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.MeshDepthMaterial=function(e){THREE.Material.call(this);this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(e)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,e);e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;return e};THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(e)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,e);e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;return e};THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e};THREE.PointCloudMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(e)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointCloudMaterial.prototype.clone=function(){var e=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.size=this.size;e.sizeAttenuation=this.sizeAttenuation;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.ParticleBasicMaterial=function(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(e)};THREE.ParticleSystemMaterial=function(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(e)};THREE.ShaderMaterial=function(e){THREE.Material.call(this);this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(e)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,e);e.fragmentShader=this.fragmentShader;e.vertexShader=this.vertexShader;e.uniforms=THREE.UniformsUtils.clone(this.uniforms);e.attributes=this.attributes;e.defines=this.defines;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.fog=this.fog;e.lights=this.lights;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e)};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var e=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,e);return e};THREE.SpriteMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(e)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.rotation=this.rotation;e.fog=this.fog;return e};THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(e,t){};this.setValues(e)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.program=this.program;return e};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;THREE.Texture=function(e,t,r,i,n,o,a,s,h){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=void 0!==e?e:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==t?t:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n?n:THREE.LinearFilter;this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==h?h:1;this.format=void 0!==a?a:THREE.RGBAFormat;this.type=void 0!==s?s:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping;THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update();this._needsUpdate=e},clone:function(e){void 0===e&&(e=new THREE.Texture);e.image=this.image;e.mipmaps=this.mipmaps.slice(0);e.mapping=this.mapping;e.wrapS=this.wrapS;e.wrapT=this.wrapT;e.magFilter=this.magFilter;e.minFilter=this.minFilter;e.anisotropy=this.anisotropy;e.format=this.format;e.type=this.type;e.offset.copy(this.offset);e.repeat.copy(this.repeat);e.generateMipmaps=this.generateMipmaps;e.premultiplyAlpha=this.premultiplyAlpha;e.flipY=this.flipY;e.unpackAlignment=this.unpackAlignment;return e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CubeTexture=function(e,t,r,i,n,o,a,s,h){THREE.Texture.call(this,e,t,r,i,n,o,a,s,h);this.images=e};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.clone=function(e){void 0===e&&(e=new THREE.CubeTexture);THREE.Texture.prototype.clone.call(this,e);e.images=this.images;return e};THREE.CompressedTexture=function(e,t,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c);this.image={width:t,height:r};this.mipmaps=e;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,e);return e};THREE.DataTexture=function(e,t,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c);this.image={data:e,width:t,height:r}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,e);return e};THREE.PointCloud=function(e,t){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.PointCloudMaterial({color:16777215*Math.random()});this.sortParticles=!1};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);THREE.PointCloud.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray;return function(r,i){var n=this,o=n.geometry,a=r.params.PointCloud.threshold;e.getInverse(this.matrixWorld);t.copy(r.ray).applyMatrix4(e);if(null===o.boundingBox||!1!==t.isIntersectionBox(o.boundingBox)){var s=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=new THREE.Vector3,a=function(e,o){var a=t.distanceToPoint(e);if(a<s){var h=t.closestPointToPoint(e);h.applyMatrix4(n.matrixWorld);var l=r.ray.origin.distanceTo(h);i.push({distance:l,distanceToRay:a,point:h.clone(),index:o,face:null,object:n})}};if(o instanceof THREE.BufferGeometry){var l=o.attributes,c=l.position.array;if(void 0!==l.index){var l=l.index.array,u=o.offsets;0===u.length&&(u=[{start:0,count:l.length,index:0}]);for(var f=0,E=u.length;f<E;++f)for(var p=u[f].start,d=u[f].index,o=p,p=p+u[f].count;o<p;o++){var m=d+l[o];h.set(c[3*m],c[3*m+1],c[3*m+2]);a(h,m)}}else for(l=c.length/3,o=0;o<l;o++)h.set(c[3*o],c[3*o+1],c[3*o+2]),a(h,o)}else for(h=this.geometry.vertices,o=0;o<h.length;o++)a(h[o],o)}}}();THREE.PointCloud.prototype.clone=function(e){void 0===e&&(e=new THREE.PointCloud(this.geometry,this.material));e.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,e);return e};THREE.ParticleSystem=function(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");return new THREE.PointCloud(e,t)};THREE.Line=function(e,t,r){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==r?r:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere;return function(i,n){var o=i.linePrecision,o=o*o,a=this.geometry;null===a.boundingSphere&&a.computeBoundingSphere();r.copy(a.boundingSphere);r.applyMatrix4(this.matrixWorld);if(!1!==i.ray.isIntersectionSphere(r)&&(e.getInverse(this.matrixWorld),t.copy(i.ray).applyMatrix4(e),a instanceof THREE.Geometry))for(var a=a.vertices,s=a.length,h=new THREE.Vector3,l=new THREE.Vector3,c=this.type===THREE.LineStrip?1:2,u=0;u<s-1;u+=c)if(!(t.distanceSqToSegment(a[u],a[u+1],l,h)>o)){var f=t.origin.distanceTo(l);f<i.near||f>i.far||n.push({distance:f,point:h.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}();THREE.Line.prototype.clone=function(e){void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Mesh=function(e,t){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){if(void 0!==this.morphTargetDictionary[e])return this.morphTargetDictionary[e];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere,i=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;return function(a,s){var h=this.geometry;null===h.boundingSphere&&h.computeBoundingSphere();r.copy(h.boundingSphere);r.applyMatrix4(this.matrixWorld);if(!1!==a.ray.isIntersectionSphere(r)&&(e.getInverse(this.matrixWorld),t.copy(a.ray).applyMatrix4(e),null===h.boundingBox||!1!==t.isIntersectionBox(h.boundingBox)))if(h instanceof THREE.BufferGeometry){var l=this.material;if(void 0!==l){var c=h.attributes,u,f,E=a.precision;if(void 0!==c.index){var p=c.index.array,d=c.position.array,m=h.offsets;0===m.length&&(m=[{start:0,count:p.length,index:0}]);for(var g=0,T=m.length;g<T;++g)for(var c=m[g].start,v=m[g].index,h=c,y=c+m[g].count;h<y;h+=3){c=v+p[h];u=v+p[h+1];f=v+p[h+2];i.set(d[3*c],d[3*c+1],d[3*c+2]);n.set(d[3*u],d[3*u+1],d[3*u+2]);o.set(d[3*f],d[3*f+1],d[3*f+2]);var R=l.side===THREE.BackSide?t.intersectTriangle(o,n,i,!0):t.intersectTriangle(i,n,o,l.side!==THREE.DoubleSide);if(null!==R){R.applyMatrix4(this.matrixWorld);var x=a.ray.origin.distanceTo(R);x<E||x<a.near||x>a.far||s.push({distance:x,point:R,indices:[c,u,f],face:null,faceIndex:null,object:this})}}}else for(d=c.position.array,p=h=0,y=d.length;h<y;h+=3,p+=9)c=h,u=h+1,f=h+2,i.set(d[p],d[p+1],d[p+2]),n.set(d[p+3],d[p+4],d[p+5]),o.set(d[p+6],d[p+7],d[p+8]),R=l.side===THREE.BackSide?t.intersectTriangle(o,n,i,!0):t.intersectTriangle(i,n,o,l.side!==THREE.DoubleSide),null!==R&&(R.applyMatrix4(this.matrixWorld),x=a.ray.origin.distanceTo(R),x<E||x<a.near||x>a.far||s.push({distance:x,point:R,indices:[c,u,f],face:null,faceIndex:null,object:this}))}}else if(h instanceof THREE.Geometry)for(p=this.material instanceof THREE.MeshFaceMaterial,d=!0===p?this.material.materials:null,E=a.precision,m=h.vertices,g=0,T=h.faces.length;g<T;g++)if(v=h.faces[g],l=!0===p?d[v.materialIndex]:this.material,void 0!==l){c=m[v.a];u=m[v.b];f=m[v.c];if(!0===l.morphTargets){R=h.morphTargets;x=this.morphTargetInfluences;i.set(0,0,0);n.set(0,0,0);o.set(0,0,0);for(var y=0,H=R.length;y<H;y++){var _=x[y];if(0!==_){var b=R[y].vertices;i.x+=(b[v.a].x-c.x)*_;i.y+=(b[v.a].y-c.y)*_;i.z+=(b[v.a].z-c.z)*_;n.x+=(b[v.b].x-u.x)*_;n.y+=(b[v.b].y-u.y)*_;n.z+=(b[v.b].z-u.z)*_;o.x+=(b[v.c].x-f.x)*_;o.y+=(b[v.c].y-f.y)*_;o.z+=(b[v.c].z-f.z)*_}}i.add(c);n.add(u);o.add(f);c=i;u=n;f=o}R=l.side===THREE.BackSide?t.intersectTriangle(f,u,c,!0):t.intersectTriangle(c,u,f,l.side!==THREE.DoubleSide);null!==R&&(R.applyMatrix4(this.matrixWorld),x=a.ray.origin.distanceTo(R),x<E||x<a.near||x>a.far||s.push({distance:x,point:R,face:v,faceIndex:g,object:this}))}}}();THREE.Mesh.prototype.clone=function(e,t){void 0===e&&(e=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,e,t);return e};THREE.Bone=function(e){THREE.Object3D.call(this);this.skin=e;this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.updateMatrixWorld=function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e);this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0};THREE.Skeleton=function(e,t,r){this.useVertexTexture=void 0!==r?r:!0;this.identityMatrix=new THREE.Matrix4;e=e||[];this.bones=e.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else for(console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new THREE.Matrix4)};THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var r=new THREE.Matrix4;this.bones[e]&&r.getInverse(this.bones[e].matrixWorld);this.boneInverses.push(r)}};THREE.Skeleton.prototype.pose=function(){for(var e,t=0,r=this.bones.length;t<r;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);t=0;for(r=this.bones.length;t<r;t++)if(e=this.bones[t])e.parent?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale)};THREE.Skeleton.prototype.update=function(){for(var e=new THREE.Matrix4,t=0,r=this.bones.length;t<r;t++)e.multiplyMatrices(this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};THREE.SkinnedMesh=function(e,t,r){THREE.Mesh.call(this,e,t);this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;e=[];if(this.geometry&&void 0!==this.geometry.bones){for(var i,n,o,a,s=0,h=this.geometry.bones.length;s<h;++s)i=this.geometry.bones[s],n=i.pos,o=i.rotq,a=i.scl,t=new THREE.Bone(this),e.push(t),t.name=i.name,t.position.set(n[0],n[1],n[2]),t.quaternion.set(o[0],o[1],o[2],o[3]),void 0!==a?t.scale.set(a[0],a[1],a[2]):t.scale.set(1,1,1);s=0;for(h=this.geometry.bones.length;s<h;++s)i=this.geometry.bones[s],-1!==i.parent?e[i.parent].add(e[s]):this.add(e[s])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(e,void 0,r))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e;void 0===t&&(this.updateMatrixWorld(!0),t=this.matrixWorld);this.bindMatrix.copy(t);this.bindMatrixInverse.getInverse(t)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();Infinity!==r?t.multiplyScalar(r):t.set(1)}};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)};THREE.SkinnedMesh.prototype.clone=function(e){void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,e);return e};THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t);this.duration=1e3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e;this.endKeyframe=t;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)_?(\d+)/,n=0,o=e.morphTargets.length;n<o;n++){var a=e.morphTargets[n].name.match(i);if(a&&1<a.length){a=a[1];r[a]||(r[a]={start:Infinity,end:-Infinity});var s=r[a];n<s.start&&(s.start=n);n>s.end&&(s.end=n);t||(t=a)}}e.firstAnimation=t};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:t,end:r}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e);t=this.time%t/t;this.directionBackwards&&(t=1-t);this.morphTargetInfluences[this.currentKeyframe]=t;this.morphTargetInfluences[this.lastKeyframe]=1-t};THREE.MorphAnimMesh.prototype.interpolateTargets=function(e,t,r){for(var i=this.morphTargetInfluences,n=0,o=i.length;n<o;n++)i[n]=0;-1<e&&(i[e]=1-r);-1<t&&(i[t]=r)};THREE.MorphAnimMesh.prototype.clone=function(e){void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material));e.duration=this.duration;e.mirroredLoop=this.mirroredLoop;e.time=this.time;e.lastKeyframe=this.lastKeyframe;e.currentKeyframe=this.currentKeyframe;e.direction=this.direction;e.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,e);return e};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);t=Math.abs(t);for(var r=0;r<this.objects.length&&!(t<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:t,object:e});
this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,r=this.objects.length;t<r&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object};THREE.LOD.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var i=t.ray.origin.distanceTo(e);this.getObjectForDistance(i).raycast(t,r)}}();THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){if(1<this.objects.length){e.setFromMatrixPosition(r.matrixWorld);t.setFromMatrixPosition(this.matrixWorld);r=e.distanceTo(t);this.objects[0].object.visible=!0;for(var i=1,n=this.objects.length;i<n;i++)if(r>=this.objects[i].distance)this.objects[i-1].object.visible=!1,this.objects[i].object.visible=!0;else break;for(;i<n;i++)this.objects[i].object.visible=!1}}}();THREE.LOD.prototype.clone=function(e){void 0===e&&(e=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,e);for(var t=0,r=this.objects.length;t<r;t++){var i=this.objects[t].object.clone();i.visible=0===t;e.addLevel(i,this.objects[t].distance)}return e};THREE.Sprite=function(){var e=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0]),t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(e,3));return function(e){THREE.Object3D.call(this);this.geometry=t;this.material=void 0!==e?e:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var i=t.ray.distanceToPoint(e);i>this.scale.x||r.push({distance:i,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(e){void 0===e&&(e=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}this.dispatchEvent({type:"objectAdded",object:e});e.dispatchEvent({type:"addedToScene",scene:this});for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])};THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1);if(e.shadowCascadeArray)for(t=0;t<e.shadowCascadeArray.length;t++)this.__removeObject(e.shadowCascadeArray[t])}else e instanceof THREE.Camera||(this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1));this.dispatchEvent({type:"objectRemoved",object:e});e.dispatchEvent({type:"removedFromScene",scene:this});for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])};THREE.Scene.prototype.clone=function(e){void 0===e&&(e=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,e);null!==this.fog&&(e.fog=this.fog.clone());null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone());e.autoUpdate=this.autoUpdate;e.matrixAutoUpdate=this.matrixAutoUpdate;return e};THREE.Fog=function(e,t,r){this.name="";this.color=new THREE.Color(e);this.near=void 0!==t?t:1;this.far=void 0!==r?r:1e3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(e,t){this.name="";this.color=new THREE.Color(e);this.density=void 0!==t?t:25e-5};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(e){function t(e,t,r,i){l(t);c(r);u(i);f(e.getStyle());A.stroke();ut.expandByScalar(2*t)}function r(e){E(e.getStyle());A.fill()}function i(e){n(e.target)}function n(e){if(!(e instanceof THREE.CompressedTexture)){var t=e.wrapS===THREE.RepeatWrapping,r=e.wrapT===THREE.RepeatWrapping,i=e.image,n=document.createElement("canvas");n.width=i.width;n.height=i.height;var o=n.getContext("2d");o.setTransform(1,0,0,-1,0,i.height);o.drawImage(i,0,0);tt[e.id]=A.createPattern(n,!0===t&&!0===r?"repeat":!0===t&&!1===r?"repeat-x":!1===t&&!0===r?"repeat-y":"no-repeat")}}function o(e,t,r,o,a,s,h,l,c,u,f,p,d){if(!(d instanceof THREE.DataTexture)){!1===d.hasEventListener("update",i)&&(void 0!==d.image&&0<d.image.width&&n(d),d.addEventListener("update",i));var m=tt[d.id];if(void 0!==m){E(m);var m=d.offset.x/d.repeat.x,g=d.offset.y/d.repeat.y,T=d.image.width*d.repeat.x;d=d.image.height*d.repeat.y;h=(h+m)*T;l=(l+g)*d;r-=e;o-=t;a-=e;s-=t;c=(c+m)*T-h;u=(u+g)*d-l;f=(f+m)*T-h;p=(p+g)*d-l;d=c*p-f*u;0!==d&&(m=1/d,d=(p*r-u*a)*m,u=(p*o-u*s)*m,r=(c*a-f*r)*m,o=(c*s-f*o)*m,e=e-d*h-r*l,t=t-u*h-o*l,A.save(),A.transform(d,u,r,o,e,t),A.fill(),A.restore())}else E("rgba(0,0,0,1)"),A.fill()}}function a(e,t,r){var i=t.x-e.x,n=t.y-e.y,o=i*i+n*n;0!==o&&(r/=Math.sqrt(o),i*=r,n*=r,t.x+=i,t.y+=n,e.x-=i,e.y-=n)}function s(e){F!==e&&(F=A.globalAlpha=e)}function h(e){D!==e&&(e===THREE.NormalBlending?A.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?A.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(A.globalCompositeOperation="darker"),D=e)}function l(e){z!==e&&(z=A.lineWidth=e)}function c(e){B!==e&&(B=A.lineCap=e)}function u(e){k!==e&&(k=A.lineJoin=e)}function f(e){U!==e&&(U=A.strokeStyle=e)}function E(e){V!==e&&(V=A.fillStyle=e)}function p(e){N.length!==e.length&&(A.setLineDash(e),N=e)}console.log("THREE.CanvasRenderer",THREE.REVISION);var d=THREE.Math.smoothstep;e=e||{};var m=this,g,T,v,y=new THREE.Projector,R=void 0!==e.canvas?e.canvas:document.createElement("canvas"),x=R.width,H=R.height,_=Math.floor(x/2),b=Math.floor(H/2),w=0,M=0,S=x,C=H,A=R.getContext("2d",{alpha:!0===e.alpha}),L=new THREE.Color(0),P=0,F=1,D=0,U=null,V=null,z=null,B=null,k=null,N=[],O,I,G,W;new THREE.RenderableVertex;new THREE.RenderableVertex;var j,X,Y,q,K,Z,Q=new THREE.Color;new THREE.Color;new THREE.Color;new THREE.Color;new THREE.Color;var J=new THREE.Color,$=new THREE.Color,et=new THREE.Color,tt={},rt,it,nt,ot,at,st,ht,lt=new THREE.Box2,ct=new THREE.Box2,ut=new THREE.Box2,ft=new THREE.Color,Et=new THREE.Color,pt=new THREE.Color,dt=new THREE.Vector3,mt=new THREE.Vector3,gt=new THREE.Vector3,Tt=new THREE.Matrix3;void 0===A.setLineDash&&(A.setLineDash=function(){});this.domElement=R;this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(e,t,r){x=e*this.devicePixelRatio;H=t*this.devicePixelRatio;R.width=x;R.height=H;_=Math.floor(x/2);b=Math.floor(H/2);!1!==r&&(R.style.width=e+"px",R.style.height=t+"px");lt.min.set(-_,-b);lt.max.set(_,b);ct.min.set(-_,-b);ct.max.set(_,b);F=1;D=0;k=B=z=V=U=null;this.setViewport(0,0,e,t)};this.setViewport=function(e,t,r,i){w=e*this.devicePixelRatio;M=t*this.devicePixelRatio;S=r*this.devicePixelRatio;C=i*this.devicePixelRatio};this.setScissor=function(){};this.enableScissorTest=function(){};this.setClearColor=function(e,t){L.set(e);P=void 0!==t?t:1;ct.min.set(-_,-b);ct.max.set(_,b)};this.setClearColorHex=function(e,t){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,t)};this.getClearColor=function(){return L};this.getClearAlpha=function(){return P};this.getMaxAnisotropy=function(){return 0};this.clear=function(){!1===ct.empty()&&(ct.intersect(lt),ct.expandByScalar(2),ct.min.x+=_,ct.min.y=-ct.min.y+b,ct.max.x+=_,ct.max.y=-ct.max.y+b,1>P&&A.clearRect(ct.min.x|0,ct.min.y|0,ct.max.x-ct.min.x|0,ct.max.y-ct.min.y|0),0<P&&(h(THREE.NormalBlending),s(1),E("rgba("+Math.floor(255*L.r)+","+Math.floor(255*L.g)+","+Math.floor(255*L.b)+","+P+")"),A.fillRect(ct.min.x|0,ct.min.y|0,ct.max.x-ct.min.x|0,ct.max.y-ct.min.y|0)),ct.makeEmpty())};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(e,R){if(!1===R instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear();m.info.render.vertices=0;m.info.render.faces=0;A.setTransform(S/x,0,0,-C/H,w,H-M);A.translate(_,b);g=y.projectScene(e,R,this.sortObjects,this.sortElements);T=g.elements;v=g.lights;O=R;Tt.getNormalMatrix(R.matrixWorldInverse);ft.setRGB(0,0,0);Et.setRGB(0,0,0);pt.setRGB(0,0,0);for(var L=0,P=v.length;L<P;L++){var F=v[L],D=F.color;F instanceof THREE.AmbientLight?ft.add(D):F instanceof THREE.DirectionalLight?Et.add(D):F instanceof THREE.PointLight&&pt.add(D)}L=0;for(P=T.length;L<P;L++){var U=T[L],V=U.material;if(void 0!==V&&0!==V.opacity){ut.makeEmpty();if(U instanceof THREE.RenderableSprite){I=U;I.x*=_;I.y*=b;var F=I,z=U,D=V;s(D.opacity);h(D.blending);var B=z.scale.x*_,z=z.scale.y*b,U=.5*Math.sqrt(B*B+z*z);ut.min.set(F.x-U,F.y-U);ut.max.set(F.x+U,F.y+U);if(D instanceof THREE.SpriteMaterial){var k=D.map;if(null!==k&&void 0!==k.image){!1===k.hasEventListener("update",i)&&(0<k.image.width&&n(k),k.addEventListener("update",i));U=tt[k.id];void 0!==U?E(U):E("rgba( 0, 0, 0, 1 )");var N=k.image,U=N.width*k.offset.x,V=N.height*k.offset.y,vt=N.width*k.repeat.x,k=N.height*k.repeat.y,N=B/vt,yt=z/k;A.save();A.translate(F.x,F.y);0!==D.rotation&&A.rotate(D.rotation);A.translate(-B/2,-z/2);A.scale(N,yt);A.translate(-U,-V);A.fillRect(U,V,vt,k)}else E(D.color.getStyle()),A.save(),A.translate(F.x,F.y),0!==D.rotation&&A.rotate(D.rotation),A.scale(B,-z),A.fillRect(-.5,-.5,1,1);A.restore()}else D instanceof THREE.SpriteCanvasMaterial&&(f(D.color.getStyle()),E(D.color.getStyle()),A.save(),A.translate(F.x,F.y),0!==D.rotation&&A.rotate(D.rotation),A.scale(B,z),D.program(A),A.restore())}else if(U instanceof THREE.RenderableLine){if(I=U.v1,G=U.v2,I.positionScreen.x*=_,I.positionScreen.y*=b,G.positionScreen.x*=_,G.positionScreen.y*=b,ut.setFromPoints([I.positionScreen,G.positionScreen]),!0===lt.isIntersectionBox(ut))if(F=I,D=G,B=U,z=V,s(z.opacity),h(z.blending),A.beginPath(),A.moveTo(F.positionScreen.x,F.positionScreen.y),A.lineTo(D.positionScreen.x,D.positionScreen.y),z instanceof THREE.LineBasicMaterial){l(z.linewidth);c(z.linecap);u(z.linejoin);if(z.vertexColors!==THREE.VertexColors)f(z.color.getStyle());else if(U=B.vertexColors[0].getStyle(),B=B.vertexColors[1].getStyle(),U===B)f(U);else{try{var Rt=A.createLinearGradient(F.positionScreen.x,F.positionScreen.y,D.positionScreen.x,D.positionScreen.y);Rt.addColorStop(0,U);Rt.addColorStop(1,B)}catch(xt){Rt=U}f(Rt)}A.stroke();ut.expandByScalar(2*z.linewidth)}else z instanceof THREE.LineDashedMaterial&&(l(z.linewidth),c(z.linecap),u(z.linejoin),f(z.color.getStyle()),p([z.dashSize,z.gapSize]),A.stroke(),ut.expandByScalar(2*z.linewidth),p([]))}else if(U instanceof THREE.RenderableFace){I=U.v1;G=U.v2;W=U.v3;if(-1>I.positionScreen.z||1<I.positionScreen.z)continue;if(-1>G.positionScreen.z||1<G.positionScreen.z)continue;if(-1>W.positionScreen.z||1<W.positionScreen.z)continue;I.positionScreen.x*=_;I.positionScreen.y*=b;G.positionScreen.x*=_;G.positionScreen.y*=b;W.positionScreen.x*=_;W.positionScreen.y*=b;0<V.overdraw&&(a(I.positionScreen,G.positionScreen,V.overdraw),a(G.positionScreen,W.positionScreen,V.overdraw),a(W.positionScreen,I.positionScreen,V.overdraw));ut.setFromPoints([I.positionScreen,G.positionScreen,W.positionScreen]);if(!0===lt.isIntersectionBox(ut)){D=I;B=G;z=W;F=V;m.info.render.vertices+=3;m.info.render.faces++;s(F.opacity);h(F.blending);j=D.positionScreen.x;X=D.positionScreen.y;Y=B.positionScreen.x;q=B.positionScreen.y;K=z.positionScreen.x;Z=z.positionScreen.y;var V=j,vt=X,k=Y,N=q,yt=K,Ht=Z;A.beginPath();A.moveTo(V,vt);A.lineTo(k,N);A.lineTo(yt,Ht);A.closePath();if((F instanceof THREE.MeshLambertMaterial||F instanceof THREE.MeshPhongMaterial)&&null===F.map){J.copy(F.color);$.copy(F.emissive);F.vertexColors===THREE.FaceColors&&J.multiply(U.color);Q.copy(ft);mt.copy(D.positionWorld).add(B.positionWorld).add(z.positionWorld).divideScalar(3);D=mt;B=U.normalModel;z=Q;U=0;for(V=v.length;U<V;U++)vt=v[U],et.copy(vt.color),vt instanceof THREE.DirectionalLight?(k=dt.setFromMatrixPosition(vt.matrixWorld).normalize(),N=B.dot(k),0>=N||(N*=vt.intensity,z.add(et.multiplyScalar(N)))):vt instanceof THREE.PointLight&&(k=dt.setFromMatrixPosition(vt.matrixWorld),N=B.dot(dt.subVectors(k,D).normalize()),0>=N||(N*=0==vt.distance?1:1-Math.min(D.distanceTo(k)/vt.distance,1),0!=N&&(N*=vt.intensity,z.add(et.multiplyScalar(N)))));Q.multiply(J).add($);!0===F.wireframe?t(Q,F.wireframeLinewidth,F.wireframeLinecap,F.wireframeLinejoin):r(Q)}else F instanceof THREE.MeshBasicMaterial||F instanceof THREE.MeshLambertMaterial||F instanceof THREE.MeshPhongMaterial?null!==F.map?F.map.mapping instanceof THREE.UVMapping&&(rt=U.uvs,o(j,X,Y,q,K,Z,rt[0].x,rt[0].y,rt[1].x,rt[1].y,rt[2].x,rt[2].y,F.map)):null!==F.envMap?F.envMap.mapping instanceof THREE.SphericalReflectionMapping?(gt.copy(U.vertexNormalsModel[0]).applyMatrix3(Tt),it=.5*gt.x+.5,nt=.5*gt.y+.5,gt.copy(U.vertexNormalsModel[1]).applyMatrix3(Tt),ot=.5*gt.x+.5,at=.5*gt.y+.5,gt.copy(U.vertexNormalsModel[2]).applyMatrix3(Tt),st=.5*gt.x+.5,ht=.5*gt.y+.5,o(j,X,Y,q,K,Z,it,nt,ot,at,st,ht,F.envMap)):F.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(gt.copy(U.vertexNormalsModel[0]).applyMatrix3(Tt),it=-.5*gt.x+.5,nt=-.5*gt.y+.5,gt.copy(U.vertexNormalsModel[1]).applyMatrix3(Tt),ot=-.5*gt.x+.5,at=-.5*gt.y+.5,gt.copy(U.vertexNormalsModel[2]).applyMatrix3(Tt),st=-.5*gt.x+.5,ht=-.5*gt.y+.5,o(j,X,Y,q,K,Z,it,nt,ot,at,st,ht,F.envMap)):(Q.copy(F.color),F.vertexColors===THREE.FaceColors&&Q.multiply(U.color),!0===F.wireframe?t(Q,F.wireframeLinewidth,F.wireframeLinecap,F.wireframeLinejoin):r(Q)):(F instanceof THREE.MeshDepthMaterial?Q.r=Q.g=Q.b=1-d(D.positionScreen.z*D.positionScreen.w,O.near,O.far):F instanceof THREE.MeshNormalMaterial?(gt.copy(U.normalModel).applyMatrix3(Tt),Q.setRGB(gt.x,gt.y,gt.z).multiplyScalar(.5).addScalar(.5)):Q.setRGB(1,1,1),!0===F.wireframe?t(Q,F.wireframeLinewidth,F.wireframeLinecap,F.wireframeLinejoin):r(Q))}}ct.union(ut)}}A.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={};THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif";THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif";THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n	mvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;";THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	vec3 pointDiffuse = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n				// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	vec3 spotDiffuse = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n					// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n					// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	vec3 dirDiffuse = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n\n				// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	vec3 hemiDiffuse = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		hemiDiffuse += diffuse * hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif";THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif";THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	uniform samplerCube envMap;\n	uniform float flipEnvMap;\n	uniform int combine;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n		uniform bool useRefract;\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n			// Per-Pixel Tangent Space Normal Mapping\n			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n";THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif";
THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	#ifdef GAMMA_INPUT\n\n		texelColor.xyz *= texelColor.xyz;\n\n	#endif\n\n	gl_FragColor = gl_FragColor * texelColor;\n\n#endif";THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif";THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n	#ifdef GAMMA_INPUT\n\n		vColor = color * color;\n\n	#else\n\n		vColor = color;\n\n	#endif\n\n#endif";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n";THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n	uniform bool useRefract;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif";THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n";THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n	vec3 reflectVec;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n		// Transforming Normal Vectors with the Inverse Transformation\n\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n		if ( useRefract ) {\n\n			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		} else { \n\n			reflectVec = reflect( cameraToVertex, worldNormal );\n\n		}\n\n	#else\n\n		reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#else\n\n		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#endif\n\n	#ifdef GAMMA_INPUT\n\n		cubeColor.xyz *= cubeColor.xyz;\n\n	#endif\n\n	if ( combine == 1 ) {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n	} else if ( combine == 2 ) {\n\n		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n	} else {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n	}\n\n#endif";THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif";THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif";THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif";THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n	objectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n	objectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n	objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;";THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;";THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif";THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	if ( useRefract ) {\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	} else {\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	}\n\n#endif";THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	#ifdef GAMMA_OUTPUT\n\n		shadowColor *= shadowColor;\n\n	#endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n";THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#endif\n\n	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#endif\n\n	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif";THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif";THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif";THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n	gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n";THREE.UniformsUtils={merge:function(e){var t,r,i,n={};for(t=0;t<e.length;t++)for(r in i=this.clone(e[t]),i)n[r]=i[r];return n},clone:function(e){var t,r,i,n={};for(t in e)for(r in n[t]={},e[t])i=e[t][r],n[t][r]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i;return n}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED\n		if ( gl_FrontFacing )\n			gl_FragColor.xyz *= vLightFront;\n		else\n			gl_FragColor.xyz *= vLightBack;\n	#else\n		gl_FragColor.xyz *= vLightFront;\n	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n	#else\n		gl_PointSize = size;\n	#endif\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	float color = 1.0 - smoothstep( mNear, mFar, depth );\n	gl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	gl_FragColor = vec4( vec3( 1.0 ), opacity );\n	vec3 specularTex = vec3( 1.0 );\n	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n	normalTex.xy *= uNormalScale;\n	normalTex = normalize( normalTex );\n	if( enableDiffuse ) {\n		#ifdef GAMMA_INPUT\n			vec4 texelColor = texture2D( tDiffuse, vUv );\n			texelColor.xyz *= texelColor.xyz;\n			gl_FragColor = gl_FragColor * texelColor;\n		#else\n			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n		#endif\n	}\n	if( enableAO ) {\n		#ifdef GAMMA_INPUT\n			vec4 aoColor = texture2D( tAO, vUv );\n			aoColor.xyz *= aoColor.xyz;\n			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n		#else\n			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n		#endif\n	}",THREE.ShaderChunk.alphatest_fragment,"	if( enableSpecular )\n		specularTex = texture2D( tSpecular, vUv ).xyz;\n	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n	vec3 finalNormal = tsb * normalTex;\n	#ifdef FLIP_SIDED\n		finalNormal = -finalNormal;\n	#endif\n	vec3 normal = normalize( finalNormal );\n	vec3 viewPosition = normalize( vViewPosition );\n	#if MAX_POINT_LIGHTS > 0\n		vec3 pointDiffuse = vec3( 0.0 );\n		vec3 pointSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n			float pointDistance = 1.0;\n			if ( pointLightDistance[ i ] > 0.0 )\n				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n			pointVector = normalize( pointVector );\n			#ifdef WRAP_AROUND\n				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n			#else\n				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n			#endif\n			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n			vec3 pointHalfVector = normalize( pointVector + viewPosition );\n			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\n			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n		}\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		vec3 spotDiffuse = vec3( 0.0 );\n		vec3 spotSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n			float spotDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n			spotVector = normalize( spotVector );\n			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n			if ( spotEffect > spotLightAngleCos[ i ] ) {\n				spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n				#ifdef WRAP_AROUND\n					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n				#else\n					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n				#endif\n				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n				vec3 spotHalfVector = normalize( spotVector + viewPosition );\n				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n				float specularNormalization = ( shininess + 2.0 ) / 8.0;\n				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\n				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n			}\n		}\n	#endif\n	#if MAX_DIR_LIGHTS > 0\n		vec3 dirDiffuse = vec3( 0.0 );\n		vec3 dirSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n			vec3 dirVector = normalize( lDirection.xyz );\n			#ifdef WRAP_AROUND\n				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n			#else\n				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n			#endif\n			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n			vec3 dirHalfVector = normalize( dirVector + viewPosition );\n			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n		}\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		vec3 hemiDiffuse = vec3( 0.0 );\n		vec3 hemiSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n			vec3 lVector = normalize( lDirection.xyz );\n			float dotProduct = dot( normal, lVector );\n			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n			hemiDiffuse += diffuse * hemiColor;\n			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n			float hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n			vec3 lVectorGround = -lVector;\n			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n			float hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n			float dotProductGround = dot( normal, lVectorGround );\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n		}\n	#endif\n	vec3 totalDiffuse = vec3( 0.0 );\n	vec3 totalSpecular = vec3( 0.0 );\n	#if MAX_DIR_LIGHTS > 0\n		totalDiffuse += dirDiffuse;\n		totalSpecular += dirSpecular;\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		totalDiffuse += hemiDiffuse;\n		totalSpecular += hemiSpecular;\n	#endif\n	#if MAX_POINT_LIGHTS > 0\n		totalDiffuse += pointDiffuse;\n		totalSpecular += pointSpecular;\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		totalDiffuse += spotDiffuse;\n		totalSpecular += spotSpecular;\n	#endif\n	#ifdef METAL\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n	#else\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n	#endif\n	if ( enableReflection ) {\n		vec3 vReflect;\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		if ( useRefract ) {\n			vReflect = refract( cameraToVertex, normal, refractionRatio );\n		} else {\n			vReflect = reflect( cameraToVertex, normal );\n		}\n		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n		#ifdef GAMMA_INPUT\n			cubeColor.xyz *= cubeColor.xyz;\n		#endif\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n	}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n	uniform sampler2D tDisplacement;\n	uniform float uDisplacementScale;\n	uniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"	#ifdef USE_SKINNING\n		vNormal = normalize( normalMatrix * skinnedNormal.xyz );\n		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n		vTangent = normalize( normalMatrix * skinnedTangent.xyz );\n	#else\n		vNormal = normalize( normalMatrix * normal );\n		vTangent = normalize( normalMatrix * tangent.xyz );\n	#endif\n	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n	vUv = uv * uRepeat + uOffset;\n	vec3 displacedPosition;\n	#ifdef VERTEX_TEXTURES\n		if ( enableDisplacement ) {\n			vec3 dv = texture2D( tDisplacement, uv ).xyz;\n			float df = uDisplacementScale * dv.x + uDisplacementBias;\n			displacedPosition = position + normalize( normal ) * df;\n		} else {\n			#ifdef USE_SKINNING\n				vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n				vec4 skinned = vec4( 0.0 );\n				skinned += boneMatX * skinVertex * skinWeight.x;\n				skinned += boneMatY * skinVertex * skinWeight.y;\n				skinned += boneMatZ * skinVertex * skinWeight.z;\n				skinned += boneMatW * skinVertex * skinWeight.w;\n				skinned  = bindMatrixInverse * skinned;\n				displacedPosition = skinned.xyz;\n			#else\n				displacedPosition = position;\n			#endif\n		}\n	#else\n		#ifdef USE_SKINNING\n			vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n			vec4 skinned = vec4( 0.0 );\n			skinned += boneMatX * skinVertex * skinWeight.x;\n			skinned += boneMatY * skinVertex * skinWeight.y;\n			skinned += boneMatZ * skinVertex * skinWeight.z;\n			skinned += boneMatW * skinVertex * skinWeight.w;\n			skinned  = bindMatrixInverse * skinned;\n			displacedPosition = skinned.xyz;\n		#else\n			displacedPosition = position;\n		#endif\n	#endif\n	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"	vWorldPosition = worldPosition.xyz;\n	vViewPosition = -mvPosition.xyz;\n	#ifdef USE_SHADOWMAP\n		for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n		}\n	#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n	vWorldPosition = worldPosition.xyz;\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n	res -= res.xxyz * bit_mask;\n	return res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT\n		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n	#else\n		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n	#endif\n}"].join("\n")}};
THREE.WebGLRenderer=function(e){function t(e,t){var r=e.vertices.length,i=t.material;if(i.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var n in i.attributes){var o=i.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3);o.size=a;o.array=new Float32Array(r*a);o.buffer=Pt.createBuffer();o.buffer.belongsToAttribute=n;o.needsUpdate=!0}e.__webglCustomAttributesList.push(o)}}}function r(e,t){var r=t.geometry,a=e.faces3,s=3*a.length,h=1*a.length,l=3*a.length,a=i(t,e),c=o(a),u=n(a),f=a.vertexColors?a.vertexColors:!1;e.__vertexArray=new Float32Array(3*s);u&&(e.__normalArray=new Float32Array(3*s));r.hasTangents&&(e.__tangentArray=new Float32Array(4*s));f&&(e.__colorArray=new Float32Array(3*s));c&&(0<r.faceVertexUvs.length&&(e.__uvArray=new Float32Array(2*s)),1<r.faceVertexUvs.length&&(e.__uv2Array=new Float32Array(2*s)));t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*s),e.__skinWeightArray=new Float32Array(4*s));r=null!==zt&&21845<h?Uint32Array:Uint16Array;e.__typeArray=r;e.__faceArray=new r(3*h);e.__lineArray=new r(2*l);if(e.numMorphTargets)for(e.__morphTargetsArrays=[],r=0,c=e.numMorphTargets;r<c;r++)e.__morphTargetsArrays.push(new Float32Array(3*s));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],r=0,c=e.numMorphNormals;r<c;r++)e.__morphNormalsArrays.push(new Float32Array(3*s));e.__webglFaceCount=3*h;e.__webglLineCount=2*l;if(a.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var E in a.attributes){var h=a.attributes[E],l={},p;for(p in h)l[p]=h[p];if(!l.__webglInitialized||l.createUniqueBuffers)l.__webglInitialized=!0,r=1,"v2"===l.type?r=2:"v3"===l.type?r=3:"v4"===l.type?r=4:"c"===l.type&&(r=3),l.size=r,l.array=new Float32Array(s*r),l.buffer=Pt.createBuffer(),l.buffer.belongsToAttribute=E,h.needsUpdate=!0,l.__original=h;e.__webglCustomAttributesList.push(l)}}e.__inittedArrays=!0}function i(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function n(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function o(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e instanceof THREE.ShaderMaterial?!0:!1}function a(e){for(var t in e.attributes){var r="index"===t?Pt.ELEMENT_ARRAY_BUFFER:Pt.ARRAY_BUFFER,i=e.attributes[t];i.buffer=Pt.createBuffer();Pt.bindBuffer(r,i.buffer);Pt.bufferData(r,i.array,Pt.STATIC_DRAW)}}function s(e,t,r,i){for(var n in t){var o=t[n],a=r[n];if(0<=o)if(a){var s=a.itemSize;Pt.bindBuffer(Pt.ARRAY_BUFFER,a.buffer);l(o);Pt.vertexAttribPointer(o,s,Pt.FLOAT,!1,0,i*s*4)}else e.defaultAttributeValues&&(2===e.defaultAttributeValues[n].length?Pt.vertexAttrib2fv(o,e.defaultAttributeValues[n]):3===e.defaultAttributeValues[n].length&&Pt.vertexAttrib3fv(o,e.defaultAttributeValues[n]))}c()}function h(){for(var e=0,t=Ht.length;e<t;e++)Ht[e]=0}function l(e){Ht[e]=1;0===_t[e]&&(Pt.enableVertexAttribArray(e),_t[e]=1)}function c(){for(var e=0,t=_t.length;e<t;e++)_t[e]!==Ht[e]&&(Pt.disableVertexAttribArray(e),_t[e]=0)}function u(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function f(e,t){return e.z!==t.z?e.z-t.z:e.id-t.id}function E(e,t){return t[0]-e[0]}function p(e,t,s){if(!1!==t.visible){var h=e.__webglObjects[t.id];if(h&&(!1===t.frustumCulled||!0===bt.intersectsObject(t))){var l=t.geometry,c,u,f;if(l instanceof THREE.BufferGeometry){var d=Pt.DYNAMIC_DRAW,m=l.attributes,g,T;for(g in m)T=m[g],T.needsUpdate&&("index"===g?(Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,T.buffer),Pt.bufferData(Pt.ELEMENT_ARRAY_BUFFER,T.array,d)):(Pt.bindBuffer(Pt.ARRAY_BUFFER,T.buffer),Pt.bufferData(Pt.ARRAY_BUFFER,T.array,d)),T.needsUpdate=!1)}else if(t instanceof THREE.Mesh){if(l.buffersNeedUpdate||l.groupsNeedUpdate)l instanceof THREE.BufferGeometry?a(l):t instanceof THREE.Mesh&&v(e,t,l);for(var y=0,H=l.geometryGroupsList.length;y<H;y++)if(c=l.geometryGroupsList[y],f=i(t,c),(l.buffersNeedUpdate||l.groupsNeedUpdate)&&r(c,t),u=f.attributes&&R(f),l.verticesNeedUpdate||l.morphTargetsNeedUpdate||l.elementsNeedUpdate||l.uvsNeedUpdate||l.normalsNeedUpdate||l.colorsNeedUpdate||l.tangentsNeedUpdate||u){var _=c,b=t,w=Pt.DYNAMIC_DRAW,M=!l.dynamic,S=f;if(_.__inittedArrays){var C=n(S),A=S.vertexColors?S.vertexColors:!1,L=o(S),P=C===THREE.SmoothShading,F=void 0,D=void 0,U=void 0,V=void 0,z=void 0,B=void 0,k=void 0,N=void 0,O=void 0,I=void 0,G=void 0,W=void 0,j=void 0,X=void 0,Y=void 0,q=void 0,J=void 0,$=void 0,et=void 0,tt=void 0,rt=void 0,it=void 0,nt=void 0,ot=void 0,at=void 0,st=void 0,ht=void 0,lt=void 0,ct=void 0,ut=void 0,ft=void 0,Et=void 0,pt=void 0,dt=void 0,mt=void 0,gt=void 0,Tt=void 0,vt=void 0,yt=void 0,Rt=void 0,xt=0,Ht=0,_t=0,Ct=0,At=0,Lt=0,Ft=0,Dt=0,Ut=0,Vt=0,zt=0,Bt=0,kt=void 0,Nt=_.__vertexArray,Ot=_.__uvArray,It=_.__uv2Array,Gt=_.__normalArray,Wt=_.__tangentArray,jt=_.__colorArray,Xt=_.__skinIndexArray,Yt=_.__skinWeightArray,qt=_.__morphTargetsArrays,Kt=_.__morphNormalsArrays,Zt=_.__webglCustomAttributesList,Qt=void 0,Jt=_.__faceArray,$t=_.__lineArray,er=b.geometry,tr=er.elementsNeedUpdate,rr=er.uvsNeedUpdate,ir=er.normalsNeedUpdate,nr=er.tangentsNeedUpdate,or=er.colorsNeedUpdate,ar=er.morphTargetsNeedUpdate,sr=er.vertices,hr=_.faces3,lr=er.faces,cr=er.faceVertexUvs[0],ur=er.faceVertexUvs[1],fr=er.skinIndices,Er=er.skinWeights,pr=er.morphTargets,dr=er.morphNormals;if(er.verticesNeedUpdate){F=0;for(D=hr.length;F<D;F++)V=lr[hr[F]],W=sr[V.a],j=sr[V.b],X=sr[V.c],Nt[Ht]=W.x,Nt[Ht+1]=W.y,Nt[Ht+2]=W.z,Nt[Ht+3]=j.x,Nt[Ht+4]=j.y,Nt[Ht+5]=j.z,Nt[Ht+6]=X.x,Nt[Ht+7]=X.y,Nt[Ht+8]=X.z,Ht+=9;Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglVertexBuffer);Pt.bufferData(Pt.ARRAY_BUFFER,Nt,w)}if(ar)for(mt=0,gt=pr.length;mt<gt;mt++){F=zt=0;for(D=hr.length;F<D;F++)yt=hr[F],V=lr[yt],W=pr[mt].vertices[V.a],j=pr[mt].vertices[V.b],X=pr[mt].vertices[V.c],Tt=qt[mt],Tt[zt]=W.x,Tt[zt+1]=W.y,Tt[zt+2]=W.z,Tt[zt+3]=j.x,Tt[zt+4]=j.y,Tt[zt+5]=j.z,Tt[zt+6]=X.x,Tt[zt+7]=X.y,Tt[zt+8]=X.z,S.morphNormals&&(P?(Rt=dr[mt].vertexNormals[yt],$=Rt.a,et=Rt.b,tt=Rt.c):tt=et=$=dr[mt].faceNormals[yt],vt=Kt[mt],vt[zt]=$.x,vt[zt+1]=$.y,vt[zt+2]=$.z,vt[zt+3]=et.x,vt[zt+4]=et.y,vt[zt+5]=et.z,vt[zt+6]=tt.x,vt[zt+7]=tt.y,vt[zt+8]=tt.z),zt+=9;Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglMorphTargetsBuffers[mt]);Pt.bufferData(Pt.ARRAY_BUFFER,qt[mt],w);S.morphNormals&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglMorphNormalsBuffers[mt]),Pt.bufferData(Pt.ARRAY_BUFFER,Kt[mt],w))}if(Er.length){F=0;for(D=hr.length;F<D;F++)V=lr[hr[F]],ot=Er[V.a],at=Er[V.b],st=Er[V.c],Yt[Vt]=ot.x,Yt[Vt+1]=ot.y,Yt[Vt+2]=ot.z,Yt[Vt+3]=ot.w,Yt[Vt+4]=at.x,Yt[Vt+5]=at.y,Yt[Vt+6]=at.z,Yt[Vt+7]=at.w,Yt[Vt+8]=st.x,Yt[Vt+9]=st.y,Yt[Vt+10]=st.z,Yt[Vt+11]=st.w,ht=fr[V.a],lt=fr[V.b],ct=fr[V.c],Xt[Vt]=ht.x,Xt[Vt+1]=ht.y,Xt[Vt+2]=ht.z,Xt[Vt+3]=ht.w,Xt[Vt+4]=lt.x,Xt[Vt+5]=lt.y,Xt[Vt+6]=lt.z,Xt[Vt+7]=lt.w,Xt[Vt+8]=ct.x,Xt[Vt+9]=ct.y,Xt[Vt+10]=ct.z,Xt[Vt+11]=ct.w,Vt+=12;0<Vt&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglSkinIndicesBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,Xt,w),Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglSkinWeightsBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,Yt,w))}if(or&&A){F=0;for(D=hr.length;F<D;F++)V=lr[hr[F]],k=V.vertexColors,N=V.color,3===k.length&&A===THREE.VertexColors?(rt=k[0],it=k[1],nt=k[2]):nt=it=rt=N,jt[Ut]=rt.r,jt[Ut+1]=rt.g,jt[Ut+2]=rt.b,jt[Ut+3]=it.r,jt[Ut+4]=it.g,jt[Ut+5]=it.b,jt[Ut+6]=nt.r,jt[Ut+7]=nt.g,jt[Ut+8]=nt.b,Ut+=9;0<Ut&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglColorBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,jt,w))}if(nr&&er.hasTangents){F=0;for(D=hr.length;F<D;F++)V=lr[hr[F]],O=V.vertexTangents,Y=O[0],q=O[1],J=O[2],Wt[Ft]=Y.x,Wt[Ft+1]=Y.y,Wt[Ft+2]=Y.z,Wt[Ft+3]=Y.w,Wt[Ft+4]=q.x,Wt[Ft+5]=q.y,Wt[Ft+6]=q.z,Wt[Ft+7]=q.w,Wt[Ft+8]=J.x,Wt[Ft+9]=J.y,Wt[Ft+10]=J.z,Wt[Ft+11]=J.w,Ft+=12;Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglTangentBuffer);Pt.bufferData(Pt.ARRAY_BUFFER,Wt,w)}if(ir&&C){F=0;for(D=hr.length;F<D;F++)if(V=lr[hr[F]],z=V.vertexNormals,B=V.normal,3===z.length&&P)for(ut=0;3>ut;ut++)Et=z[ut],Gt[Lt]=Et.x,Gt[Lt+1]=Et.y,Gt[Lt+2]=Et.z,Lt+=3;else for(ut=0;3>ut;ut++)Gt[Lt]=B.x,Gt[Lt+1]=B.y,Gt[Lt+2]=B.z,Lt+=3;Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglNormalBuffer);Pt.bufferData(Pt.ARRAY_BUFFER,Gt,w)}if(rr&&cr&&L){F=0;for(D=hr.length;F<D;F++)if(U=hr[F],I=cr[U],void 0!==I)for(ut=0;3>ut;ut++)pt=I[ut],Ot[_t]=pt.x,Ot[_t+1]=pt.y,_t+=2;0<_t&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglUVBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,Ot,w))}if(rr&&ur&&L){F=0;for(D=hr.length;F<D;F++)if(U=hr[F],G=ur[U],void 0!==G)for(ut=0;3>ut;ut++)dt=G[ut],It[Ct]=dt.x,It[Ct+1]=dt.y,Ct+=2;0<Ct&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,_.__webglUV2Buffer),Pt.bufferData(Pt.ARRAY_BUFFER,It,w))}if(tr){F=0;for(D=hr.length;F<D;F++)Jt[At]=xt,Jt[At+1]=xt+1,Jt[At+2]=xt+2,At+=3,$t[Dt]=xt,$t[Dt+1]=xt+1,$t[Dt+2]=xt,$t[Dt+3]=xt+2,$t[Dt+4]=xt+1,$t[Dt+5]=xt+2,Dt+=6,xt+=3;Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,_.__webglFaceBuffer);Pt.bufferData(Pt.ELEMENT_ARRAY_BUFFER,Jt,w);Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,_.__webglLineBuffer);Pt.bufferData(Pt.ELEMENT_ARRAY_BUFFER,$t,w)}if(Zt)for(ut=0,ft=Zt.length;ut<ft;ut++)if(Qt=Zt[ut],Qt.__original.needsUpdate){Bt=0;if(1===Qt.size)if(void 0===Qt.boundTo||"vertices"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)V=lr[hr[F]],Qt.array[Bt]=Qt.value[V.a],Qt.array[Bt+1]=Qt.value[V.b],Qt.array[Bt+2]=Qt.value[V.c],Bt+=3;else{if("faces"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)kt=Qt.value[hr[F]],Qt.array[Bt]=kt,Qt.array[Bt+1]=kt,Qt.array[Bt+2]=kt,Bt+=3}else if(2===Qt.size)if(void 0===Qt.boundTo||"vertices"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)V=lr[hr[F]],W=Qt.value[V.a],j=Qt.value[V.b],X=Qt.value[V.c],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=j.x,Qt.array[Bt+3]=j.y,Qt.array[Bt+4]=X.x,Qt.array[Bt+5]=X.y,Bt+=6;else{if("faces"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)X=j=W=kt=Qt.value[hr[F]],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=j.x,Qt.array[Bt+3]=j.y,Qt.array[Bt+4]=X.x,Qt.array[Bt+5]=X.y,Bt+=6}else if(3===Qt.size){var mr;mr="c"===Qt.type?["r","g","b"]:["x","y","z"];if(void 0===Qt.boundTo||"vertices"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)V=lr[hr[F]],W=Qt.value[V.a],j=Qt.value[V.b],X=Qt.value[V.c],Qt.array[Bt]=W[mr[0]],Qt.array[Bt+1]=W[mr[1]],Qt.array[Bt+2]=W[mr[2]],Qt.array[Bt+3]=j[mr[0]],Qt.array[Bt+4]=j[mr[1]],Qt.array[Bt+5]=j[mr[2]],Qt.array[Bt+6]=X[mr[0]],Qt.array[Bt+7]=X[mr[1]],Qt.array[Bt+8]=X[mr[2]],Bt+=9;else if("faces"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)X=j=W=kt=Qt.value[hr[F]],Qt.array[Bt]=W[mr[0]],Qt.array[Bt+1]=W[mr[1]],Qt.array[Bt+2]=W[mr[2]],Qt.array[Bt+3]=j[mr[0]],Qt.array[Bt+4]=j[mr[1]],Qt.array[Bt+5]=j[mr[2]],Qt.array[Bt+6]=X[mr[0]],Qt.array[Bt+7]=X[mr[1]],Qt.array[Bt+8]=X[mr[2]],Bt+=9;else if("faceVertices"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)kt=Qt.value[hr[F]],W=kt[0],j=kt[1],X=kt[2],Qt.array[Bt]=W[mr[0]],Qt.array[Bt+1]=W[mr[1]],Qt.array[Bt+2]=W[mr[2]],Qt.array[Bt+3]=j[mr[0]],Qt.array[Bt+4]=j[mr[1]],Qt.array[Bt+5]=j[mr[2]],Qt.array[Bt+6]=X[mr[0]],Qt.array[Bt+7]=X[mr[1]],Qt.array[Bt+8]=X[mr[2]],Bt+=9}else if(4===Qt.size)if(void 0===Qt.boundTo||"vertices"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)V=lr[hr[F]],W=Qt.value[V.a],j=Qt.value[V.b],X=Qt.value[V.c],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=W.z,Qt.array[Bt+3]=W.w,Qt.array[Bt+4]=j.x,Qt.array[Bt+5]=j.y,Qt.array[Bt+6]=j.z,Qt.array[Bt+7]=j.w,Qt.array[Bt+8]=X.x,Qt.array[Bt+9]=X.y,Qt.array[Bt+10]=X.z,Qt.array[Bt+11]=X.w,Bt+=12;else if("faces"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)X=j=W=kt=Qt.value[hr[F]],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=W.z,Qt.array[Bt+3]=W.w,Qt.array[Bt+4]=j.x,Qt.array[Bt+5]=j.y,Qt.array[Bt+6]=j.z,Qt.array[Bt+7]=j.w,Qt.array[Bt+8]=X.x,Qt.array[Bt+9]=X.y,Qt.array[Bt+10]=X.z,Qt.array[Bt+11]=X.w,Bt+=12;else if("faceVertices"===Qt.boundTo)for(F=0,D=hr.length;F<D;F++)kt=Qt.value[hr[F]],W=kt[0],j=kt[1],X=kt[2],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=W.z,Qt.array[Bt+3]=W.w,Qt.array[Bt+4]=j.x,Qt.array[Bt+5]=j.y,Qt.array[Bt+6]=j.z,Qt.array[Bt+7]=j.w,Qt.array[Bt+8]=X.x,Qt.array[Bt+9]=X.y,Qt.array[Bt+10]=X.z,Qt.array[Bt+11]=X.w,Bt+=12;Pt.bindBuffer(Pt.ARRAY_BUFFER,Qt.buffer);Pt.bufferData(Pt.ARRAY_BUFFER,Qt.array,w)}M&&(delete _.__inittedArrays,delete _.__colorArray,delete _.__normalArray,delete _.__tangentArray,delete _.__uvArray,delete _.__uv2Array,delete _.__faceArray,delete _.__vertexArray,delete _.__lineArray,delete _.__skinIndexArray,delete _.__skinWeightArray)}}l.verticesNeedUpdate=!1;l.morphTargetsNeedUpdate=!1;l.elementsNeedUpdate=!1;l.uvsNeedUpdate=!1;l.normalsNeedUpdate=!1;l.colorsNeedUpdate=!1;l.tangentsNeedUpdate=!1;l.buffersNeedUpdate=!1;f.attributes&&x(f)}else if(t instanceof THREE.Line){f=i(t,l);u=f.attributes&&R(f);if(l.verticesNeedUpdate||l.colorsNeedUpdate||l.lineDistancesNeedUpdate||u){var gr=Pt.DYNAMIC_DRAW,Tr,vr,yr,Rr,xr,Hr,_r=l.vertices,br=l.colors,wr=l.lineDistances,Mr=_r.length,Sr=br.length,Cr=wr.length,Ar=l.__vertexArray,Lr=l.__colorArray,Pr=l.__lineDistanceArray,Fr=l.colorsNeedUpdate,Dr=l.lineDistancesNeedUpdate,Ur=l.__webglCustomAttributesList,Vr,zr,Br,kr,Nr,Or;if(l.verticesNeedUpdate){for(Tr=0;Tr<Mr;Tr++)Rr=_r[Tr],xr=3*Tr,Ar[xr]=Rr.x,Ar[xr+1]=Rr.y,Ar[xr+2]=Rr.z;Pt.bindBuffer(Pt.ARRAY_BUFFER,l.__webglVertexBuffer);Pt.bufferData(Pt.ARRAY_BUFFER,Ar,gr)}if(Fr){for(vr=0;vr<Sr;vr++)Hr=br[vr],xr=3*vr,Lr[xr]=Hr.r,Lr[xr+1]=Hr.g,Lr[xr+2]=Hr.b;Pt.bindBuffer(Pt.ARRAY_BUFFER,l.__webglColorBuffer);Pt.bufferData(Pt.ARRAY_BUFFER,Lr,gr)}if(Dr){for(yr=0;yr<Cr;yr++)Pr[yr]=wr[yr];Pt.bindBuffer(Pt.ARRAY_BUFFER,l.__webglLineDistanceBuffer);Pt.bufferData(Pt.ARRAY_BUFFER,Pr,gr)}if(Ur)for(Vr=0,zr=Ur.length;Vr<zr;Vr++)if(Or=Ur[Vr],Or.needsUpdate&&(void 0===Or.boundTo||"vertices"===Or.boundTo)){xr=0;kr=Or.value.length;if(1===Or.size)for(Br=0;Br<kr;Br++)Or.array[Br]=Or.value[Br];else if(2===Or.size)for(Br=0;Br<kr;Br++)Nr=Or.value[Br],Or.array[xr]=Nr.x,Or.array[xr+1]=Nr.y,xr+=2;else if(3===Or.size)if("c"===Or.type)for(Br=0;Br<kr;Br++)Nr=Or.value[Br],Or.array[xr]=Nr.r,Or.array[xr+1]=Nr.g,Or.array[xr+2]=Nr.b,xr+=3;else for(Br=0;Br<kr;Br++)Nr=Or.value[Br],Or.array[xr]=Nr.x,Or.array[xr+1]=Nr.y,Or.array[xr+2]=Nr.z,xr+=3;else if(4===Or.size)for(Br=0;Br<kr;Br++)Nr=Or.value[Br],Or.array[xr]=Nr.x,Or.array[xr+1]=Nr.y,Or.array[xr+2]=Nr.z,Or.array[xr+3]=Nr.w,xr+=4;Pt.bindBuffer(Pt.ARRAY_BUFFER,Or.buffer);Pt.bufferData(Pt.ARRAY_BUFFER,Or.array,gr)}}l.verticesNeedUpdate=!1;l.colorsNeedUpdate=!1;l.lineDistancesNeedUpdate=!1;f.attributes&&x(f)}else if(t instanceof THREE.PointCloud){f=i(t,l);u=f.attributes&&R(f);if(l.verticesNeedUpdate||l.colorsNeedUpdate||t.sortParticles||u){var Ir=Pt.DYNAMIC_DRAW,Gr,Wr,jr,Xr,Yr,qr,Kr=l.vertices,Zr=Kr.length,Qr=l.colors,Jr=Qr.length,$r=l.__vertexArray,ei=l.__colorArray,ti=l.__sortArray,ri=l.verticesNeedUpdate,ii=l.colorsNeedUpdate,ni=l.__webglCustomAttributesList,oi,ai,si,hi,li,ci;if(t.sortParticles){Mt.copy(wt);Mt.multiply(t.matrixWorld);for(Gr=0;Gr<Zr;Gr++)jr=Kr[Gr],St.copy(jr),St.applyProjection(Mt),ti[Gr]=[St.z,Gr];ti.sort(E);for(Gr=0;Gr<Zr;Gr++)jr=Kr[ti[Gr][1]],Xr=3*Gr,$r[Xr]=jr.x,$r[Xr+1]=jr.y,$r[Xr+2]=jr.z;for(Wr=0;Wr<Jr;Wr++)Xr=3*Wr,qr=Qr[ti[Wr][1]],ei[Xr]=qr.r,ei[Xr+1]=qr.g,ei[Xr+2]=qr.b;if(ni)for(oi=0,ai=ni.length;oi<ai;oi++)if(ci=ni[oi],void 0===ci.boundTo||"vertices"===ci.boundTo)if(Xr=0,hi=ci.value.length,1===ci.size)for(si=0;si<hi;si++)Yr=ti[si][1],ci.array[si]=ci.value[Yr];else if(2===ci.size)for(si=0;si<hi;si++)Yr=ti[si][1],li=ci.value[Yr],ci.array[Xr]=li.x,ci.array[Xr+1]=li.y,Xr+=2;else if(3===ci.size)if("c"===ci.type)for(si=0;si<hi;si++)Yr=ti[si][1],li=ci.value[Yr],ci.array[Xr]=li.r,ci.array[Xr+1]=li.g,ci.array[Xr+2]=li.b,Xr+=3;else for(si=0;si<hi;si++)Yr=ti[si][1],li=ci.value[Yr],ci.array[Xr]=li.x,ci.array[Xr+1]=li.y,ci.array[Xr+2]=li.z,Xr+=3;else if(4===ci.size)for(si=0;si<hi;si++)Yr=ti[si][1],li=ci.value[Yr],ci.array[Xr]=li.x,ci.array[Xr+1]=li.y,ci.array[Xr+2]=li.z,ci.array[Xr+3]=li.w,Xr+=4}else{if(ri)for(Gr=0;Gr<Zr;Gr++)jr=Kr[Gr],Xr=3*Gr,$r[Xr]=jr.x,$r[Xr+1]=jr.y,$r[Xr+2]=jr.z;if(ii)for(Wr=0;Wr<Jr;Wr++)qr=Qr[Wr],Xr=3*Wr,ei[Xr]=qr.r,ei[Xr+1]=qr.g,ei[Xr+2]=qr.b;if(ni)for(oi=0,ai=ni.length;oi<ai;oi++)if(ci=ni[oi],ci.needsUpdate&&(void 0===ci.boundTo||"vertices"===ci.boundTo))if(hi=ci.value.length,Xr=0,1===ci.size)for(si=0;si<hi;si++)ci.array[si]=ci.value[si];else if(2===ci.size)for(si=0;si<hi;si++)li=ci.value[si],ci.array[Xr]=li.x,ci.array[Xr+1]=li.y,Xr+=2;else if(3===ci.size)if("c"===ci.type)for(si=0;si<hi;si++)li=ci.value[si],ci.array[Xr]=li.r,ci.array[Xr+1]=li.g,ci.array[Xr+2]=li.b,Xr+=3;else for(si=0;si<hi;si++)li=ci.value[si],ci.array[Xr]=li.x,ci.array[Xr+1]=li.y,ci.array[Xr+2]=li.z,Xr+=3;else if(4===ci.size)for(si=0;si<hi;si++)li=ci.value[si],ci.array[Xr]=li.x,ci.array[Xr+1]=li.y,ci.array[Xr+2]=li.z,ci.array[Xr+3]=li.w,Xr+=4}if(ri||t.sortParticles)Pt.bindBuffer(Pt.ARRAY_BUFFER,l.__webglVertexBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,$r,Ir);if(ii||t.sortParticles)Pt.bindBuffer(Pt.ARRAY_BUFFER,l.__webglColorBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,ei,Ir);if(ni)for(oi=0,ai=ni.length;oi<ai;oi++)if(ci=ni[oi],ci.needsUpdate||t.sortParticles)Pt.bindBuffer(Pt.ARRAY_BUFFER,ci.buffer),Pt.bufferData(Pt.ARRAY_BUFFER,ci.array,Ir)}l.verticesNeedUpdate=!1;l.colorsNeedUpdate=!1;f.attributes&&x(f)}for(var ui=0,fi=h.length;ui<fi;ui++){var Ei=h[ui],pi=Ei,di=pi.object,mi=pi.buffer,gi=di.geometry,Ti=di.material;Ti instanceof THREE.MeshFaceMaterial?(Ti=Ti.materials[gi instanceof THREE.BufferGeometry?0:mi.materialIndex],Ti.transparent?(pi.material=Ti,Z.push(pi)):(pi.material=Ti,K.push(pi))):Ti&&(Ti.transparent?(pi.material=Ti,Z.push(pi)):(pi.material=Ti,K.push(pi)));Ei.render=!0;!0===Q.sortObjects&&(null!==t.renderDepth?Ei.z=t.renderDepth:(St.setFromMatrixPosition(t.matrixWorld),St.applyProjection(wt),Ei.z=St.z))}}ui=0;for(fi=t.children.length;ui<fi;ui++)p(e,t.children[ui],s)}}function d(e,t,r){if(0!==e.length)for(var i=0,n=e.length;i<n;i++)it=$=null,tt=rt=at=ot=ft=ut=st=-1,At=!0,e[i].render(t,r,Rt,xt),it=$=null,tt=rt=at=ot=ft=ut=st=-1,At=!0}function m(e,t,r,i,n,o){for(var a,s,h,l=e.length-1;-1!==l;l--){a=e[l];s=a.object;h=a.buffer;M(s,t);if(o)a=o;else{a=a.material;if(!a)continue;n&&Q.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst);Q.setDepthTest(a.depthTest);Q.setDepthWrite(a.depthWrite);L(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}Q.setMaterialFaces(a);h instanceof THREE.BufferGeometry?Q.renderBufferDirect(t,r,i,a,h,s):Q.renderBuffer(t,r,i,a,h,s)}}function g(e,t,r,i,n,o,a){for(var s,h,l=0,c=e.length;l<c;l++)if(s=e[l],h=s.object,h.visible){if(a)s=a;else{s=s[t];if(!s)continue;o&&Q.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst);Q.setDepthTest(s.depthTest);Q.setDepthWrite(s.depthWrite);L(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}Q.renderImmediateObject(r,i,n,s,h)}}function T(e){var t=e.object.material;t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)}function v(e,t,i){var n,o=!1;n=t.material;if(void 0===i.geometryGroups||i.groupsNeedUpdate)delete e.__webglObjects[t.id],i.makeGroups(n instanceof THREE.MeshFaceMaterial,zt?4294967296:65535),i.groupsNeedUpdate=!1;for(var a=0,s=i.geometryGroupsList.length;a<s;a++){n=i.geometryGroupsList[a];if(n.__webglVertexBuffer)o=!1;else{o=n;o.__webglVertexBuffer=Pt.createBuffer();o.__webglNormalBuffer=Pt.createBuffer();o.__webglTangentBuffer=Pt.createBuffer();o.__webglColorBuffer=Pt.createBuffer();o.__webglUVBuffer=Pt.createBuffer();o.__webglUV2Buffer=Pt.createBuffer();o.__webglSkinIndicesBuffer=Pt.createBuffer();o.__webglSkinWeightsBuffer=Pt.createBuffer();o.__webglFaceBuffer=Pt.createBuffer();o.__webglLineBuffer=Pt.createBuffer();var h=void 0,l=void 0;if(o.numMorphTargets)for(o.__webglMorphTargetsBuffers=[],h=0,l=o.numMorphTargets;h<l;h++)o.__webglMorphTargetsBuffers.push(Pt.createBuffer());if(o.numMorphNormals)for(o.__webglMorphNormalsBuffers=[],h=0,l=o.numMorphNormals;h<l;h++)o.__webglMorphNormalsBuffers.push(Pt.createBuffer());Q.info.memory.geometries++;r(n,t);i.verticesNeedUpdate=!0;i.morphTargetsNeedUpdate=!0;i.elementsNeedUpdate=!0;i.uvsNeedUpdate=!0;i.normalsNeedUpdate=!0;i.tangentsNeedUpdate=!0;o=i.colorsNeedUpdate=!0}(o||void 0===t.__webglActive)&&y(e.__webglObjects,n,t)}t.__webglActive=!0}function y(e,t,r){var i=r.id;e[i]=e[i]||[];e[i].push({id:i,buffer:t,object:r,material:null,z:0})}function R(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function x(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function H(e,t){if(e instanceof THREE.Mesh||e instanceof THREE.PointCloud||e instanceof THREE.Line)delete t.__webglObjects[e.id];else if(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)for(var r=t.__webglObjectsImmediate,i=r.length-1;0<=i;i--)r[i].object===e&&r.splice(i,1);delete e.__webglActive}function _(e,t,r,i,n){nt=0;i.needsUpdate&&(i.program&&tr(i),Q.initMaterial(i,t,r,n),i.needsUpdate=!1);i.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(Q.maxMorphTargets));var o=!1,a=!1,s=!1,h=i.program,l=h.uniforms,c=i.__webglShader.uniforms;h.id!==$&&(Pt.useProgram(h.program),$=h.id,s=a=o=!0);i.id!==tt&&(-1===tt&&(s=!0),tt=i.id,a=!0);if(o||e!==it)Pt.uniformMatrix4fv(l.projectionMatrix,!1,e.projectionMatrix.elements),X&&Pt.uniform1f(l.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==it&&(it=e),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==l.cameraPosition&&(St.setFromMatrixPosition(e.matrixWorld),Pt.uniform3f(l.cameraPosition,St.x,St.y,St.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==l.viewMatrix&&Pt.uniformMatrix4fv(l.viewMatrix,!1,e.matrixWorldInverse.elements);i.skinning&&(n.bindMatrix&&null!==l.bindMatrix&&Pt.uniformMatrix4fv(l.bindMatrix,!1,n.bindMatrix.elements),n.bindMatrixInverse&&null!==l.bindMatrixInverse&&Pt.uniformMatrix4fv(l.bindMatrixInverse,!1,n.bindMatrixInverse.elements),Gt&&n.skeleton&&n.skeleton.useVertexTexture?(null!==l.boneTexture&&(o=w(),Pt.uniform1i(l.boneTexture,o),Q.setTexture(n.skeleton.boneTexture,o)),null!==l.boneTextureWidth&&Pt.uniform1i(l.boneTextureWidth,n.skeleton.boneTextureWidth),null!==l.boneTextureHeight&&Pt.uniform1i(l.boneTextureHeight,n.skeleton.boneTextureHeight)):n.skeleton&&n.skeleton.boneMatrices&&null!==l.boneGlobalMatrices&&Pt.uniformMatrix4fv(l.boneGlobalMatrices,!1,n.skeleton.boneMatrices));if(a){r&&i.fog&&(c.fogColor.value=r.color,r instanceof THREE.Fog?(c.fogNear.value=r.near,c.fogFar.value=r.far):r instanceof THREE.FogExp2&&(c.fogDensity.value=r.density));if(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights){if(At){var s=!0,u,f=o=0,E=0,p,d,m,g=Lt,T=g.directional.colors,v=g.directional.positions,y=g.point.colors,R=g.point.positions,x=g.point.distances,H=g.spot.colors,_=g.spot.positions,M=g.spot.distances,A=g.spot.directions,L=g.spot.anglesCos,F=g.spot.exponents,D=g.hemi.skyColors,U=g.hemi.groundColors,B=g.hemi.positions,k=0,N=0,O=0,I=0,G=0,W=0,j=0,Y=0,q=u=0;r=m=q=0;for(a=t.length;r<a;r++)u=t[r],u.onlyShadow||(p=u.color,d=u.intensity,m=u.distance,u instanceof THREE.AmbientLight?u.visible&&(Q.gammaInput?(o+=p.r*p.r,f+=p.g*p.g,E+=p.b*p.b):(o+=p.r,f+=p.g,E+=p.b)):u instanceof THREE.DirectionalLight?(G+=1,u.visible&&(Ct.setFromMatrixPosition(u.matrixWorld),St.setFromMatrixPosition(u.target.matrixWorld),Ct.sub(St),Ct.normalize(),u=3*k,v[u]=Ct.x,v[u+1]=Ct.y,v[u+2]=Ct.z,Q.gammaInput?S(T,u,p,d*d):C(T,u,p,d),k+=1)):u instanceof THREE.PointLight?(W+=1,u.visible&&(q=3*N,Q.gammaInput?S(y,q,p,d*d):C(y,q,p,d),St.setFromMatrixPosition(u.matrixWorld),R[q]=St.x,R[q+1]=St.y,R[q+2]=St.z,x[N]=m,N+=1)):u instanceof THREE.SpotLight?(j+=1,u.visible&&(q=3*O,Q.gammaInput?S(H,q,p,d*d):C(H,q,p,d),St.setFromMatrixPosition(u.matrixWorld),_[q]=St.x,_[q+1]=St.y,_[q+2]=St.z,M[O]=m,Ct.copy(St),St.setFromMatrixPosition(u.target.matrixWorld),Ct.sub(St),Ct.normalize(),A[q]=Ct.x,A[q+1]=Ct.y,A[q+2]=Ct.z,L[O]=Math.cos(u.angle),F[O]=u.exponent,O+=1)):u instanceof THREE.HemisphereLight&&(Y+=1,u.visible&&(Ct.setFromMatrixPosition(u.matrixWorld),Ct.normalize(),m=3*I,B[m]=Ct.x,B[m+1]=Ct.y,B[m+2]=Ct.z,p=u.color,u=u.groundColor,Q.gammaInput?(d*=d,S(D,m,p,d),S(U,m,u,d)):(C(D,m,p,d),C(U,m,u,d)),I+=1)));r=3*k;for(a=Math.max(T.length,3*G);r<a;r++)T[r]=0;r=3*N;for(a=Math.max(y.length,3*W);r<a;r++)y[r]=0;r=3*O;for(a=Math.max(H.length,3*j);r<a;r++)H[r]=0;r=3*I;for(a=Math.max(D.length,3*Y);r<a;r++)D[r]=0;r=3*I;for(a=Math.max(U.length,3*Y);r<a;r++)U[r]=0;g.directional.length=k;g.point.length=N;g.spot.length=O;g.hemi.length=I;g.ambient[0]=o;g.ambient[1]=f;g.ambient[2]=E;At=!1}s?(s=Lt,c.ambientLightColor.value=s.ambient,c.directionalLightColor.value=s.directional.colors,c.directionalLightDirection.value=s.directional.positions,c.pointLightColor.value=s.point.colors,c.pointLightPosition.value=s.point.positions,c.pointLightDistance.value=s.point.distances,c.spotLightColor.value=s.spot.colors,c.spotLightPosition.value=s.spot.positions,c.spotLightDistance.value=s.spot.distances,c.spotLightDirection.value=s.spot.directions,c.spotLightAngleCos.value=s.spot.anglesCos,c.spotLightExponent.value=s.spot.exponents,c.hemisphereLightSkyColor.value=s.hemi.skyColors,c.hemisphereLightGroundColor.value=s.hemi.groundColors,c.hemisphereLightDirection.value=s.hemi.positions,b(c,!0)):b(c,!1)}if(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial){c.opacity.value=i.opacity;Q.gammaInput?c.diffuse.value.copyGammaToLinear(i.color):c.diffuse.value=i.color;c.map.value=i.map;c.lightMap.value=i.lightMap;c.specularMap.value=i.specularMap;c.alphaMap.value=i.alphaMap;i.bumpMap&&(c.bumpMap.value=i.bumpMap,c.bumpScale.value=i.bumpScale);i.normalMap&&(c.normalMap.value=i.normalMap,c.normalScale.value.copy(i.normalScale));var K;i.map?K=i.map:i.specularMap?K=i.specularMap:i.normalMap?K=i.normalMap:i.bumpMap?K=i.bumpMap:i.alphaMap&&(K=i.alphaMap);void 0!==K&&(s=K.offset,K=K.repeat,c.offsetRepeat.value.set(s.x,s.y,K.x,K.y));c.envMap.value=i.envMap;c.flipEnvMap.value=i.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;c.reflectivity.value=i.reflectivity;c.refractionRatio.value=i.refractionRatio;c.combine.value=i.combine;c.useRefract.value=i.envMap&&i.envMap.mapping instanceof THREE.CubeRefractionMapping}i instanceof THREE.LineBasicMaterial?(c.diffuse.value=i.color,c.opacity.value=i.opacity):i instanceof THREE.LineDashedMaterial?(c.diffuse.value=i.color,c.opacity.value=i.opacity,c.dashSize.value=i.dashSize,c.totalSize.value=i.dashSize+i.gapSize,c.scale.value=i.scale):i instanceof THREE.PointCloudMaterial?(c.psColor.value=i.color,c.opacity.value=i.opacity,c.size.value=i.size,c.scale.value=z.height/2,c.map.value=i.map):i instanceof THREE.MeshPhongMaterial?(c.shininess.value=i.shininess,Q.gammaInput?(c.ambient.value.copyGammaToLinear(i.ambient),c.emissive.value.copyGammaToLinear(i.emissive),c.specular.value.copyGammaToLinear(i.specular)):(c.ambient.value=i.ambient,c.emissive.value=i.emissive,c.specular.value=i.specular),i.wrapAround&&c.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshLambertMaterial?(Q.gammaInput?(c.ambient.value.copyGammaToLinear(i.ambient),c.emissive.value.copyGammaToLinear(i.emissive)):(c.ambient.value=i.ambient,c.emissive.value=i.emissive),i.wrapAround&&c.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshDepthMaterial?(c.mNear.value=e.near,c.mFar.value=e.far,c.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(c.opacity.value=i.opacity);if(n.receiveShadow&&!i._shadowPass&&c.shadowMatrix)for(K=e=0,s=t.length;K<s;K++)r=t[K],r.castShadow&&(r instanceof THREE.SpotLight||r instanceof THREE.DirectionalLight&&!r.shadowCascade)&&(c.shadowMap.value[e]=r.shadowMap,c.shadowMapSize.value[e]=r.shadowMapSize,c.shadowMatrix.value[e]=r.shadowMatrix,c.shadowDarkness.value[e]=r.shadowDarkness,c.shadowBias.value[e]=r.shadowBias,e++);t=i.uniformsList;i=0;for(c=t.length;i<c;i++)if(e=t[i][0],!1!==e.needsUpdate)switch(r=e.type,s=e.value,K=t[i][1],r){case"1i":Pt.uniform1i(K,s);break;case"1f":Pt.uniform1f(K,s);break;case"2f":Pt.uniform2f(K,s[0],s[1]);break;case"3f":Pt.uniform3f(K,s[0],s[1],s[2]);break;case"4f":Pt.uniform4f(K,s[0],s[1],s[2],s[3]);break;case"1iv":Pt.uniform1iv(K,s);break;case"3iv":Pt.uniform3iv(K,s);break;case"1fv":Pt.uniform1fv(K,s);break;case"2fv":Pt.uniform2fv(K,s);break;case"3fv":Pt.uniform3fv(K,s);break;case"4fv":Pt.uniform4fv(K,s);break;case"Matrix3fv":Pt.uniformMatrix3fv(K,!1,s);break;case"Matrix4fv":Pt.uniformMatrix4fv(K,!1,s);break;case"i":Pt.uniform1i(K,s);break;case"f":Pt.uniform1f(K,s);break;case"v2":Pt.uniform2f(K,s.x,s.y);break;case"v3":Pt.uniform3f(K,s.x,s.y,s.z);break;case"v4":Pt.uniform4f(K,s.x,s.y,s.z,s.w);break;case"c":Pt.uniform3f(K,s.r,s.g,s.b);break;case"iv1":Pt.uniform1iv(K,s);break;case"iv":Pt.uniform3iv(K,s);break;case"fv1":Pt.uniform1fv(K,s);break;case"fv":Pt.uniform3fv(K,s);break;case"v2v":void 0===e._array&&(e._array=new Float32Array(2*s.length));r=0;for(a=s.length;r<a;r++)o=2*r,e._array[o]=s[r].x,e._array[o+1]=s[r].y;Pt.uniform2fv(K,e._array);break;case"v3v":void 0===e._array&&(e._array=new Float32Array(3*s.length));r=0;for(a=s.length;r<a;r++)o=3*r,e._array[o]=s[r].x,e._array[o+1]=s[r].y,e._array[o+2]=s[r].z;Pt.uniform3fv(K,e._array);break;case"v4v":void 0===e._array&&(e._array=new Float32Array(4*s.length));r=0;for(a=s.length;r<a;r++)o=4*r,e._array[o]=s[r].x,e._array[o+1]=s[r].y,e._array[o+2]=s[r].z,e._array[o+3]=s[r].w;Pt.uniform4fv(K,e._array);break;case"m3":Pt.uniformMatrix3fv(K,!1,s.elements);break;case"m3v":void 0===e._array&&(e._array=new Float32Array(9*s.length));r=0;for(a=s.length;r<a;r++)s[r].flattenToArrayOffset(e._array,9*r);Pt.uniformMatrix3fv(K,!1,e._array);break;case"m4":Pt.uniformMatrix4fv(K,!1,s.elements);break;case"m4v":void 0===e._array&&(e._array=new Float32Array(16*s.length));r=0;for(a=s.length;r<a;r++)s[r].flattenToArrayOffset(e._array,16*r);Pt.uniformMatrix4fv(K,!1,e._array);break;case"t":o=s;s=w();Pt.uniform1i(K,s);if(!o)continue;if(o instanceof THREE.CubeTexture||o.image instanceof Array&&6===o.image.length){if(e=o,K=s,6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.addEventListener("dispose",Qt),e.image.__webglTextureCube=Pt.createTexture(),Q.info.memory.textures++);Pt.activeTexture(Pt.TEXTURE0+K);Pt.bindTexture(Pt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube);Pt.pixelStorei(Pt.UNPACK_FLIP_Y_WEBGL,e.flipY);K=e instanceof THREE.CompressedTexture;s=[];for(r=0;6>r;r++)Q.autoScaleCubemaps&&!K?(a=s,o=r,f=e.image[r],g=Nt,f.width<=g&&f.height<=g||(T=Math.max(f.width,f.height),E=Math.floor(f.width*g/T),g=Math.floor(f.height*g/T),T=document.createElement("canvas"),T.width=E,T.height=g,T.getContext("2d").drawImage(f,0,0,f.width,f.height,0,0,E,g),f=T),a[o]=f):s[r]=e.image[r];r=s[0];a=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height);o=V(e.format);f=V(e.type);P(Pt.TEXTURE_CUBE_MAP,e,a);for(r=0;6>r;r++)if(K)for(g=s[r].mipmaps,T=0,v=g.length;T<v;T++)E=g[T],e.format!==THREE.RGBAFormat?Pt.compressedTexImage2D(Pt.TEXTURE_CUBE_MAP_POSITIVE_X+r,T,o,E.width,E.height,0,E.data):Pt.texImage2D(Pt.TEXTURE_CUBE_MAP_POSITIVE_X+r,T,o,E.width,E.height,0,o,f,E.data);else Pt.texImage2D(Pt.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,o,o,f,s[r]);e.generateMipmaps&&a&&Pt.generateMipmap(Pt.TEXTURE_CUBE_MAP);e.needsUpdate=!1;if(e.onUpdate)e.onUpdate()}else Pt.activeTexture(Pt.TEXTURE0+K),Pt.bindTexture(Pt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}else o instanceof THREE.WebGLRenderTargetCube?(e=o,Pt.activeTexture(Pt.TEXTURE0+s),Pt.bindTexture(Pt.TEXTURE_CUBE_MAP,e.__webglTexture)):Q.setTexture(o,s);break;case"tv":void 0===e._array&&(e._array=[]);r=0;for(a=e.value.length;r<a;r++)e._array[r]=w();Pt.uniform1iv(K,e._array);r=0;for(a=e.value.length;r<a;r++)o=e.value[r],s=e._array[r],o&&Q.setTexture(o,s);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+r)}}Pt.uniformMatrix4fv(l.modelViewMatrix,!1,n._modelViewMatrix.elements);
l.normalMatrix&&Pt.uniformMatrix3fv(l.normalMatrix,!1,n._normalMatrix.elements);null!==l.modelMatrix&&Pt.uniformMatrix4fv(l.modelMatrix,!1,n.matrixWorld.elements);return h}function b(e,t){e.ambientLightColor.needsUpdate=t;e.directionalLightColor.needsUpdate=t;e.directionalLightDirection.needsUpdate=t;e.pointLightColor.needsUpdate=t;e.pointLightPosition.needsUpdate=t;e.pointLightDistance.needsUpdate=t;e.spotLightColor.needsUpdate=t;e.spotLightPosition.needsUpdate=t;e.spotLightDistance.needsUpdate=t;e.spotLightDirection.needsUpdate=t;e.spotLightAngleCos.needsUpdate=t;e.spotLightExponent.needsUpdate=t;e.hemisphereLightSkyColor.needsUpdate=t;e.hemisphereLightGroundColor.needsUpdate=t;e.hemisphereLightDirection.needsUpdate=t}function w(){var e=nt;e>=Bt&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Bt);nt+=1;return e}function M(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld);e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function S(e,t,r,i){e[t]=r.r*r.r*i;e[t+1]=r.g*r.g*i;e[t+2]=r.b*r.b*i}function C(e,t,r,i){e[t]=r.r*i;e[t+1]=r.g*i;e[t+2]=r.b*i}function A(e){e!==mt&&(Pt.lineWidth(e),mt=e)}function L(e,t,r){Et!==e&&(e?Pt.enable(Pt.POLYGON_OFFSET_FILL):Pt.disable(Pt.POLYGON_OFFSET_FILL),Et=e);!e||pt===t&&dt===r||(Pt.polygonOffset(t,r),pt=t,dt=r)}function P(e,t,r){r?(Pt.texParameteri(e,Pt.TEXTURE_WRAP_S,V(t.wrapS)),Pt.texParameteri(e,Pt.TEXTURE_WRAP_T,V(t.wrapT)),Pt.texParameteri(e,Pt.TEXTURE_MAG_FILTER,V(t.magFilter)),Pt.texParameteri(e,Pt.TEXTURE_MIN_FILTER,V(t.minFilter))):(Pt.texParameteri(e,Pt.TEXTURE_WRAP_S,Pt.CLAMP_TO_EDGE),Pt.texParameteri(e,Pt.TEXTURE_WRAP_T,Pt.CLAMP_TO_EDGE),Pt.texParameteri(e,Pt.TEXTURE_MAG_FILTER,U(t.magFilter)),Pt.texParameteri(e,Pt.TEXTURE_MIN_FILTER,U(t.minFilter)));Ut&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(Pt.texParameterf(e,Ut.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Ot)),t.__oldAnisotropy=t.anisotropy)}function F(e,t){Pt.bindRenderbuffer(Pt.RENDERBUFFER,e);t.depthBuffer&&!t.stencilBuffer?(Pt.renderbufferStorage(Pt.RENDERBUFFER,Pt.DEPTH_COMPONENT16,t.width,t.height),Pt.framebufferRenderbuffer(Pt.FRAMEBUFFER,Pt.DEPTH_ATTACHMENT,Pt.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Pt.renderbufferStorage(Pt.RENDERBUFFER,Pt.DEPTH_STENCIL,t.width,t.height),Pt.framebufferRenderbuffer(Pt.FRAMEBUFFER,Pt.DEPTH_STENCIL_ATTACHMENT,Pt.RENDERBUFFER,e)):Pt.renderbufferStorage(Pt.RENDERBUFFER,Pt.RGBA4,t.width,t.height)}function D(e){e instanceof THREE.WebGLRenderTargetCube?(Pt.bindTexture(Pt.TEXTURE_CUBE_MAP,e.__webglTexture),Pt.generateMipmap(Pt.TEXTURE_CUBE_MAP),Pt.bindTexture(Pt.TEXTURE_CUBE_MAP,null)):(Pt.bindTexture(Pt.TEXTURE_2D,e.__webglTexture),Pt.generateMipmap(Pt.TEXTURE_2D),Pt.bindTexture(Pt.TEXTURE_2D,null))}function U(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Pt.NEAREST:Pt.LINEAR}function V(e){if(e===THREE.RepeatWrapping)return Pt.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Pt.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Pt.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Pt.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Pt.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Pt.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Pt.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Pt.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Pt.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Pt.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Pt.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Pt.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Pt.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Pt.BYTE;if(e===THREE.ShortType)return Pt.SHORT;if(e===THREE.UnsignedShortType)return Pt.UNSIGNED_SHORT;if(e===THREE.IntType)return Pt.INT;if(e===THREE.UnsignedIntType)return Pt.UNSIGNED_INT;if(e===THREE.FloatType)return Pt.FLOAT;if(e===THREE.AlphaFormat)return Pt.ALPHA;if(e===THREE.RGBFormat)return Pt.RGB;if(e===THREE.RGBAFormat)return Pt.RGBA;if(e===THREE.LuminanceFormat)return Pt.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Pt.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Pt.FUNC_ADD;if(e===THREE.SubtractEquation)return Pt.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Pt.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Pt.ZERO;if(e===THREE.OneFactor)return Pt.ONE;if(e===THREE.SrcColorFactor)return Pt.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Pt.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Pt.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Pt.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Pt.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Pt.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Pt.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Pt.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Pt.SRC_ALPHA_SATURATE;if(void 0!==Vt){if(e===THREE.RGB_S3TC_DXT1_Format)return Vt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return Vt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return Vt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return Vt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);e=e||{};var z=void 0!==e.canvas?e.canvas:document.createElement("canvas"),B=void 0!==e.context?e.context:null,k=void 0!==e.precision?e.precision:"highp",N=void 0!==e.alpha?e.alpha:!1,O=void 0!==e.depth?e.depth:!0,I=void 0!==e.stencil?e.stencil:!0,G=void 0!==e.antialias?e.antialias:!1,W=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,j=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,X=void 0!==e.logarithmicDepthBuffer?e.logarithmicDepthBuffer:!1,Y=new THREE.Color(0),q=0,K=[],Z=[];this.domElement=z;this.context=null;this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Q=this,J=[],$=null,et=null,tt=-1,rt=null,it=null,nt=0,ot=-1,at=-1,st=-1,ht=-1,lt=-1,ct=-1,ut=-1,ft=-1,Et=null,pt=null,dt=null,mt=null,gt=0,Tt=0,vt=z.width,yt=z.height,Rt=0,xt=0,Ht=new Uint8Array(16),_t=new Uint8Array(16),bt=new THREE.Frustum,wt=new THREE.Matrix4,Mt=new THREE.Matrix4,St=new THREE.Vector3,Ct=new THREE.Vector3,At=!0,Lt={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},Pt,Ft,Dt,Ut,Vt,zt;(function(){try{var e={alpha:N,depth:O,stencil:I,antialias:G,premultipliedAlpha:W,preserveDrawingBuffer:j};Pt=B||z.getContext("webgl",e)||z.getContext("experimental-webgl",e);if(null===Pt)throw"Error creating WebGL context."}catch(t){console.error(t)}Ft=Pt.getExtension("OES_texture_float");Pt.getExtension("OES_texture_float_linear");Dt=Pt.getExtension("OES_standard_derivatives");Ut=Pt.getExtension("EXT_texture_filter_anisotropic")||Pt.getExtension("MOZ_EXT_texture_filter_anisotropic")||Pt.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Vt=Pt.getExtension("WEBGL_compressed_texture_s3tc")||Pt.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Pt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");zt=Pt.getExtension("OES_element_index_uint");null===Ft&&console.log("THREE.WebGLRenderer: Float textures not supported.");null===Dt&&console.log("THREE.WebGLRenderer: Standard derivatives not supported.");null===Ut&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");null===Vt&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");null===zt&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported.");void 0===Pt.getShaderPrecisionFormat&&(Pt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});X&&Pt.getExtension("EXT_frag_depth")})();Pt.clearColor(0,0,0,1);Pt.clearDepth(1);Pt.clearStencil(0);Pt.enable(Pt.DEPTH_TEST);Pt.depthFunc(Pt.LEQUAL);Pt.frontFace(Pt.CCW);Pt.cullFace(Pt.BACK);Pt.enable(Pt.CULL_FACE);Pt.enable(Pt.BLEND);Pt.blendEquation(Pt.FUNC_ADD);Pt.blendFunc(Pt.SRC_ALPHA,Pt.ONE_MINUS_SRC_ALPHA);Pt.viewport(gt,Tt,vt,yt);Pt.clearColor(Y.r,Y.g,Y.b,q);this.context=Pt;var Bt=Pt.getParameter(Pt.MAX_TEXTURE_IMAGE_UNITS),kt=Pt.getParameter(Pt.MAX_VERTEX_TEXTURE_IMAGE_UNITS);Pt.getParameter(Pt.MAX_TEXTURE_SIZE);var Nt=Pt.getParameter(Pt.MAX_CUBE_MAP_TEXTURE_SIZE),Ot=Ut?Pt.getParameter(Ut.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,It=0<kt,Gt=It&&Ft;Vt&&Pt.getParameter(Pt.COMPRESSED_TEXTURE_FORMATS);var Wt=Pt.getShaderPrecisionFormat(Pt.VERTEX_SHADER,Pt.HIGH_FLOAT),jt=Pt.getShaderPrecisionFormat(Pt.VERTEX_SHADER,Pt.MEDIUM_FLOAT);Pt.getShaderPrecisionFormat(Pt.VERTEX_SHADER,Pt.LOW_FLOAT);var Xt=Pt.getShaderPrecisionFormat(Pt.FRAGMENT_SHADER,Pt.HIGH_FLOAT),Yt=Pt.getShaderPrecisionFormat(Pt.FRAGMENT_SHADER,Pt.MEDIUM_FLOAT);Pt.getShaderPrecisionFormat(Pt.FRAGMENT_SHADER,Pt.LOW_FLOAT);var qt=0<Wt.precision&&0<Xt.precision,Kt=0<jt.precision&&0<Yt.precision;"highp"!==k||qt||(Kt?(k="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(k="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")));"mediump"!==k||Kt||(k="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));this.getContext=function(){return Pt};this.supportsVertexTextures=function(){return It};this.supportsFloatTextures=function(){return Ft};this.supportsStandardDerivatives=function(){return Dt};this.supportsCompressedTextureS3TC=function(){return Vt};this.getMaxAnisotropy=function(){return Ot};this.getPrecision=function(){return k};this.setSize=function(e,t,r){z.width=e*this.devicePixelRatio;z.height=t*this.devicePixelRatio;!1!==r&&(z.style.width=e+"px",z.style.height=t+"px");this.setViewport(0,0,e,t)};this.setViewport=function(e,t,r,i){gt=e*this.devicePixelRatio;Tt=t*this.devicePixelRatio;vt=r*this.devicePixelRatio;yt=i*this.devicePixelRatio;Pt.viewport(gt,Tt,vt,yt)};this.setScissor=function(e,t,r,i){Pt.scissor(e*this.devicePixelRatio,t*this.devicePixelRatio,r*this.devicePixelRatio,i*this.devicePixelRatio)};this.enableScissorTest=function(e){e?Pt.enable(Pt.SCISSOR_TEST):Pt.disable(Pt.SCISSOR_TEST)};this.setClearColor=function(e,t){Y.set(e);q=void 0!==t?t:1;Pt.clearColor(Y.r,Y.g,Y.b,q)};this.setClearColorHex=function(e,t){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,t)};this.getClearColor=function(){return Y};this.getClearAlpha=function(){return q};this.clear=function(e,t,r){var i=0;if(void 0===e||e)i|=Pt.COLOR_BUFFER_BIT;if(void 0===t||t)i|=Pt.DEPTH_BUFFER_BIT;if(void 0===r||r)i|=Pt.STENCIL_BUFFER_BIT;Pt.clear(i)};this.clearColor=function(){Pt.clear(Pt.COLOR_BUFFER_BIT)};this.clearDepth=function(){Pt.clear(Pt.DEPTH_BUFFER_BIT)};this.clearStencil=function(){Pt.clear(Pt.STENCIL_BUFFER_BIT)};this.clearTarget=function(e,t,r,i){this.setRenderTarget(e);this.clear(t,r,i)};this.addPostPlugin=function(e){e.init(this);this.renderPluginsPost.push(e)};this.addPrePlugin=function(e){e.init(this);this.renderPluginsPre.push(e)};this.updateShadowMap=function(e,t){$=null;tt=rt=ft=ut=st=-1;At=!0;at=ot=-1;rr(e);this.shadowMapPlugin.update(e,t)};var Zt=function(e){e=e.target;e.removeEventListener("dispose",Zt);e.__webglInit=void 0;if(e instanceof THREE.BufferGeometry){e=e.attributes;for(var t in e)void 0!==e[t].buffer&&Pt.deleteBuffer(e[t].buffer);Q.info.memory.geometries--}else if(void 0!==e.geometryGroups){t=0;for(var r=e.geometryGroupsList.length;t<r;t++){var i=e.geometryGroupsList[t];if(void 0!==i.numMorphTargets)for(var n=0,o=i.numMorphTargets;n<o;n++)Pt.deleteBuffer(i.__webglMorphTargetsBuffers[n]);if(void 0!==i.numMorphNormals)for(n=0,o=i.numMorphNormals;n<o;n++)Pt.deleteBuffer(i.__webglMorphNormalsBuffers[n]);er(i)}}else er(e)},Qt=function(e){e=e.target;e.removeEventListener("dispose",Qt);e.image&&e.image.__webglTextureCube?Pt.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,Pt.deleteTexture(e.__webglTexture));Q.info.memory.textures--},Jt=function(e){e=e.target;e.removeEventListener("dispose",Jt);if(e&&e.__webglTexture)if(Pt.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)Pt.deleteFramebuffer(e.__webglFramebuffer[t]),Pt.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Pt.deleteFramebuffer(e.__webglFramebuffer),Pt.deleteRenderbuffer(e.__webglRenderbuffer);Q.info.memory.textures--},$t=function(e){e=e.target;e.removeEventListener("dispose",$t);tr(e)},er=function(e){void 0!==e.__webglVertexBuffer&&Pt.deleteBuffer(e.__webglVertexBuffer);void 0!==e.__webglNormalBuffer&&Pt.deleteBuffer(e.__webglNormalBuffer);void 0!==e.__webglTangentBuffer&&Pt.deleteBuffer(e.__webglTangentBuffer);void 0!==e.__webglColorBuffer&&Pt.deleteBuffer(e.__webglColorBuffer);void 0!==e.__webglUVBuffer&&Pt.deleteBuffer(e.__webglUVBuffer);void 0!==e.__webglUV2Buffer&&Pt.deleteBuffer(e.__webglUV2Buffer);void 0!==e.__webglSkinIndicesBuffer&&Pt.deleteBuffer(e.__webglSkinIndicesBuffer);void 0!==e.__webglSkinWeightsBuffer&&Pt.deleteBuffer(e.__webglSkinWeightsBuffer);void 0!==e.__webglFaceBuffer&&Pt.deleteBuffer(e.__webglFaceBuffer);void 0!==e.__webglLineBuffer&&Pt.deleteBuffer(e.__webglLineBuffer);void 0!==e.__webglLineDistanceBuffer&&Pt.deleteBuffer(e.__webglLineDistanceBuffer);if(void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)Pt.deleteBuffer(e.__webglCustomAttributesList[t].buffer);Q.info.memory.geometries--},tr=function(e){var t=e.program.program;if(void 0!==t){e.program=void 0;var r,i,n=!1;e=0;for(r=J.length;e<r;e++)if(i=J[e],i.program===t){i.usedTimes--;0===i.usedTimes&&(n=!0);break}if(!0===n){n=[];e=0;for(r=J.length;e<r;e++)i=J[e],i.program!==t&&n.push(i);J=n;Pt.deleteProgram(t);Q.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,r){h();e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Pt.createBuffer());e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Pt.createBuffer());e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Pt.createBuffer());e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Pt.createBuffer());e.hasPositions&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,e.__webglVertexBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,e.positionArray,Pt.DYNAMIC_DRAW),l(t.attributes.position),Pt.vertexAttribPointer(t.attributes.position,3,Pt.FLOAT,!1,0,0));if(e.hasNormals){Pt.bindBuffer(Pt.ARRAY_BUFFER,e.__webglNormalBuffer);if(r.shading===THREE.FlatShading){var i,n,o,a,s,u,f,E,p,d,m,g=3*e.count;for(m=0;m<g;m+=9)d=e.normalArray,i=d[m],n=d[m+1],o=d[m+2],a=d[m+3],u=d[m+4],E=d[m+5],s=d[m+6],f=d[m+7],p=d[m+8],i=(i+a+s)/3,n=(n+u+f)/3,o=(o+E+p)/3,d[m]=i,d[m+1]=n,d[m+2]=o,d[m+3]=i,d[m+4]=n,d[m+5]=o,d[m+6]=i,d[m+7]=n,d[m+8]=o}Pt.bufferData(Pt.ARRAY_BUFFER,e.normalArray,Pt.DYNAMIC_DRAW);l(t.attributes.normal);Pt.vertexAttribPointer(t.attributes.normal,3,Pt.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,e.__webglUvBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,e.uvArray,Pt.DYNAMIC_DRAW),l(t.attributes.uv),Pt.vertexAttribPointer(t.attributes.uv,2,Pt.FLOAT,!1,0,0));e.hasColors&&r.vertexColors!==THREE.NoColors&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,e.__webglColorBuffer),Pt.bufferData(Pt.ARRAY_BUFFER,e.colorArray,Pt.DYNAMIC_DRAW),l(t.attributes.color),Pt.vertexAttribPointer(t.attributes.color,3,Pt.FLOAT,!1,0,0));c();Pt.drawArrays(Pt.TRIANGLES,0,e.count);e.count=0};this.renderBufferDirect=function(e,t,r,i,n,o){if(!1!==i.visible){var a=_(e,t,r,i,o);e=a.attributes;t=n.attributes;r=!1;a=16777215*n.id+2*a.id+(i.wireframe?1:0);a!==rt&&(rt=a,r=!0);r&&h();if(o instanceof THREE.Mesh)if(a=t.index){var l,c;a.array instanceof Uint32Array?(l=Pt.UNSIGNED_INT,c=4):(l=Pt.UNSIGNED_SHORT,c=2);n=n.offsets;if(0===n.length)r&&(s(i,e,t,0),Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,a.buffer)),Pt.drawElements(Pt.TRIANGLES,a.array.length,l,0),Q.info.render.calls++,Q.info.render.vertices+=a.array.length,Q.info.render.faces+=a.array.length/3;else{r=!0;for(var u=0,f=n.length;u<f;u++){var E=n[u].index;r&&(s(i,e,t,E),Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,a.buffer));Pt.drawElements(Pt.TRIANGLES,n[u].count,l,n[u].start*c);Q.info.render.calls++;Q.info.render.vertices+=n[u].count;Q.info.render.faces+=n[u].count/3}}}else r&&s(i,e,t,0),i=n.attributes.position,Pt.drawArrays(Pt.TRIANGLES,0,i.array.length/3),Q.info.render.calls++,Q.info.render.vertices+=i.array.length/3,Q.info.render.faces+=i.array.length/9;else if(o instanceof THREE.PointCloud)r&&s(i,e,t,0),i=t.position,Pt.drawArrays(Pt.POINTS,0,i.array.length/3),Q.info.render.calls++,Q.info.render.points+=i.array.length/3;else if(o instanceof THREE.Line)if(o=o.type===THREE.LineStrip?Pt.LINE_STRIP:Pt.LINES,A(i.linewidth),a=t.index)if(a.array instanceof Uint32Array?(l=Pt.UNSIGNED_INT,c=4):(l=Pt.UNSIGNED_SHORT,c=2),n=n.offsets,0===n.length)r&&(s(i,e,t,0),Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,a.buffer)),Pt.drawElements(o,a.array.length,l,0),Q.info.render.calls++,Q.info.render.vertices+=a.array.length;else for(1<n.length&&(r=!0),u=0,f=n.length;u<f;u++)E=n[u].index,r&&(s(i,e,t,E),Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,a.buffer)),Pt.drawElements(o,n[u].count,l,n[u].start*c),Q.info.render.calls++,Q.info.render.vertices+=n[u].count;else r&&s(i,e,t,0),i=t.position,Pt.drawArrays(o,0,i.array.length/3),Q.info.render.calls++,Q.info.render.points+=i.array.length/3}};this.renderBuffer=function(e,t,r,i,n,o){if(!1!==i.visible){var a,s;r=_(e,t,r,i,o);t=r.attributes;e=!1;r=16777215*n.id+2*r.id+(i.wireframe?1:0);r!==rt&&(rt=r,e=!0);e&&h();if(!i.morphTargets&&0<=t.position)e&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglVertexBuffer),l(t.position),Pt.vertexAttribPointer(t.position,3,Pt.FLOAT,!1,0,0));else if(o.morphTargetBase){r=i.program.attributes;-1!==o.morphTargetBase&&0<=r.position?(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),l(r.position),Pt.vertexAttribPointer(r.position,3,Pt.FLOAT,!1,0,0)):0<=r.position&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglVertexBuffer),l(r.position),Pt.vertexAttribPointer(r.position,3,Pt.FLOAT,!1,0,0));if(o.morphTargetForcedOrder.length){var u=0;s=o.morphTargetForcedOrder;for(a=o.morphTargetInfluences;u<i.numSupportedMorphTargets&&u<s.length;)0<=r["morphTarget"+u]&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[s[u]]),l(r["morphTarget"+u]),Pt.vertexAttribPointer(r["morphTarget"+u],3,Pt.FLOAT,!1,0,0)),0<=r["morphNormal"+u]&&i.morphNormals&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[s[u]]),l(r["morphNormal"+u]),Pt.vertexAttribPointer(r["morphNormal"+u],3,Pt.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[u]=a[s[u]],u++}else{s=[];a=o.morphTargetInfluences;var f,p=a.length;for(f=0;f<p;f++)u=a[f],0<u&&s.push([u,f]);s.length>i.numSupportedMorphTargets?(s.sort(E),s.length=i.numSupportedMorphTargets):s.length>i.numSupportedMorphNormals?s.sort(E):0===s.length&&s.push([0,0]);for(u=0;u<i.numSupportedMorphTargets;)s[u]?(f=s[u][1],0<=r["morphTarget"+u]&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[f]),l(r["morphTarget"+u]),Pt.vertexAttribPointer(r["morphTarget"+u],3,Pt.FLOAT,!1,0,0)),0<=r["morphNormal"+u]&&i.morphNormals&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[f]),l(r["morphNormal"+u]),Pt.vertexAttribPointer(r["morphNormal"+u],3,Pt.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[u]=a[f]):o.__webglMorphTargetInfluences[u]=0,u++}null!==i.program.uniforms.morphTargetInfluences&&Pt.uniform1fv(i.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(e){if(n.__webglCustomAttributesList)for(a=0,s=n.__webglCustomAttributesList.length;a<s;a++)r=n.__webglCustomAttributesList[a],0<=t[r.buffer.belongsToAttribute]&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,r.buffer),l(t[r.buffer.belongsToAttribute]),Pt.vertexAttribPointer(t[r.buffer.belongsToAttribute],r.size,Pt.FLOAT,!1,0,0));0<=t.color&&(0<o.geometry.colors.length||0<o.geometry.faces.length?(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglColorBuffer),l(t.color),Pt.vertexAttribPointer(t.color,3,Pt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Pt.vertexAttrib3fv(t.color,i.defaultAttributeValues.color));0<=t.normal&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglNormalBuffer),l(t.normal),Pt.vertexAttribPointer(t.normal,3,Pt.FLOAT,!1,0,0));0<=t.tangent&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglTangentBuffer),l(t.tangent),Pt.vertexAttribPointer(t.tangent,4,Pt.FLOAT,!1,0,0));0<=t.uv&&(o.geometry.faceVertexUvs[0]?(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglUVBuffer),l(t.uv),Pt.vertexAttribPointer(t.uv,2,Pt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Pt.vertexAttrib2fv(t.uv,i.defaultAttributeValues.uv));0<=t.uv2&&(o.geometry.faceVertexUvs[1]?(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglUV2Buffer),l(t.uv2),Pt.vertexAttribPointer(t.uv2,2,Pt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Pt.vertexAttrib2fv(t.uv2,i.defaultAttributeValues.uv2));i.skinning&&0<=t.skinIndex&&0<=t.skinWeight&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),l(t.skinIndex),Pt.vertexAttribPointer(t.skinIndex,4,Pt.FLOAT,!1,0,0),Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),l(t.skinWeight),Pt.vertexAttribPointer(t.skinWeight,4,Pt.FLOAT,!1,0,0));0<=t.lineDistance&&(Pt.bindBuffer(Pt.ARRAY_BUFFER,n.__webglLineDistanceBuffer),l(t.lineDistance),Pt.vertexAttribPointer(t.lineDistance,1,Pt.FLOAT,!1,0,0))}c();o instanceof THREE.Mesh?(o=n.__typeArray===Uint32Array?Pt.UNSIGNED_INT:Pt.UNSIGNED_SHORT,i.wireframe?(A(i.wireframeLinewidth),e&&Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),Pt.drawElements(Pt.LINES,n.__webglLineCount,o,0)):(e&&Pt.bindBuffer(Pt.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),Pt.drawElements(Pt.TRIANGLES,n.__webglFaceCount,o,0)),Q.info.render.calls++,Q.info.render.vertices+=n.__webglFaceCount,Q.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?Pt.LINE_STRIP:Pt.LINES,A(i.linewidth),Pt.drawArrays(o,0,n.__webglLineCount),Q.info.render.calls++):o instanceof THREE.PointCloud&&(Pt.drawArrays(Pt.POINTS,0,n.__webglParticleCount),Q.info.render.calls++,Q.info.render.points+=n.__webglParticleCount)}};this.render=function(e,t,r,i){function n(e){e instanceof THREE.SkinnedMesh&&e.skeleton.update();for(var t=0,r=e.children.length;t<r;t++)n(e.children[t])}if(!1===t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var o,a,s,h,l=e.__lights,c=e.fog;tt=-1;it=null;At=!0;!0===e.autoUpdate&&e.updateMatrixWorld();void 0===t.parent&&t.updateMatrixWorld();n(e);t.matrixWorldInverse.getInverse(t.matrixWorld);wt.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);bt.setFromMatrix(wt);rr(e);K.length=0;Z.length=0;p(e,e,t);!0===Q.sortObjects&&(K.sort(u),Z.sort(f));d(this.renderPluginsPre,e,t);Q.info.render.calls=0;Q.info.render.vertices=0;Q.info.render.faces=0;Q.info.render.points=0;this.setRenderTarget(r);(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=e.__webglObjectsImmediate;i=0;for(o=h.length;i<o;i++)a=h[i],s=a.object,s.visible&&(M(s,t),T(a));e.overrideMaterial?(i=e.overrideMaterial,this.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),this.setDepthTest(i.depthTest),this.setDepthWrite(i.depthWrite),L(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits),m(K,t,l,c,!0,i),m(Z,t,l,c,!0,i),g(e.__webglObjectsImmediate,"",t,l,c,!1,i)):(i=null,this.setBlending(THREE.NoBlending),m(K,t,l,c,!1,i),g(e.__webglObjectsImmediate,"opaque",t,l,c,!1,i),m(Z,t,l,c,!0,i),g(e.__webglObjectsImmediate,"transparent",t,l,c,!0,i));d(this.renderPluginsPost,e,t);r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&D(r);this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(e,t,r,i,n){var o=_(e,t,r,i,n);rt=-1;Q.setMaterialFaces(i);n.immediateRenderCallback?n.immediateRenderCallback(o,Pt,bt):n.render(function(e){Q.renderBufferImmediate(e,o,i)})};var rr=function(e){e.__webglObjects||(e.__webglObjects={},e.__webglObjectsImmediate=[]);for(;e.__objectsAdded.length;){var r=e.__objectsAdded[0],i=e,n=void 0,o=void 0;void 0===r.__webglInit&&(r.__webglInit=!0,r._modelViewMatrix=new THREE.Matrix4,r._normalMatrix=new THREE.Matrix3);n=r.geometry;if(void 0!==n&&void 0===n.__webglInit)if(n.__webglInit=!0,n.addEventListener("dispose",Zt),n instanceof THREE.BufferGeometry)a(n);else if(r instanceof THREE.Mesh)void 0!==r.__webglActive&&H(r,i),v(i,r,n);else if(r instanceof THREE.Line){if(!n.__webglVertexBuffer){o=n;o.__webglVertexBuffer=Pt.createBuffer();o.__webglColorBuffer=Pt.createBuffer();o.__webglLineDistanceBuffer=Pt.createBuffer();Q.info.memory.geometries++;var o=n,s=r,h=o.vertices.length;o.__vertexArray=new Float32Array(3*h);o.__colorArray=new Float32Array(3*h);o.__lineDistanceArray=new Float32Array(1*h);o.__webglLineCount=h;t(o,s);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0;n.lineDistancesNeedUpdate=!0}}else r instanceof THREE.PointCloud&&!n.__webglVertexBuffer&&(o=n,o.__webglVertexBuffer=Pt.createBuffer(),o.__webglColorBuffer=Pt.createBuffer(),Q.info.memory.geometries++,o=n,s=r,h=o.vertices.length,o.__vertexArray=new Float32Array(3*h),o.__colorArray=new Float32Array(3*h),o.__sortArray=[],o.__webglParticleCount=h,t(o,s),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0);if(void 0===r.__webglActive){if(r instanceof THREE.Mesh)if(n=r.geometry,n instanceof THREE.BufferGeometry)y(i.__webglObjects,n,r);else{if(n instanceof THREE.Geometry)for(s=0,h=n.geometryGroupsList.length;s<h;s++)o=n.geometryGroupsList[s],y(i.__webglObjects,o,r)}else r instanceof THREE.Line||r instanceof THREE.PointCloud?(n=r.geometry,y(i.__webglObjects,n,r)):(r instanceof THREE.ImmediateRenderObject||r.immediateRenderCallback)&&i.__webglObjectsImmediate.push({id:null,object:r,opaque:null,transparent:null,z:0});r.__webglActive=!0}e.__objectsAdded.splice(0,1)}for(;e.__objectsRemoved.length;)H(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1)};this.initMaterial=function(e,t,r,i){var n,o,a,s;e.addEventListener("dispose",$t);var h,l,c,u;e instanceof THREE.MeshDepthMaterial?u="depth":e instanceof THREE.MeshNormalMaterial?u="normal":e instanceof THREE.MeshBasicMaterial?u="basic":e instanceof THREE.MeshLambertMaterial?u="lambert":e instanceof THREE.MeshPhongMaterial?u="phong":e instanceof THREE.LineBasicMaterial?u="basic":e instanceof THREE.LineDashedMaterial?u="dashed":e instanceof THREE.PointCloudMaterial&&(u="particle_basic");u?(n=THREE.ShaderLib[u],e.__webglShader={uniforms:THREE.UniformsUtils.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}):e.__webglShader={uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};c=s=a=o=n=0;for(var f=t.length;c<f;c++){var E=t[c];E.onlyShadow||!1===E.visible||(E instanceof THREE.DirectionalLight&&n++,E instanceof THREE.PointLight&&o++,E instanceof THREE.SpotLight&&a++,E instanceof THREE.HemisphereLight&&s++)}f=c=0;for(E=t.length;f<E;f++){var p=t[f];p.castShadow&&(p instanceof THREE.SpotLight&&c++,p instanceof THREE.DirectionalLight&&!p.shadowCascade&&c++)}t=c;Gt&&i&&i.skeleton&&i.skeleton.useVertexTexture?c=1024:(c=Pt.getParameter(Pt.MAX_VERTEX_UNIFORM_VECTORS),c=Math.floor((c-20)/4),void 0!==i&&i instanceof THREE.SkinnedMesh&&(c=Math.min(i.skeleton.bones.length,c),c<i.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+i.skeleton.bones.length+", this GPU supports just "+c+" (try OpenGL instead of ANGLE)")));r={precision:k,supportsVertexTextures:It,map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:X,skinning:e.skinning,maxBones:c,useVertexTexture:Gt&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:t,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow&&0<t,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide};i=[];u?i.push(u):(i.push(e.fragmentShader),i.push(e.vertexShader));for(var d in e.defines)i.push(d),i.push(e.defines[d]);for(l in r)i.push(l),i.push(r[l]);u=i.join();var m;l=0;for(d=J.length;l<d;l++)if(i=J[l],i.code===u){m=i;m.usedTimes++;break}void 0===m&&(m=new THREE.WebGLProgram(this,u,e,r),J.push(m),Q.info.memory.programs=J.length);e.program=m;m=e.program.attributes;if(e.morphTargets)for(e.numSupportedMorphTargets=0,d="morphTarget",l=0;l<this.maxMorphTargets;l++)u=d+l,0<=m[u]&&e.numSupportedMorphTargets++;if(e.morphNormals)for(e.numSupportedMorphNormals=0,d="morphNormal",l=0;l<this.maxMorphNormals;l++)u=d+l,0<=m[u]&&e.numSupportedMorphNormals++;e.uniformsList=[];for(h in e.__webglShader.uniforms)(l=e.program.uniforms[h])&&e.uniformsList.push([e.__webglShader.uniforms[h],l])};this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Pt.disable(Pt.CULL_FACE):(t===THREE.FrontFaceDirectionCW?Pt.frontFace(Pt.CW):Pt.frontFace(Pt.CCW),e===THREE.CullFaceBack?Pt.cullFace(Pt.BACK):e===THREE.CullFaceFront?Pt.cullFace(Pt.FRONT):Pt.cullFace(Pt.FRONT_AND_BACK),Pt.enable(Pt.CULL_FACE))};this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide;e=e.side===THREE.BackSide;ot!==t&&(t?Pt.disable(Pt.CULL_FACE):Pt.enable(Pt.CULL_FACE),ot=t);at!==e&&(e?Pt.frontFace(Pt.CW):Pt.frontFace(Pt.CCW),at=e)};this.setDepthTest=function(e){ut!==e&&(e?Pt.enable(Pt.DEPTH_TEST):Pt.disable(Pt.DEPTH_TEST),ut=e)};this.setDepthWrite=function(e){ft!==e&&(Pt.depthMask(e),ft=e)};this.setBlending=function(e,t,r,i){e!==st&&(e===THREE.NoBlending?Pt.disable(Pt.BLEND):e===THREE.AdditiveBlending?(Pt.enable(Pt.BLEND),Pt.blendEquation(Pt.FUNC_ADD),Pt.blendFunc(Pt.SRC_ALPHA,Pt.ONE)):e===THREE.SubtractiveBlending?(Pt.enable(Pt.BLEND),Pt.blendEquation(Pt.FUNC_ADD),Pt.blendFunc(Pt.ZERO,Pt.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Pt.enable(Pt.BLEND),Pt.blendEquation(Pt.FUNC_ADD),Pt.blendFunc(Pt.ZERO,Pt.SRC_COLOR)):e===THREE.CustomBlending?Pt.enable(Pt.BLEND):(Pt.enable(Pt.BLEND),Pt.blendEquationSeparate(Pt.FUNC_ADD,Pt.FUNC_ADD),Pt.blendFuncSeparate(Pt.SRC_ALPHA,Pt.ONE_MINUS_SRC_ALPHA,Pt.ONE,Pt.ONE_MINUS_SRC_ALPHA)),st=e);if(e===THREE.CustomBlending){if(t!==ht&&(Pt.blendEquation(V(t)),ht=t),r!==lt||i!==ct)Pt.blendFunc(V(r),V(i)),lt=r,ct=i}else ct=lt=ht=null};this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Qt),e.__webglTexture=Pt.createTexture(),Q.info.memory.textures++);Pt.activeTexture(Pt.TEXTURE0+t);Pt.bindTexture(Pt.TEXTURE_2D,e.__webglTexture);Pt.pixelStorei(Pt.UNPACK_FLIP_Y_WEBGL,e.flipY);Pt.pixelStorei(Pt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha);Pt.pixelStorei(Pt.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),n=V(e.format),o=V(e.type);P(Pt.TEXTURE_2D,e,i);var a=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<a.length&&i){for(var s=0,h=a.length;s<h;s++)r=a[s],Pt.texImage2D(Pt.TEXTURE_2D,s,n,r.width,r.height,0,n,o,r.data);e.generateMipmaps=!1}else Pt.texImage2D(Pt.TEXTURE_2D,0,n,r.width,r.height,0,n,o,r.data);
else if(e instanceof THREE.CompressedTexture)for(s=0,h=a.length;s<h;s++)r=a[s],e.format!==THREE.RGBAFormat?Pt.compressedTexImage2D(Pt.TEXTURE_2D,s,n,r.width,r.height,0,r.data):Pt.texImage2D(Pt.TEXTURE_2D,s,n,r.width,r.height,0,n,o,r.data);else if(0<a.length&&i){s=0;for(h=a.length;s<h;s++)r=a[s],Pt.texImage2D(Pt.TEXTURE_2D,s,n,n,o,r);e.generateMipmaps=!1}else Pt.texImage2D(Pt.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&i&&Pt.generateMipmap(Pt.TEXTURE_2D);e.needsUpdate=!1;if(e.onUpdate)e.onUpdate()}else Pt.activeTexture(Pt.TEXTURE0+t),Pt.bindTexture(Pt.TEXTURE_2D,e.__webglTexture)};this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0);void 0===e.stencilBuffer&&(e.stencilBuffer=!0);e.addEventListener("dispose",Jt);e.__webglTexture=Pt.createTexture();Q.info.memory.textures++;var r=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),i=V(e.format),n=V(e.type);if(t){e.__webglFramebuffer=[];e.__webglRenderbuffer=[];Pt.bindTexture(Pt.TEXTURE_CUBE_MAP,e.__webglTexture);P(Pt.TEXTURE_CUBE_MAP,e,r);for(var o=0;6>o;o++){e.__webglFramebuffer[o]=Pt.createFramebuffer();e.__webglRenderbuffer[o]=Pt.createRenderbuffer();Pt.texImage2D(Pt.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,i,e.width,e.height,0,i,n,null);var a=e,s=Pt.TEXTURE_CUBE_MAP_POSITIVE_X+o;Pt.bindFramebuffer(Pt.FRAMEBUFFER,e.__webglFramebuffer[o]);Pt.framebufferTexture2D(Pt.FRAMEBUFFER,Pt.COLOR_ATTACHMENT0,s,a.__webglTexture,0);F(e.__webglRenderbuffer[o],e)}r&&Pt.generateMipmap(Pt.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Pt.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Pt.createRenderbuffer(),Pt.bindTexture(Pt.TEXTURE_2D,e.__webglTexture),P(Pt.TEXTURE_2D,e,r),Pt.texImage2D(Pt.TEXTURE_2D,0,i,e.width,e.height,0,i,n,null),i=Pt.TEXTURE_2D,Pt.bindFramebuffer(Pt.FRAMEBUFFER,e.__webglFramebuffer),Pt.framebufferTexture2D(Pt.FRAMEBUFFER,Pt.COLOR_ATTACHMENT0,i,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Pt.framebufferRenderbuffer(Pt.FRAMEBUFFER,Pt.DEPTH_ATTACHMENT,Pt.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Pt.framebufferRenderbuffer(Pt.FRAMEBUFFER,Pt.DEPTH_STENCIL_ATTACHMENT,Pt.RENDERBUFFER,e.__webglRenderbuffer):F(e.__webglRenderbuffer,e),r&&Pt.generateMipmap(Pt.TEXTURE_2D);t?Pt.bindTexture(Pt.TEXTURE_CUBE_MAP,null):Pt.bindTexture(Pt.TEXTURE_2D,null);Pt.bindRenderbuffer(Pt.RENDERBUFFER,null);Pt.bindFramebuffer(Pt.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,r=e.width,e=e.height,n=i=0):(t=null,r=vt,e=yt,i=gt,n=Tt);t!==et&&(Pt.bindFramebuffer(Pt.FRAMEBUFFER,t),Pt.viewport(i,n,r,e),et=t);Rt=r;xt=e};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,t,r){this.width=e;this.height=t;r=r||{};this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter;this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==r.format?r.format:THREE.RGBAFormat;this.type=void 0!==r.type?r.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==r.depthBuffer?r.depthBuffer:!0;this.stencilBuffer=void 0!==r.stencilBuffer?r.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){this.width=e;this.height=t},clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);e.wrapS=this.wrapS;e.wrapT=this.wrapT;e.magFilter=this.magFilter;e.minFilter=this.minFilter;e.anisotropy=this.anisotropy;e.offset.copy(this.offset);e.repeat.copy(this.repeat);e.format=this.format;e.type=this.type;e.depthBuffer=this.depthBuffer;e.stencilBuffer=this.stencilBuffer;e.generateMipmaps=this.generateMipmaps;e.shareDepthFrom=this.shareDepthFrom;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLProgram=function(){var e=0;return function(t,r,i,n){var o=t.context,a=i.defines,s=i.__webglShader.uniforms,h=i.attributes,l=i.__webglShader.vertexShader,c=i.__webglShader.fragmentShader,u=i.index0AttributeName;void 0===u&&!0===n.morphTargets&&(u="position");var f="SHADOWMAP_TYPE_BASIC";n.shadowMapType===THREE.PCFShadowMap?f="SHADOWMAP_TYPE_PCF":n.shadowMapType===THREE.PCFSoftShadowMap&&(f="SHADOWMAP_TYPE_PCF_SOFT");var E,p;E=[];for(var d in a)p=a[d],!1!==p&&(p="#define "+d+" "+p,E.push(p));E=E.join("\n");a=o.createProgram();i instanceof THREE.RawShaderMaterial?t=i="":(i=["precision "+n.precision+" float;","precision "+n.precision+" int;",E,n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexColors?"#define USE_COLOR":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n	attribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n	attribute vec3 morphTarget0;\n	attribute vec3 morphTarget1;\n	attribute vec3 morphTarget2;\n	attribute vec3 morphTarget3;\n	#ifdef USE_MORPHNORMALS\n		attribute vec3 morphNormal0;\n		attribute vec3 morphNormal1;\n		attribute vec3 morphNormal2;\n		attribute vec3 morphNormal3;\n	#else\n		attribute vec3 morphTarget4;\n		attribute vec3 morphTarget5;\n		attribute vec3 morphTarget6;\n		attribute vec3 morphTarget7;\n	#endif\n#endif\n#ifdef USE_SKINNING\n	attribute vec4 skinIndex;\n	attribute vec4 skinWeight;\n#endif\n"].join("\n"),t=["precision "+n.precision+" float;","precision "+n.precision+" int;",n.bumpMap||n.normalMap?"#extension GL_OES_standard_derivatives : enable":"",E,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexColors?"#define USE_COLOR":"",n.metal?"#define METAL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));l=new THREE.WebGLShader(o,o.VERTEX_SHADER,i+l);c=new THREE.WebGLShader(o,o.FRAGMENT_SHADER,t+c);o.attachShader(a,l);o.attachShader(a,c);void 0!==u&&o.bindAttribLocation(a,0,u);o.linkProgram(a);!1===o.getProgramParameter(a,o.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",o.getProgramParameter(a,o.VALIDATE_STATUS)),console.error("gl.getError()",o.getError()));""!==o.getProgramInfoLog(a)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",o.getProgramInfoLog(a));o.deleteShader(l);o.deleteShader(c);u="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");n.useVertexTexture?(u.push("boneTexture"),u.push("boneTextureWidth"),u.push("boneTextureHeight")):u.push("boneGlobalMatrices");n.logarithmicDepthBuffer&&u.push("logDepthBufFC");for(var m in s)u.push(m);s=u;m={};u=0;for(t=s.length;u<t;u++)f=s[u],m[f]=o.getUniformLocation(a,f);this.uniforms=m;u="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(s=0;s<n.maxMorphTargets;s++)u.push("morphTarget"+s);for(s=0;s<n.maxMorphNormals;s++)u.push("morphNormal"+s);for(var g in h)u.push(g);n=u;h={};g=0;for(s=n.length;g<s;g++)m=n[g],h[m]=o.getAttribLocation(a,m);this.attributes=h;this.id=e++;this.code=r;this.usedTimes=1;this.program=a;this.vertexShader=l;this.fragmentShader=c;return this}}();THREE.WebGLShader=function(){var e=function(e){e=e.split("\n");for(var t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")};return function(t,r,i){r=t.createShader(r);t.shaderSource(r,i);t.compileShader(r);!1===t.getShaderParameter(r,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");""!==t.getShaderInfoLog(r)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t.getShaderInfoLog(r)),console.warn(e(i)));return r}}();THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld);this.positionScreen.copy(e.positionScreen)};THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.normalModel=new THREE.Vector3;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.color=new THREE.Color;this.material=null;this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.GeometryUtils={merge:function(e,t,r){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var i;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,t=t.geometry);e.merge(t,i,r)},center:function(e){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return e.center()}};THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.Texture(void 0,t);n.load(e,function(e){o.image=e;o.needsUpdate=!0;r&&r(o)},void 0,function(e){i&&i(e)});o.sourceFile=e;return o},loadTextureCube:function(e,t,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.CubeTexture([],t);o.flipY=!1;var a=0;t=function(t){n.load(e[t],function(e){o.images[t]=e;a+=1;6===a&&(o.needsUpdate=!0,r&&r(o))})};i=0;for(var s=e.length;i<s;++i)t(i);return o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(e,t){var r=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t|=1;var i=e.width,n=e.height,o=document.createElement("canvas");o.width=i;o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,i,n).data,h=a.createImageData(i,n),l=h.data,c=0;c<i;c++)for(var u=0;u<n;u++){var f=0>u-1?0:u-1,E=u+1>n-1?n-1:u+1,p=0>c-1?0:c-1,d=c+1>i-1?i-1:c+1,m=[],g=[0,0,s[4*(u*i+c)]/255*t];m.push([-1,0,s[4*(u*i+p)]/255*t]);m.push([-1,-1,s[4*(f*i+p)]/255*t]);m.push([0,-1,s[4*(f*i+c)]/255*t]);m.push([1,-1,s[4*(f*i+d)]/255*t]);m.push([1,0,s[4*(u*i+d)]/255*t]);m.push([1,1,s[4*(E*i+d)]/255*t]);m.push([0,1,s[4*(E*i+c)]/255*t]);m.push([-1,1,s[4*(E*i+p)]/255*t]);f=[];p=m.length;for(E=0;E<p;E++){var d=m[E],T=m[(E+1)%p],d=[d[0]-g[0],d[1]-g[1],d[2]-g[2]],T=[T[0]-g[0],T[1]-g[1],T[2]-g[2]];f.push(r([d[1]*T[2]-d[2]*T[1],d[2]*T[0]-d[0]*T[2],d[0]*T[1]-d[1]*T[0]]))}m=[0,0,0];for(E=0;E<f.length;E++)m[0]+=f[E][0],m[1]+=f[E][1],m[2]+=f[E][2];m[0]/=f.length;m[1]/=f.length;m[2]/=f.length;g=4*(u*i+c);l[g]=(m[0]+1)/2*255|0;l[g+1]=(m[1]+1)/2*255|0;l[g+2]=255*m[2]|0;l[g+3]=255}a.putImageData(h,0,0);return o},generateDataTexture:function(e,t,r){var i=e*t,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g);r=Math.floor(255*r.b);for(var s=0;s<i;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=r;e=new THREE.DataTexture(n,e,t,THREE.RGBFormat);e.needsUpdate=!0;return e}};THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,n=t.length;i<n;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld);t.remove(e);r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld);e.applyMatrix(i);t.remove(e);r.add(e)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(e){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(e){var t=e.familyName.toLowerCase();this.faces[t]=this.faces[t]||{};this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{};this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){var t=this.getFace(),r=this.size/t.resolution,i=0,n=String(e).split(""),o=n.length,a=[];for(e=0;e<o;e++){var s=new THREE.Path,s=this.extractGlyphPoints(n[e],t,r,i,s),i=i+s.offset;a.push(s.path)}return{paths:a,offset:i/2}},extractGlyphPoints:function(e,t,r,i,n){var o=[],a,s,h,l,c,u,f,E,p,d,m,g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),l=t.length,e=0;e<l;)switch(h=t[e++],h){case"m":h=t[e++]*r+i;c=t[e++]*r;n.moveTo(h,c);break;case"l":h=t[e++]*r+i;c=t[e++]*r;n.lineTo(h,c);break;case"q":h=t[e++]*r+i;c=t[e++]*r;E=t[e++]*r+i;p=t[e++]*r;n.quadraticCurveTo(E,p,h,c);if(a=o[o.length-1])for(u=a.x,f=a.y,a=1,s=this.divisions;a<=s;a++){var T=a/s;THREE.Shape.Utils.b2(T,u,E,h);THREE.Shape.Utils.b2(T,f,p,c)}break;case"b":if(h=t[e++]*r+i,c=t[e++]*r,E=t[e++]*r+i,p=t[e++]*r,d=t[e++]*r+i,m=t[e++]*r,n.bezierCurveTo(E,p,d,m,h,c),a=o[o.length-1])for(u=a.x,f=a.y,a=1,s=this.divisions;a<=s;a++)T=a/s,THREE.Shape.Utils.b3(T,u,E,d,h),THREE.Shape.Utils.b3(T,f,p,m,c)}return{offset:g.ha*r,path:n}}}};THREE.FontUtils.generateShapes=function(e,t){t=t||{};var r=void 0!==t.curveSegments?t.curveSegments:4,i=void 0!==t.font?t.font:"helvetiker",n=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=void 0!==t.size?t.size:100;THREE.FontUtils.divisions=r;THREE.FontUtils.face=i;THREE.FontUtils.weight=n;THREE.FontUtils.style=o;r=THREE.FontUtils.drawText(e).paths;i=[];n=0;for(o=r.length;n<o;n++)Array.prototype.push.apply(i,r[n].toShapes());return i};(function(e){var t=function(e){for(var t=e.length,r=0,i=t-1,n=0;n<t;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return.5*r};e.Triangulate=function(e,r){var i=e.length;if(3>i)return null;var n=[],o=[],a=[],s,h,l;if(0<t(e))for(h=0;h<i;h++)o[h]=h;else for(h=0;h<i;h++)o[h]=i-1-h;var c=2*i;for(h=i-1;2<i;){if(0>=c--){console.log("Warning, unable to triangulate polygon!");break}s=h;i<=s&&(s=0);h=s+1;i<=h&&(h=0);l=h+1;i<=l&&(l=0);var u;e:{var f=u=void 0,E=void 0,p=void 0,d=void 0,m=void 0,g=void 0,T=void 0,v=void 0,f=e[o[s]].x,E=e[o[s]].y,p=e[o[h]].x,d=e[o[h]].y,m=e[o[l]].x,g=e[o[l]].y;if(1e-10>(p-f)*(g-E)-(d-E)*(m-f))u=!1;else{var y=void 0,R=void 0,x=void 0,H=void 0,_=void 0,b=void 0,w=void 0,M=void 0,S=void 0,C=void 0,S=M=w=v=T=void 0,y=m-p,R=g-d,x=f-m,H=E-g,_=p-f,b=d-E;for(u=0;u<i;u++)if(T=e[o[u]].x,v=e[o[u]].y,!(T===f&&v===E||T===p&&v===d||T===m&&v===g)&&(w=T-f,M=v-E,S=T-p,C=v-d,T-=m,v-=g,S=y*C-R*S,w=_*M-b*w,M=x*v-H*T,-1e-10<=S&&-1e-10<=M&&-1e-10<=w)){u=!1;break e}u=!0}}if(u){n.push([e[o[s]],e[o[h]],e[o[l]]]);a.push([o[s],o[h],o[l]]);s=h;for(l=h+1;l<i;s++,l++)o[s]=o[l];i--;c=2*i}}return r?a:n};e.Triangulate.area=t;return e})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(e){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(e){e=this.getUtoTmapping(e);return this.getPoint(e)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPoint(t/e));return r};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPointAt(t/e));return r};THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]};THREE.Curve.prototype.getLengths=function(e){e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],r,i=this.getPoint(0),n,o=0;t.push(0);for(n=1;n<=e;n++)r=this.getPoint(n/e),o+=r.distanceTo(i),t.push(o),i=r;return this.cacheArcLengths=t};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(e,t){var r=this.getLengths(),i=0,n=r.length,o;o=t?t:e*r[n-1];for(var a=0,s=n-1,h;a<=s;)if(i=Math.floor(a+(s-a)/2),h=r[i]-o,0>h)a=i+1;else if(0<h)s=i-1;else{s=i;break}i=s;if(r[i]==o)return i/(n-1);a=r[i];return r=(i+(o-a)/(r[i+1]-a))/(n-1)};THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4;e+=1e-4;0>t&&(t=0);1<e&&(e=1);t=this.getPoint(t);return this.getPoint(e).clone().sub(t).normalize()};THREE.Curve.prototype.getTangentAt=function(e){e=this.getUtoTmapping(e);return this.getTangent(e)};THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,n){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*n},tangentSpline:function(e,t,r,i,n){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,r,i,n){e=.5*(r-e);i=.5*(i-t);var o=n*n;return(2*t-2*r+e+i)*n*o+(-3*t+3*r-2*e-i)*o+e*n+t}};THREE.Curve.create=function(e,t){e.prototype=Object.create(THREE.Curve.prototype);e.prototype.getPoint=t;return e};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(e){this.curves.push(e)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))};THREE.CurvePath.prototype.getPoint=function(e){var t=e*this.getLength(),r=this.getCurveLengths();for(e=0;e<r.length;){if(r[e]>=t)return t=r[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null};THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0,r,i=this.curves.length;for(r=0;r<i;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e};THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints(),t,r,i,n,o,a;t=r=Number.NEGATIVE_INFINITY;n=o=Number.POSITIVE_INFINITY;var s,h,l,c,u=e[0]instanceof THREE.Vector3;c=u?new THREE.Vector3:new THREE.Vector2;h=0;for(l=e.length;h<l;h++)s=e[h],s.x>t?t=s.x:s.x<n&&(n=s.x),s.y>r?r=s.y:s.y<o&&(o=s.y),u&&(s.z>i?i=s.z:s.z<a&&(a=s.z)),c.add(s);e={minX:n,minY:o,maxX:t,maxY:r};u&&(e.maxZ=i,e.minZ=a);return e};THREE.CurvePath.prototype.createPointsGeometry=function(e){e=this.getPoints(e,!0);return this.createGeometry(e)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){e=this.getSpacedPoints(e,!0);return this.createGeometry(e)};THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t};THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)};THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r=this.getPoints(e),i,n;t||(t=this.bends);i=0;for(n=t.length;i<n;i++)r=this.getWrapPoints(r,t[i]);return r};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r=this.getSpacedPoints(e),i,n;t||(t=this.bends);i=0;for(n=t.length;i<n;i++)r=this.getWrapPoints(r,t[i]);return r};THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r=this.getBoundingBox(),i,n,o,a,s,h;i=0;for(n=e.length;i<n;i++)o=e[i],a=o.x,s=o.y,h=a/r.maxX,h=t.getUtoTmapping(h,a),a=t.getPoint(h),h=t.getTangent(h),h.set(-h.y,h.x).multiplyScalar(s),o.x=a.x+h.x,o.y=a.y+h.y;return e};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(e){THREE.CurvePath.call(this);this.actions=[];e&&this.fromPoints(e)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y)};THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})};THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.LineCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(e,t));this.curves.push(i);this.actions.push({action:THREE.PathActions.LINE_TO,args:r})};THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(o);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})};THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(s);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})};THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=[new THREE.Vector2(r[r.length-2],r[r.length-1])];Array.prototype.push.apply(r,e);r=new THREE.SplineCurve(r);this.curves.push(r);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})};THREE.Path.prototype.arc=function(e,t,r,i,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],r,i,n,o)};THREE.Path.prototype.absarc=function(e,t,r,i,n,o){this.absellipse(e,t,r,r,i,n,o)};THREE.Path.prototype.ellipse=function(e,t,r,i,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(e+s[s.length-2],t+s[s.length-1],r,i,n,o,a)};THREE.Path.prototype.absellipse=function(e,t,r,i,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,r,i,n,o,a);this.curves.push(h);h=h.getPoint(1);s.push(h.x);s.push(h.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})};THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;i<e;i++)r.push(this.getPoint(i/e));return r};THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r=[],i,n,o,a,s,h,l,c,u,f,E,p,d;i=0;for(n=this.actions.length;i<n;i++)switch(o=this.actions[i],a=o.action,o=o.args,a){case THREE.PathActions.MOVE_TO:r.push(new THREE.Vector2(o[0],o[1]));break;case THREE.PathActions.LINE_TO:r.push(new THREE.Vector2(o[0],o[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:s=o[2];h=o[3];u=o[0];f=o[1];0<r.length?(a=r[r.length-1],E=a.x,p=a.y):(a=this.actions[i-1].args,E=a[a.length-2],p=a[a.length-1]);for(o=1;o<=e;o++)d=o/e,a=THREE.Shape.Utils.b2(d,E,u,s),d=THREE.Shape.Utils.b2(d,p,f,h),r.push(new THREE.Vector2(a,d));break;case THREE.PathActions.BEZIER_CURVE_TO:s=o[4];h=o[5];u=o[0];f=o[1];l=o[2];c=o[3];0<r.length?(a=r[r.length-1],E=a.x,p=a.y):(a=this.actions[i-1].args,E=a[a.length-2],p=a[a.length-1]);for(o=1;o<=e;o++)d=o/e,a=THREE.Shape.Utils.b3(d,E,u,l,s),d=THREE.Shape.Utils.b3(d,p,f,c,h),r.push(new THREE.Vector2(a,d));break;case THREE.PathActions.CSPLINE_THRU:a=this.actions[i-1].args;d=[new THREE.Vector2(a[a.length-2],a[a.length-1])];a=e*o[0].length;d=d.concat(o[0]);d=new THREE.SplineCurve(d);for(o=1;o<=a;o++)r.push(d.getPointAt(o/a));break;case THREE.PathActions.ARC:s=o[0];h=o[1];f=o[2];l=o[3];a=o[4];u=!!o[5];E=a-l;p=2*e;for(o=1;o<=p;o++)d=o/p,u||(d=1-d),d=l+d*E,a=s+f*Math.cos(d),d=h+f*Math.sin(d),r.push(new THREE.Vector2(a,d));break;case THREE.PathActions.ELLIPSE:for(s=o[0],h=o[1],f=o[2],c=o[3],l=o[4],a=o[5],u=!!o[6],E=a-l,p=2*e,o=1;o<=p;o++)d=o/p,u||(d=1-d),d=l+d*E,a=s+f*Math.cos(d),d=h+c*Math.sin(d),r.push(new THREE.Vector2(a,d))}i=r[r.length-1];1e-10>Math.abs(i.x-r[0].x)&&1e-10>Math.abs(i.y-r[0].y)&&r.splice(r.length-1,1);t&&r.push(r[0]);return r};THREE.Path.prototype.toShapes=function(e,t){function r(e){for(var t=[],r=0,i=e.length;r<i;r++){var n=e[r],o=new THREE.Shape;o.actions=n.actions;o.curves=n.curves;t.push(o)}return t}function i(e,t){for(var r=t.length,i=!1,n=r-1,o=0;o<r;n=o++){var a=t[n],s=t[o],h=s.x-a.x,l=s.y-a.y;if(1e-10<Math.abs(l)){if(0>l&&(a=t[o],h=-h,s=t[n],l=-l),!(e.y<a.y||e.y>s.y))if(e.y==a.y){if(e.x==a.x)return!0}else{n=l*(e.x-a.x)-h*(e.y-a.y);if(0==n)return!0;0>n||(i=!i)}}else if(e.y==a.y&&(s.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=s.x))return!0}return i}var n=function(e){var t,r,i,n,o=[],a=new THREE.Path;t=0;for(r=e.length;t<r;t++)i=e[t],n=i.args,i=i.action,i==THREE.PathActions.MOVE_TO&&0!=a.actions.length&&(o.push(a),a=new THREE.Path),a[i].apply(a,n);0!=a.actions.length&&o.push(a);return o}(this.actions);if(0==n.length)return[];if(!0===t)return r(n);var o,a,s,h=[];if(1==n.length)return a=n[0],s=new THREE.Shape,s.actions=a.actions,s.curves=a.curves,h.push(s),h;var l=!THREE.Shape.Utils.isClockWise(n[0].getPoints()),l=e?!l:l;s=[];var c=[],u=[],f=0,E;c[f]=void 0;u[f]=[];var p,d;p=0;for(d=n.length;p<d;p++)a=n[p],E=a.getPoints(),o=THREE.Shape.Utils.isClockWise(E),(o=e?!o:o)?(!l&&c[f]&&f++,c[f]={s:new THREE.Shape,p:E},c[f].s.actions=a.actions,c[f].s.curves=a.curves,l&&f++,u[f]=[]):u[f].push({h:a,p:E[0]});if(!c[0])return r(n);if(1<c.length){p=!1;d=[];a=0;for(n=c.length;a<n;a++)s[a]=[];a=0;for(n=c.length;a<n;a++)for(o=u[a],l=0;l<o.length;l++){f=o[l];E=!0;for(var m=0;m<c.length;m++)i(f.p,c[m].p)&&(a!=m&&d.push({froms:a,tos:m,hole:l}),E?(E=!1,s[m].push(f)):p=!0);E&&s[a].push(f)}0<d.length&&(p||(u=s))}p=0;for(d=c.length;p<d;p++)for(s=c[p].s,h.push(s),a=u[p],n=0,o=a.length;n<o;n++)s.holes.push(a[n].h);return h};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)};THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)};THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i};THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i};THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}};THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)};THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}};THREE.Shape.Utils={triangulateShape:function(e,t){function r(e,t,r){return e.x!=t.x?e.x<t.x?e.x<=r.x&&r.x<=t.x:t.x<=r.x&&r.x<=e.x:e.y<t.y?e.y<=r.y&&r.y<=t.y:t.y<=r.y&&r.y<=e.y}function i(e,t,i,n,o){var a=t.x-e.x,s=t.y-e.y,h=n.x-i.x,l=n.y-i.y,c=e.x-i.x,u=e.y-i.y,f=s*h-a*l,E=s*c-a*u;if(1e-10<Math.abs(f)){if(0<f){if(0>E||E>f)return[];h=l*c-h*u;if(0>h||h>f)return[]}else{if(0<E||E<f)return[];h=l*c-h*u;if(0<h||h<f)return[]}if(0==h)return!o||0!=E&&E!=f?[e]:[];if(h==f)return!o||0!=E&&E!=f?[t]:[];if(0==E)return[i];if(E==f)return[n];o=h/f;return[{x:e.x+o*a,y:e.y+o*s}]}if(0!=E||l*c!=h*u)return[];s=0==a&&0==s;h=0==h&&0==l;if(s&&h)return e.x!=i.x||e.y!=i.y?[]:[e];if(s)return r(i,n,e)?[e]:[];if(h)return r(e,t,i)?[i]:[];0!=a?(e.x<t.x?(a=e,h=e.x,s=t,e=t.x):(a=t,h=t.x,s=e,e=e.x),i.x<n.x?(t=i,f=i.x,l=n,i=n.x):(t=n,f=n.x,l=i,i=i.x)):(e.y<t.y?(a=e,h=e.y,s=t,e=t.y):(a=t,h=t.y,s=e,e=e.y),i.y<n.y?(t=i,f=i.y,l=n,i=n.y):(t=n,f=n.y,l=i,i=i.y));return h<=f?e<f?[]:e==f?o?[]:[t]:e<=i?[t,s]:[t,l]:h>i?[]:h==i?o?[]:[a]:e<=i?[a,s]:[a,l]
}function n(e,t,r,i){var n=t.x-e.x,o=t.y-e.y;t=r.x-e.x;r=r.y-e.y;var a=i.x-e.x;i=i.y-e.y;e=n*r-o*t;n=n*i-o*a;return 1e-10<Math.abs(e)?(t=a*r-i*t,0<e?0<=n&&0<=t:0<=n||0<=t):0<n}var o,a,s,h,l,c={};s=e.concat();o=0;for(a=t.length;o<a;o++)Array.prototype.push.apply(s,t[o]);o=0;for(a=s.length;o<a;o++)l=s[o].x+":"+s[o].y,void 0!==c[l]&&console.log("Duplicate point",l),c[l]=o;o=function(e,t){function r(e,t){var r=s.length-1,i=e-1;0>i&&(i=r);var o=e+1;o>r&&(o=0);r=n(s[e],s[i],s[o],h[t]);if(!r)return!1;r=h.length-1;i=t-1;0>i&&(i=r);o=t+1;o>r&&(o=0);return(r=n(h[t],h[i],h[o],s[e]))?!0:!1}function o(e,t){var r,n;for(r=0;r<s.length;r++)if(n=r+1,n%=s.length,n=i(e,t,s[r],s[n],!0),0<n.length)return!0;return!1}function a(e,r){var n,o,a,s;for(n=0;n<l.length;n++)for(o=t[l[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,s=i(e,r,o[a],o[s],!0),0<s.length)return!0;return!1}var s=e.concat(),h,l=[],c,u,f,E,p,d=[],m,g,T,v=0;for(c=t.length;v<c;v++)l.push(v);m=0;for(var y=2*l.length;0<l.length;){y--;if(0>y){console.log("Infinite Loop! Holes left:"+l.length+", Probably Hole outside Shape!");break}for(u=m;u<s.length;u++){f=s[u];c=-1;for(v=0;v<l.length;v++)if(E=l[v],p=f.x+":"+f.y+":"+E,void 0===d[p]){h=t[E];for(g=0;g<h.length;g++)if(E=h[g],r(u,g)&&!o(f,E)&&!a(f,E)){c=g;l.splice(v,1);m=s.slice(0,u+1);E=s.slice(u);g=h.slice(c);T=h.slice(0,c+1);s=m.concat(g).concat(T).concat(E);m=u;break}if(0<=c)break;d[p]=!0}if(0<=c)break}}return s}(e,t);var u=THREE.FontUtils.Triangulate(o,!1);o=0;for(a=u.length;o<a;o++)for(h=u[o],s=0;3>s;s++)l=h[s].x+":"+h[s].y,l=c[l],void 0!==l&&(h[s]=l);return u.concat()},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,n){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,n)}};THREE.LineCurve=function(e,t){this.v1=e;this.v2=t};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);t.multiplyScalar(e).add(this.v1);return t};THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)};THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e;this.v1=t;this.v2=r};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(t,e)};THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x);e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);t=new THREE.Vector2(t,e);t.normalize();return t};THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e;this.v1=t;this.v2=r;this.v3=i};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(t,e)};THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);t=new THREE.Vector2(t,e);t.normalize();return t};THREE.SplineCurve=function(e){this.points=void 0==e?[]:e};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,r=[],i=this.points,n;n=(i.length-1)*e;e=Math.floor(n);n-=e;r[0]=0==e?e:e-1;r[1]=e;r[2]=e>i.length-2?i.length-1:e+1;r[3]=e>i.length-3?i.length-1:e+2;t.x=THREE.Curve.Utils.interpolate(i[r[0]].x,i[r[1]].x,i[r[2]].x,i[r[3]].x,n);t.y=THREE.Curve.Utils.interpolate(i[r[0]].y,i[r[1]].y,i[r[2]].y,i[r[3]].y,n);return t};THREE.EllipseCurve=function(e,t,r,i,n,o,a){this.aX=e;this.aY=t;this.xRadius=r;this.yRadius=i;this.aStartAngle=n;this.aEndAngle=o;this.aClockwise=a};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(e){var t;t=this.aEndAngle-this.aStartAngle;0>t&&(t+=2*Math.PI);t>2*Math.PI&&(t-=2*Math.PI);t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t;e=this.aX+this.xRadius*Math.cos(t);t=this.aY+this.yRadius*Math.sin(t);return new THREE.Vector2(e,t)};THREE.ArcCurve=function(e,t,r,i,n,o){THREE.EllipseCurve.call(this,e,t,r,r,i,n,o)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e;this.v2=t},function(e){var t=new THREE.Vector3;t.subVectors(this.v2,this.v1);t.multiplyScalar(e);t.add(this.v1);return t});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e;this.v1=t;this.v2=r},function(e){var t,r;t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(t,r,e)});THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e;this.v1=t;this.v2=r;this.v3=i},function(e){var t,r;t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(t,r,e)});THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,r=[],i=this.points,n;e*=i.length-1;n=Math.floor(e);e-=n;r[0]=0==n?n:n-1;r[1]=n;r[2]=n>i.length-2?i.length-1:n+1;r[3]=n>i.length-3?i.length-1:n+2;n=i[r[0]];var o=i[r[1]],a=i[r[2]],r=i[r[3]];t.x=THREE.Curve.Utils.interpolate(n.x,o.x,a.x,r.x,e);t.y=THREE.Curve.Utils.interpolate(n.y,o.y,a.y,r.y,e);t.z=THREE.Curve.Utils.interpolate(n.z,o.z,a.z,r.z,e);return t});THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,r=[],i=this.points,n;n=(i.length-0)*e;e=Math.floor(n);n-=e;e+=0<e?0:(Math.floor(Math.abs(e)/i.length)+1)*i.length;r[0]=(e-1)%i.length;r[1]=e%i.length;r[2]=(e+1)%i.length;r[3]=(e+2)%i.length;t.x=THREE.Curve.Utils.interpolate(i[r[0]].x,i[r[1]].x,i[r[2]].x,i[r[3]].x,n);t.y=THREE.Curve.Utils.interpolate(i[r[0]].y,i[r[1]].y,i[r[2]].y,i[r[3]].y,n);t.z=THREE.Curve.Utils.interpolate(i[r[0]].z,i[r[1]].z,i[r[2]].z,i[r[3]].z,n);return t});THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(e){if(!0!==e.initialized){for(var t=0;t<e.hierarchy.length;t++){for(var r=0;r<e.hierarchy[t].keys.length;r++)if(0>e.hierarchy[t].keys[r].time&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=(new THREE.Quaternion).fromArray(i)}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){i={};for(r=0;r<e.hierarchy[t].keys.length;r++)for(var n=0;n<e.hierarchy[t].keys[r].morphTargets.length;n++){var o=e.hierarchy[t].keys[r].morphTargets[n];i[o]=-1}e.hierarchy[t].usedMorphTargets=i;for(r=0;r<e.hierarchy[t].keys.length;r++){var a={};for(o in i){for(n=0;n<e.hierarchy[t].keys[r].morphTargets.length;n++)if(e.hierarchy[t].keys[r].morphTargets[n]===o){a[o]=e.hierarchy[t].keys[r].morphTargetsInfluences[n];break}n===e.hierarchy[t].keys[r].morphTargets.length&&(a[o]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=a}}for(r=1;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].index=r}e.initialized=!0;return e}},parse:function(e){var t=function(e,r){r.push(e);for(var i=0;i<e.children.length;i++)t(e.children[i],r)},r=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.skeleton.bones.length;i++)r.push(e.skeleton.bones[i]);else t(e,r);return r},play:function(e){-1===this.animations.indexOf(e)&&this.animations.push(e)},stop:function(e){e=this.animations.indexOf(e);-1!==e&&this.animations.splice(e,1)},update:function(e){for(var t=0;t<this.animations.length;t++)this.animations[t].update(e)}};THREE.Animation=function(e,t){this.root=e;this.data=THREE.AnimationHandler.init(t);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];THREE.Animation.prototype.play=function(e,t){this.currentTime=void 0!==e?e:0;this.weight=void 0!==t?t:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)};THREE.Animation.prototype.stop=function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)};THREE.Animation.prototype.reset=function(){for(var e=0,t=this.hierarchy.length;e<t;e++){var r=this.hierarchy[e];r.matrixAutoUpdate=!0;void 0===r.animationCache&&(r.animationCache={});void 0===r.animationCache[this.data.name]&&(r.animationCache[this.data.name]={},r.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].originalMatrix=r.matrix);for(var r=r.animationCache[this.data.name],i=0;3>i;i++){for(var n=this.keyTypes[i],o=this.data.hierarchy[e].keys[0],a=this.getNextKeyWith(n,e,1);a.time<this.currentTime&&a.index>o.index;)o=a,a=this.getNextKeyWith(n,e,a.index+1);r.prevKey[n]=o;r.nextKey[n]=a}}};THREE.Animation.prototype.update=function(){var e=[],t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Quaternion,n=function(e,t){var r=[],i=[],n,a,s,h,l,c;n=(e.length-1)*t;a=Math.floor(n);n-=a;r[0]=0===a?a:a-1;r[1]=a;r[2]=a>e.length-2?a:a+1;r[3]=a>e.length-3?a:a+2;a=e[r[0]];h=e[r[1]];l=e[r[2]];c=e[r[3]];r=n*n;s=n*r;i[0]=o(a[0],h[0],l[0],c[0],n,r,s);i[1]=o(a[1],h[1],l[1],c[1],n,r,s);i[2]=o(a[2],h[2],l[2],c[2],n,r,s);return i},o=function(e,t,r,i,n,o,a){e=.5*(r-e);i=.5*(i-t);return(2*(t-r)+e+i)*a+(-3*(t-r)-2*e-i)*o+e*n+t};return function(o){if(!1!==this.isPlaying&&(this.currentTime+=o*this.timeScale,0!==this.weight)){o=this.data.length;if(!0===this.loop&&this.currentTime>o)this.currentTime%=o,this.reset();else if(!1===this.loop&&this.currentTime>o){this.stop();return}o=0;for(var a=this.hierarchy.length;o<a;o++)for(var s=this.hierarchy[o],h=s.animationCache[this.data.name],l=0;3>l;l++){var c=this.keyTypes[l],u=h.prevKey[c],f=h.nextKey[c];if(f.time<=this.currentTime){u=this.data.hierarchy[o].keys[0];for(f=this.getNextKeyWith(c,o,1);f.time<this.currentTime&&f.index>u.index;)u=f,f=this.getNextKeyWith(c,o,f.index+1);h.prevKey[c]=u;h.nextKey[c]=f}s.matrixAutoUpdate=!0;s.matrixWorldNeedsUpdate=!0;var E=(this.currentTime-u.time)/(f.time-u.time),p=u[c],d=f[c];0>E&&(E=0);1<E&&(E=1);if("pos"===c)if(this.interpolationType===THREE.AnimationHandler.LINEAR)r.x=p[0]+(d[0]-p[0])*E,r.y=p[1]+(d[1]-p[1])*E,r.z=p[2]+(d[2]-p[2])*E,s instanceof THREE.Bone?(u=this.weight/(this.weight+s.accumulatedPosWeight),s.position.lerp(r,u),s.accumulatedPosWeight+=this.weight):s.position.copy(r);else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)e[0]=this.getPrevKeyWith("pos",o,u.index-1).pos,e[1]=p,e[2]=d,e[3]=this.getNextKeyWith("pos",o,f.index+1).pos,E=.33*E+.33,f=n(e,E),u=1,s instanceof THREE.Bone&&(u=this.weight/(this.weight+s.accumulatedPosWeight),s.accumulatedPosWeight+=this.weight),c=s.position,c.x+=(f[0]-c.x)*u,c.y+=(f[1]-c.y)*u,c.z+=(f[2]-c.z)*u,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(E=n(e,1.01*E),t.set(E[0],E[1],E[2]),t.sub(c),t.y=0,t.normalize(),E=Math.atan2(t.x,t.z),s.rotation.set(0,E,0))}else"rot"===c?(THREE.Quaternion.slerp(p,d,i,E),s instanceof THREE.Bone?0===s.accumulatedRotWeight?(s.quaternion.copy(i),s.accumulatedRotWeight=this.weight):(u=this.weight/(this.weight+s.accumulatedRotWeight),THREE.Quaternion.slerp(s.quaternion,i,s.quaternion,u),s.accumulatedRotWeight+=this.weight):s.quaternion.copy(i)):"scl"===c&&(r.x=p[0]+(d[0]-p[0])*E,r.y=p[1]+(d[1]-p[1])*E,r.z=p[2]+(d[2]-p[2])*E,s instanceof THREE.Bone?(u=this.weight/(this.weight+s.accumulatedSclWeight),s.scale.lerp(r,u),s.accumulatedSclWeight+=this.weight):s.scale.copy(r))}return!0}}}();THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r<i.length-1?r:i.length-1:r%i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<r?r:0:0<=r?r:r+i.length;0<=r;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]};THREE.KeyFrameAnimation=function(e){this.root=e.node;this.data=THREE.AnimationHandler.init(e);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;e=0;for(var t=this.hierarchy.length;e<t;e++){var r=this.data.hierarchy[e].sids,i=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&r){for(var n=0;n<r.length;n++){var o=r[n],a=this.getNextKeyWith(o,e,0);a&&a.apply(o)}i.matrixAutoUpdate=!1;this.data.hierarchy[e].node.updateMatrix();i.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(e){this.currentTime=void 0!==e?e:0;if(!1===this.isPlaying){this.isPlaying=!0;var t=this.hierarchy.length,r,i;for(e=0;e<t;e++)r=this.hierarchy[e],i=this.data.hierarchy[e],void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=r.matrix),r=this.data.hierarchy[e].keys,r.length&&(i.animationCache.prevKey=r[0],i.animationCache.nextKey=r[1],this.startTime=Math.min(r[0].time,this.startTime),this.endTime=Math.max(r[r.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;i.copy(t.matrix);t.matrix=i;delete r.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(e){if(!1!==this.isPlaying){this.currentTime+=e*this.timeScale;e=this.data.length;!0===this.loop&&this.currentTime>e&&(this.currentTime%=e);this.currentTime=Math.min(this.currentTime,e);e=0;for(var t=this.hierarchy.length;e<t;e++){var r=this.hierarchy[e],i=this.data.hierarchy[e],n=i.keys,i=i.animationCache;if(n.length){var o=i.prevKey,a=i.nextKey;if(a.time<=this.currentTime){for(;a.time<this.currentTime&&a.index>o.index;)o=a,a=n[o.index+1];i.prevKey=o;i.nextKey=a}a.time>=this.currentTime?o.interpolate(a,this.currentTime):o.interpolate(a,a.time);this.data.hierarchy[e].node.updateMatrix();r.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){t=this.data.hierarchy[t].keys;for(r%=t.length;r<t.length;r++)if(t[r].hasTarget(e))return t[r];return t[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){t=this.data.hierarchy[t].keys;for(r=0<=r?r:r+t.length;0<=r;r--)if(t[r].hasTarget(e))return t[r];return t[t.length-1]};THREE.MorphAnimation=function(e){this.mesh=e;this.frames=e.morphTargetInfluences.length;this.currentTime=0;this.duration=1e3;this.loop=!0;this.isPlaying=!1};THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var e=0,t=0;return function(r){if(!1!==this.isPlaying){this.currentTime+=r;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);r=this.duration/this.frames;var i=Math.floor(this.currentTime/r);i!=t&&(this.mesh.morphTargetInfluences[e]=0,this.mesh.morphTargetInfluences[t]=1,this.mesh.morphTargetInfluences[i]=0,e=t,t=i);this.mesh.morphTargetInfluences[i]=this.currentTime%r/r;this.mesh.morphTargetInfluences[e]=1-this.mesh.morphTargetInfluences[i]}}}()};THREE.BoxGeometry=function(e,t,r,i,n,o){function a(e,t,r,i,n,o,a,h){var l,c=s.widthSegments,u=s.heightSegments,f=n/2,E=o/2,p=s.vertices.length;if("x"===e&&"y"===t||"y"===e&&"x"===t)l="z";else if("x"===e&&"z"===t||"z"===e&&"x"===t)l="y",u=s.depthSegments;else if("z"===e&&"y"===t||"y"===e&&"z"===t)l="x",c=s.depthSegments;var d=c+1,m=u+1,g=n/c,T=o/u,v=new THREE.Vector3;v[l]=0<a?1:-1;for(n=0;n<m;n++)for(o=0;o<d;o++){var y=new THREE.Vector3;y[e]=(o*g-f)*r;y[t]=(n*T-E)*i;y[l]=a;s.vertices.push(y)}for(n=0;n<u;n++)for(o=0;o<c;o++)E=o+d*n,e=o+d*(n+1),t=o+1+d*(n+1),r=o+1+d*n,i=new THREE.Vector2(o/c,1-n/u),a=new THREE.Vector2(o/c,1-(n+1)/u),l=new THREE.Vector2((o+1)/c,1-(n+1)/u),f=new THREE.Vector2((o+1)/c,1-n/u),E=new THREE.Face3(E+p,e+p,r+p),E.normal.copy(v),E.vertexNormals.push(v.clone(),v.clone(),v.clone()),E.materialIndex=h,s.faces.push(E),s.faceVertexUvs[0].push([i,a,f]),E=new THREE.Face3(e+p,t+p,r+p),E.normal.copy(v),E.vertexNormals.push(v.clone(),v.clone(),v.clone()),E.materialIndex=h,s.faces.push(E),s.faceVertexUvs[0].push([a.clone(),l,f.clone()])}THREE.Geometry.call(this);this.parameters={width:e,height:t,depth:r,widthSegments:i,heightSegments:n,depthSegments:o};this.widthSegments=i||1;this.heightSegments=n||1;this.depthSegments=o||1;var s=this;i=e/2;n=t/2;o=r/2;a("z","y",-1,-1,r,t,i,0);a("z","y",1,-1,r,t,-i,1);a("x","z",1,1,e,r,n,2);a("x","z",1,-1,e,r,-n,3);a("x","y",1,-1,e,t,o,4);a("x","y",-1,-1,e,t,-o,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this);this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:i};e=e||50;t=void 0!==t?Math.max(3,t):8;r=void 0!==r?r:0;i=void 0!==i?i:2*Math.PI;var n,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);this.vertices.push(n);o.push(a);for(n=0;n<=t;n++){var s=new THREE.Vector3,h=r+n/t*i;s.x=e*Math.cos(h);s.y=e*Math.sin(h);this.vertices.push(s);o.push(new THREE.Vector2((s.x/e+1)/2,(s.y/e+1)/2))}r=new THREE.Vector3(0,0,1);for(n=1;n<=t;n++)this.faces.push(new THREE.Face3(n,n+1,0,[r.clone(),r.clone(),r.clone()])),this.faceVertexUvs[0].push([o[n].clone(),o[n+1].clone(),a.clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(e,t,r,i,n,o){console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry.");return new THREE.BoxGeometry(e,t,r,i,n,o)};THREE.CylinderGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this);this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:i,heightSegments:n,openEnded:o};e=void 0!==e?e:20;t=void 0!==t?t:20;r=void 0!==r?r:100;i=i||8;n=n||1;o=void 0!==o?o:!1;var a=r/2,s,h,l=[],c=[];for(h=0;h<=n;h++){var u=[],f=[],E=h/n,p=E*(t-e)+e;for(s=0;s<=i;s++){var d=s/i,m=new THREE.Vector3;m.x=p*Math.sin(d*Math.PI*2);m.y=-E*r+a;m.z=p*Math.cos(d*Math.PI*2);this.vertices.push(m);u.push(this.vertices.length-1);f.push(new THREE.Vector2(d,1-E))}l.push(u);c.push(f)}r=(t-e)/r;for(s=0;s<i;s++)for(0!==e?(u=this.vertices[l[0][s]].clone(),f=this.vertices[l[0][s+1]].clone()):(u=this.vertices[l[1][s]].clone(),f=this.vertices[l[1][s+1]].clone()),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*r).normalize(),f.setY(Math.sqrt(f.x*f.x+f.z*f.z)*r).normalize(),h=0;h<n;h++){var E=l[h][s],p=l[h+1][s],d=l[h+1][s+1],m=l[h][s+1],g=u.clone(),T=u.clone(),v=f.clone(),y=f.clone(),R=c[h][s].clone(),x=c[h+1][s].clone(),H=c[h+1][s+1].clone(),_=c[h][s+1].clone();this.faces.push(new THREE.Face3(E,p,m,[g,T,y]));this.faceVertexUvs[0].push([R,x,_]);this.faces.push(new THREE.Face3(p,d,m,[T.clone(),v,y.clone()]));this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}if(!1===o&&0<e)for(this.vertices.push(new THREE.Vector3(0,a,0)),s=0;s<i;s++)E=l[0][s],p=l[0][s+1],d=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=c[0][s].clone(),x=c[0][s+1].clone(),H=new THREE.Vector2(x.x,0),this.faces.push(new THREE.Face3(E,p,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);if(!1===o&&0<t)for(this.vertices.push(new THREE.Vector3(0,-a,0)),s=0;s<i;s++)E=l[h][s+1],p=l[h][s],d=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),R=c[h][s+1].clone(),x=c[h][s].clone(),H=new THREE.Vector2(x.x,1),this.faces.push(new THREE.Face3(E,p,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(e,t){"undefined"!==typeof e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.addShapeList(e,t),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;i<r;i++)this.addShape(e[i],t)};THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function r(e,t,r){t||console.log("die");return t.clone().multiplyScalar(r).add(e)}function i(e,t,r){var i=THREE.Math.sign,n=1,n=e.x-t.x,o=e.y-t.y,a=r.x-e.x,s=r.y-e.y,h=n*n+o*o;if(1e-10<Math.abs(n*s-o*a)){var l=Math.sqrt(h),i=Math.sqrt(a*a+s*s),h=t.x-o/l;t=t.y+n/l;a=((r.x-s/i-h)*s-(r.y+a/i-t)*a)/(n*s-o*a);r=h+n*a-e.x;e=t+o*a-e.y;n=r*r+e*e;if(2>=n)return new THREE.Vector2(r,e);n=Math.sqrt(n/2)}else e=!1,1e-10<n?1e-10<a&&(e=!0):-1e-10>n?-1e-10>a&&(e=!0):i(o)==i(s)&&(e=!0),e?(r=-o,e=n,n=Math.sqrt(h)):(r=n,e=o,n=Math.sqrt(h/2));return new THREE.Vector2(r/n,e/n)}function n(r,i){var n,o;for(N=r.length;0<=--N;){n=N;o=N-1;0>o&&(o=r.length-1);for(var a=0,s=E+2*c,a=0;a<s;a++){var h=z*a,l=z*(a+1),u=i+n+h,h=i+o+h,f=i+o+l,l=i+n+l,p=r,d=a,m=s,g=n,y=o,u=u+S,h=h+S,f=f+S,l=l+S;M.faces.push(new THREE.Face3(u,h,l,null,null,T));M.faces.push(new THREE.Face3(h,f,l,null,null,T));u=v.generateSideWallUV(M,e,p,t,u,h,f,l,d,m,g,y);M.faceVertexUvs[0].push([u[0],u[1],u[3]]);M.faceVertexUvs[0].push([u[1],u[2],u[3]])}}}function o(e,t,r){M.vertices.push(new THREE.Vector3(e,t,r))}function a(r,i,n,o){r+=S;i+=S;n+=S;M.faces.push(new THREE.Face3(r,i,n,null,null,g));r=o?v.generateBottomUV(M,e,t,r,i,n):v.generateTopUV(M,e,t,r,i,n);M.faceVertexUvs[0].push(r)}var s=void 0!==t.amount?t.amount:100,h=void 0!==t.bevelThickness?t.bevelThickness:6,l=void 0!==t.bevelSize?t.bevelSize:h-2,c=void 0!==t.bevelSegments?t.bevelSegments:3,u=void 0!==t.bevelEnabled?t.bevelEnabled:!0,f=void 0!==t.curveSegments?t.curveSegments:12,E=void 0!==t.steps?t.steps:1,p=t.extrudePath,d,m=!1,g=t.material,T=t.extrudeMaterial,v=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,y,R,x,H;p&&(d=p.getSpacedPoints(E),m=!0,u=!1,y=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(p,E,!1),R=new THREE.Vector3,x=new THREE.Vector3,H=new THREE.Vector3);u||(l=h=c=0);var _,b,w,M=this,S=this.vertices.length,p=e.extractPoints(f),f=p.shape,C=p.holes;if(p=!THREE.Shape.Utils.isClockWise(f)){f=f.reverse();b=0;for(w=C.length;b<w;b++)_=C[b],THREE.Shape.Utils.isClockWise(_)&&(C[b]=_.reverse());p=!1}var A=THREE.Shape.Utils.triangulateShape(f,C),L=f;b=0;for(w=C.length;b<w;b++)_=C[b],f=f.concat(_);var P,F,D,U,V,z=f.length,B,k=A.length,p=[],N=0;D=L.length;P=D-1;for(F=N+1;N<D;N++,P++,F++)P===D&&(P=0),F===D&&(F=0),p[N]=i(L[N],L[P],L[F]);var O=[],I,G=p.concat();b=0;for(w=C.length;b<w;b++){_=C[b];I=[];N=0;D=_.length;P=D-1;for(F=N+1;N<D;N++,P++,F++)P===D&&(P=0),F===D&&(F=0),I[N]=i(_[N],_[P],_[F]);O.push(I);G=G.concat(I)}for(P=0;P<c;P++){D=P/c;U=h*(1-D);F=l*Math.sin(D*Math.PI/2);N=0;for(D=L.length;N<D;N++)V=r(L[N],p[N],F),o(V.x,V.y,-U);b=0;for(w=C.length;b<w;b++)for(_=C[b],I=O[b],N=0,D=_.length;N<D;N++)V=r(_[N],I[N],F),o(V.x,V.y,-U)}F=l;for(N=0;N<z;N++)V=u?r(f[N],G[N],F):f[N],m?(x.copy(y.normals[0]).multiplyScalar(V.x),R.copy(y.binormals[0]).multiplyScalar(V.y),H.copy(d[0]).add(x).add(R),o(H.x,H.y,H.z)):o(V.x,V.y,0);for(D=1;D<=E;D++)for(N=0;N<z;N++)V=u?r(f[N],G[N],F):f[N],m?(x.copy(y.normals[D]).multiplyScalar(V.x),R.copy(y.binormals[D]).multiplyScalar(V.y),H.copy(d[D]).add(x).add(R),o(H.x,H.y,H.z)):o(V.x,V.y,s/E*D);for(P=c-1;0<=P;P--){D=P/c;U=h*(1-D);F=l*Math.sin(D*Math.PI/2);N=0;for(D=L.length;N<D;N++)V=r(L[N],p[N],F),o(V.x,V.y,s+U);b=0;for(w=C.length;b<w;b++)for(_=C[b],I=O[b],N=0,D=_.length;N<D;N++)V=r(_[N],I[N],F),m?o(V.x,V.y+d[E-1].y,d[E-1].x+U):o(V.x,V.y,s+U)}(function(){if(u){var e;e=0*z;for(N=0;N<k;N++)B=A[N],a(B[2]+e,B[1]+e,B[0]+e,!0);e=E+2*c;e*=z;for(N=0;N<k;N++)B=A[N],a(B[0]+e,B[1]+e,B[2]+e,!1)}else{for(N=0;N<k;N++)B=A[N],a(B[2],B[1],B[0],!0);for(N=0;N<k;N++)B=A[N],a(B[0]+z*E,B[1]+z*E,B[2]+z*E,!1)}})();(function(){var e=0;n(L,e);e+=L.length;b=0;for(w=C.length;b<w;b++)_=C[b],n(_,e),e+=_.length})()};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,n,o){t=e.vertices[n].x;n=e.vertices[n].y;r=e.vertices[o].x;o=e.vertices[o].y;return[new THREE.Vector2(e.vertices[i].x,e.vertices[i].y),new THREE.Vector2(t,n),new THREE.Vector2(r,o)]},generateBottomUV:function(e,t,r,i,n,o){return this.generateTopUV(e,t,r,i,n,o)},generateSideWallUV:function(e,t,r,i,n,o,a,s,h,l,c,u){t=e.vertices[n].x;r=e.vertices[n].y;n=e.vertices[n].z;i=e.vertices[o].x;h=e.vertices[o].y;o=e.vertices[o].z;l=e.vertices[a].x;c=e.vertices[a].y;a=e.vertices[a].z;u=e.vertices[s].x;var f=e.vertices[s].y;e=e.vertices[s].z;return.01>Math.abs(r-h)?[new THREE.Vector2(t,1-n),new THREE.Vector2(i,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(u,1-e)]:[new THREE.Vector2(r,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(f,1-e)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this);!1===e instanceof Array&&(e=[e]);this.addShapeList(e,t);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;r<i;r++)this.addShape(e[r],t);return this};THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r=t.material,i=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,n,o,a,s=this.vertices.length;n=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var h=n.shape,l=n.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),n=0,o=l.length;n<o;n++)a=l[n],THREE.Shape.Utils.isClockWise(a)&&(l[n]=a.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);n=0;for(o=l.length;n<o;n++)a=l[n],h=h.concat(a);l=h.length;o=c.length;for(n=0;n<l;n++)a=h[n],this.vertices.push(new THREE.Vector3(a.x,a.y,0));for(n=0;n<o;n++)l=c[n],h=l[0]+s,a=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,a,l,null,null,r)),this.faceVertexUvs[0].push(i.generateBottomUV(this,e,t,h,a,l))};THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this);t=t||12;r=r||0;i=i||2*Math.PI;for(var n=1/(e.length-1),o=1/t,a=0,s=t;a<=s;a++)for(var h=r+a*o*i,l=Math.cos(h),c=Math.sin(h),h=0,u=e.length;h<u;h++){var f=e[h],E=new THREE.Vector3;E.x=l*f.x-c*f.y;E.y=c*f.x+l*f.y;E.z=f.z;this.vertices.push(E)}r=e.length;a=0;for(s=t;a<s;a++)for(h=0,u=e.length-1;h<u;h++){t=c=h+r*a;i=c+r;var l=c+1+r,c=c+1,f=a*o,E=h*n,p=f+o,d=E+n;this.faces.push(new THREE.Face3(t,i,c));this.faceVertexUvs[0].push([new THREE.Vector2(f,E),new THREE.Vector2(p,E),new THREE.Vector2(f,d)]);this.faces.push(new THREE.Face3(i,l,c));this.faceVertexUvs[0].push([new THREE.Vector2(p,E),new THREE.Vector2(p,d),new THREE.Vector2(f,d)])}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(e,t,r,i){THREE.Geometry.call(this);this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};var n=e/2,o=t/2;r=r||1;i=i||1;var a=r+1,s=i+1,h=e/r,l=t/i,c=new THREE.Vector3(0,0,1);for(e=0;e<s;e++){var u=e*l-o;for(t=0;t<a;t++)this.vertices.push(new THREE.Vector3(t*h-n,-u,0))}for(e=0;e<i;e++)for(t=0;t<r;t++){var f=t+a*e,n=t+a*(e+1),o=t+1+a*(e+1),s=t+1+a*e,h=new THREE.Vector2(t/r,1-e/i),l=new THREE.Vector2(t/r,1-(e+1)/i),u=new THREE.Vector2((t+1)/r,1-(e+1)/i),E=new THREE.Vector2((t+1)/r,1-e/i),f=new THREE.Face3(f,n,s);f.normal.copy(c);f.vertexNormals.push(c.clone(),c.clone(),c.clone());this.faces.push(f);this.faceVertexUvs[0].push([h,l,E]);f=new THREE.Face3(n,o,s);f.normal.copy(c);f.vertexNormals.push(c.clone(),c.clone(),c.clone());this.faces.push(f);this.faceVertexUvs[0].push([l.clone(),u,E.clone()])}};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this);e=e||0;t=t||50;n=void 0!==n?n:0;o=void 0!==o?o:2*Math.PI;r=void 0!==r?Math.max(3,r):8;i=void 0!==i?Math.max(1,i):8;var a,s=[],h=e,l=(t-e)/i;for(e=0;e<i+1;e++){for(a=0;a<r+1;a++){var c=new THREE.Vector3,u=n+a/r*o;c.x=h*Math.cos(u);c.y=h*Math.sin(u);this.vertices.push(c);s.push(new THREE.Vector2((c.x/t+1)/2,(c.y/t+1)/2))}h+=l}t=new THREE.Vector3(0,0,1);for(e=0;e<i;e++)for(n=e*(r+1),a=0;a<r;a++)o=u=a+n,l=u+r+1,c=u+r+2,this.faces.push(new THREE.Face3(o,l,c,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]),o=u,l=u+r+2,c=u+1,this.faces.push(new THREE.Face3(o,l,c,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,h)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(e,t,r,i,n,o,a){THREE.Geometry.call(this);this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a};e=e||50;t=Math.max(3,Math.floor(t)||8);r=Math.max(2,Math.floor(r)||6);i=void 0!==i?i:0;n=void 0!==n?n:2*Math.PI;o=void 0!==o?o:0;a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;h<=r;h++){var u=[],f=[];for(s=0;s<=t;s++){var E=s/t,p=h/r,d=new THREE.Vector3;d.x=-e*Math.cos(i+E*n)*Math.sin(o+p*a);d.y=e*Math.cos(o+p*a);d.z=e*Math.sin(i+E*n)*Math.sin(o+p*a);this.vertices.push(d);u.push(this.vertices.length-1);f.push(new THREE.Vector2(E,1-p))}l.push(u);c.push(f)}for(h=0;h<r;h++)for(s=0;s<t;s++){i=l[h][s+1];n=l[h][s];o=l[h+1][s];a=l[h+1][s+1];var u=this.vertices[i].clone().normalize(),f=this.vertices[n].clone().normalize(),E=this.vertices[o].clone().normalize(),p=this.vertices[a].clone().normalize(),d=c[h][s+1].clone(),m=c[h][s].clone(),g=c[h+1][s].clone(),T=c[h+1][s+1].clone();Math.abs(this.vertices[i].y)===e?(d.x=(d.x+m.x)/2,this.faces.push(new THREE.Face3(i,o,a,[u,E,p])),this.faceVertexUvs[0].push([d,g,T])):Math.abs(this.vertices[o].y)===e?(g.x=(g.x+T.x)/2,this.faces.push(new THREE.Face3(i,n,o,[u,f,E])),this.faceVertexUvs[0].push([d,m,g])):(this.faces.push(new THREE.Face3(i,n,a,[u,f,p])),this.faceVertexUvs[0].push([d,m,T]),this.faces.push(new THREE.Face3(n,o,a,[f.clone(),E,p.clone()])),this.faceVertexUvs[0].push([m.clone(),g,T.clone()]))
}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,t){t=t||{};var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50;void 0===t.bevelThickness&&(t.bevelThickness=10);void 0===t.bevelSize&&(t.bevelSize=8);void 0===t.bevelEnabled&&(t.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,r,t)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(e,t,r,i,n){THREE.Geometry.call(this);this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,arc:n};e=e||100;t=t||40;r=r||8;i=i||6;n=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],h=0;h<=r;h++)for(var l=0;l<=i;l++){var c=l/i*n,u=h/r*Math.PI*2;o.x=e*Math.cos(c);o.y=e*Math.sin(c);var f=new THREE.Vector3;f.x=(e+t*Math.cos(u))*Math.cos(c);f.y=(e+t*Math.cos(u))*Math.sin(c);f.z=t*Math.sin(u);this.vertices.push(f);a.push(new THREE.Vector2(l/i,h/r));s.push(f.clone().sub(o).normalize())}for(h=1;h<=r;h++)for(l=1;l<=i;l++)e=(i+1)*h+l-1,t=(i+1)*(h-1)+l-1,n=(i+1)*(h-1)+l,o=(i+1)*h+l,c=new THREE.Face3(e,t,o,[s[e].clone(),s[t].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[e].clone(),a[t].clone(),a[o].clone()]),c=new THREE.Face3(t,n,o,[s[t].clone(),s[n].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[t].clone(),a[n].clone(),a[o].clone()]);this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(e,t,r,i,n,o,a){function s(e,t,r,i,n){var o=Math.cos(e),a=Math.sin(e);e*=t/r;t=Math.cos(e);o*=i*(2+t)*.5;a=i*(2+t)*a*.5;i=n*i*Math.sin(e)*.5;return new THREE.Vector3(o,a,i)}THREE.Geometry.call(this);this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,p:n,q:o,heightScale:a};e=e||100;t=t||40;r=r||64;i=i||8;n=n||2;o=o||3;a=a||1;for(var h=Array(r),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,f=0;f<r;++f){h[f]=Array(i);var E=f/r*2*n*Math.PI,p=s(E,o,n,e,a),E=s(E+.01,o,n,e,a);l.subVectors(E,p);c.addVectors(E,p);u.crossVectors(l,c);c.crossVectors(u,l);u.normalize();c.normalize();for(E=0;E<i;++E){var d=E/i*2*Math.PI,m=-t*Math.cos(d),d=t*Math.sin(d),g=new THREE.Vector3;g.x=p.x+m*c.x+d*u.x;g.y=p.y+m*c.y+d*u.y;g.z=p.z+m*c.z+d*u.z;h[f][E]=this.vertices.push(g)-1}}for(f=0;f<r;++f)for(E=0;E<i;++E)n=(f+1)%r,o=(E+1)%i,e=h[f][E],t=h[n][E],n=h[n][o],o=h[f][o],a=new THREE.Vector2(f/r,E/i),l=new THREE.Vector2((f+1)/r,E/i),c=new THREE.Vector2((f+1)/r,(E+1)/i),u=new THREE.Vector2(f/r,(E+1)/i),this.faces.push(new THREE.Face3(e,t,o)),this.faceVertexUvs[0].push([a,l,u]),this.faces.push(new THREE.Face3(t,n,o)),this.faceVertexUvs[0].push([l.clone(),c,u.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(e,t,r,i,n){THREE.Geometry.call(this);this.parameters={path:e,segments:t,radius:r,radialSegments:i,closed:n};t=t||64;r=r||1;i=i||8;n=n||!1;var o=[],a,s,h=t+1,l,c,u,f,E=new THREE.Vector3,p,d,m;p=new THREE.TubeGeometry.FrenetFrames(e,t,n);d=p.normals;m=p.binormals;this.tangents=p.tangents;this.normals=d;this.binormals=m;for(p=0;p<h;p++)for(o[p]=[],l=p/(h-1),f=e.getPointAt(l),a=d[p],s=m[p],l=0;l<i;l++)c=l/i*2*Math.PI,u=-r*Math.cos(c),c=r*Math.sin(c),E.copy(f),E.x+=u*a.x+c*s.x,E.y+=u*a.y+c*s.y,E.z+=u*a.z+c*s.z,o[p][l]=this.vertices.push(new THREE.Vector3(E.x,E.y,E.z))-1;for(p=0;p<t;p++)for(l=0;l<i;l++)h=n?(p+1)%t:p+1,E=(l+1)%i,e=o[p][l],r=o[h][l],h=o[h][E],E=o[p][E],d=new THREE.Vector2(p/t,l/i),m=new THREE.Vector2((p+1)/t,l/i),a=new THREE.Vector2((p+1)/t,(l+1)/i),s=new THREE.Vector2(p/t,(l+1)/i),this.faces.push(new THREE.Face3(e,r,E)),this.faceVertexUvs[0].push([d,m,s]),this.faces.push(new THREE.Face3(r,h,E)),this.faceVertexUvs[0].push([m.clone(),a,s.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(e,t,r){new THREE.Vector3;var i=new THREE.Vector3;new THREE.Vector3;var n=[],o=[],a=[],s=new THREE.Vector3,h=new THREE.Matrix4;t+=1;var l,c,u;this.tangents=n;this.normals=o;this.binormals=a;for(l=0;l<t;l++)c=l/(t-1),n[l]=e.getTangentAt(c),n[l].normalize();o[0]=new THREE.Vector3;a[0]=new THREE.Vector3;e=Number.MAX_VALUE;l=Math.abs(n[0].x);c=Math.abs(n[0].y);u=Math.abs(n[0].z);l<=e&&(e=l,i.set(1,0,0));c<=e&&(e=c,i.set(0,1,0));u<=e&&i.set(0,0,1);s.crossVectors(n[0],i).normalize();o[0].crossVectors(n[0],s);a[0].crossVectors(n[0],o[0]);for(l=1;l<t;l++)o[l]=o[l-1].clone(),a[l]=a[l-1].clone(),s.crossVectors(n[l-1],n[l]),1e-4<s.length()&&(s.normalize(),i=Math.acos(THREE.Math.clamp(n[l-1].dot(n[l]),-1,1)),o[l].applyMatrix4(h.makeRotationAxis(s,i))),a[l].crossVectors(n[l],o[l]);if(r)for(i=Math.acos(THREE.Math.clamp(o[0].dot(o[t-1]),-1,1)),i/=t-1,0<n[0].dot(s.crossVectors(o[0],o[t-1]))&&(i=-i),l=1;l<t;l++)o[l].applyMatrix4(h.makeRotationAxis(n[l],i*l)),a[l].crossVectors(n[l],o[l])};THREE.PolyhedronGeometry=function(e,t,r,i){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var r=Math.atan2(e.z,-e.x)/2/Math.PI+.5;e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;t.uv=new THREE.Vector2(r,1-e);return t}function o(e,t,r){var i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);h.faces.push(i);m.copy(e).add(t).add(r).divideScalar(3);i=Math.atan2(m.z,-m.x);h.faceVertexUvs[0].push([s(e.uv,e,i),s(t.uv,t,i),s(r.uv,r,i)])}function a(e,t){var r=Math.pow(2,t);Math.pow(4,t);for(var i=n(h.vertices[e.a]),a=n(h.vertices[e.b]),s=n(h.vertices[e.c]),l=[],c=0;c<=r;c++){l[c]=[];for(var u=n(i.clone().lerp(s,c/r)),f=n(a.clone().lerp(s,c/r)),E=r-c,p=0;p<=E;p++)l[c][p]=0==p&&c==r?u:n(u.clone().lerp(f,p/E))}for(c=0;c<r;c++)for(p=0;p<2*(r-c)-1;p++)i=Math.floor(p/2),0==p%2?o(l[c][i+1],l[c+1][i],l[c][i]):o(l[c][i+1],l[c+1][i+1],l[c+1][i])}function s(e,t,r){0>r&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y));return e.clone()}THREE.Geometry.call(this);r=r||1;i=i||0;for(var h=this,l=0,c=e.length;l<c;l+=3)n(new THREE.Vector3(e[l],e[l+1],e[l+2]));e=this.vertices;for(var u=[],f=l=0,c=t.length;l<c;l+=3,f++){var E=e[t[l]],p=e[t[l+1]],d=e[t[l+2]];u[f]=new THREE.Face3(E.index,p.index,d.index,[E.clone(),p.clone(),d.clone()])}for(var m=new THREE.Vector3,l=0,c=u.length;l<c;l++)a(u[l],i);l=0;for(c=this.faceVertexUvs[0].length;l<c;l++)t=this.faceVertexUvs[0][l],i=t[0].x,e=t[1].x,u=t[2].x,f=Math.max(i,Math.max(e,u)),E=Math.min(i,Math.min(e,u)),.9<f&&.1>E&&(.2>i&&(t[0].x+=1),.2>e&&(t[1].x+=1),.2>u&&(t[2].x+=1));l=0;for(c=this.vertices.length;l<c;l++)this.vertices[l].multiplyScalar(r);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var r=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this);var i=this.vertices,n=this.faces,o=this.faceVertexUvs[0],a,s,h,l,c=t+1;for(a=0;a<=r;a++)for(l=a/r,s=0;s<=t;s++)h=s/t,h=e(h,l),i.push(h);var u,f,E,p;for(a=0;a<r;a++)for(s=0;s<t;s++)e=a*c+s,i=a*c+s+1,l=(a+1)*c+s+1,h=(a+1)*c+s,u=new THREE.Vector2(s/t,a/r),f=new THREE.Vector2((s+1)/t,a/r),E=new THREE.Vector2((s+1)/t,(a+1)/r),p=new THREE.Vector2(s/t,(a+1)/r),n.push(new THREE.Face3(e,i,h)),o.push([u,f,p]),n.push(new THREE.Face3(i,l,h)),o.push([f.clone(),E,p.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.BufferAttribute(t,3));e.addAttribute("color",new THREE.BufferAttribute(r,3));t=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,e,t,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(){var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var t=new THREE.CylinderGeometry(0,.5,1,5,1);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));return function(r,i,n,o,a,s){THREE.Object3D.call(this);void 0===o&&(o=16776960);void 0===n&&(n=1);void 0===a&&(a=.2*n);void 0===s&&(s=.2*a);this.position.copy(i);this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:o}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:o}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(r);this.setLength(n,a,s)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3,t;return function(r){.99999<r.y?this.quaternion.set(0,0,0,1):-.99999>r.y?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}();THREE.ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e);void 0===r&&(r=.2*t);this.line.scale.set(1,e,1);this.line.updateMatrix();this.cone.scale.set(r,t,r);this.cone.position.y=e;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e);this.cone.material.color.set(e)};THREE.BoxHelper=function(e){var t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==e&&this.update(e)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var r=t.boundingBox.min,t=t.boundingBox.max,i=this.geometry.attributes.position.array;i[0]=t.x;i[1]=t.y;i[2]=t.z;i[3]=r.x;i[4]=t.y;i[5]=t.z;i[6]=r.x;i[7]=t.y;i[8]=t.z;i[9]=r.x;i[10]=r.y;i[11]=t.z;i[12]=r.x;i[13]=r.y;i[14]=t.z;i[15]=t.x;i[16]=r.y;i[17]=t.z;i[18]=t.x;i[19]=r.y;i[20]=t.z;i[21]=t.x;i[22]=t.y;i[23]=t.z;i[24]=t.x;i[25]=t.y;i[26]=r.z;i[27]=r.x;i[28]=t.y;i[29]=r.z;i[30]=r.x;i[31]=t.y;i[32]=r.z;i[33]=r.x;i[34]=r.y;i[35]=r.z;i[36]=r.x;i[37]=r.y;i[38]=r.z;i[39]=t.x;i[40]=r.y;i[41]=r.z;i[42]=t.x;i[43]=r.y;i[44]=r.z;i[45]=t.x;i[46]=t.y;i[47]=r.z;i[48]=t.x;i[49]=t.y;i[50]=t.z;i[51]=t.x;i[52]=t.y;i[53]=r.z;i[54]=r.x;i[55]=t.y;i[56]=t.z;i[57]=r.x;i[58]=t.y;i[59]=r.z;i[60]=r.x;i[61]=r.y;i[62]=t.z;i[63]=r.x;i[64]=r.y;i[65]=r.z;i[66]=t.x;i[67]=r.y;i[68]=t.z;i[69]=t.x;i[70]=r.y;i[71]=r.z;this.geometry.attributes.position.needsUpdate=!0;this.geometry.computeBoundingSphere();this.matrixAutoUpdate=!1;this.matrixWorld=e.matrixWorld};THREE.BoundingBoxHelper=function(e,t){var r=void 0!==t?t:8947848;this.object=e;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(e){function t(e,t,i){r(e,i);r(t,i)}function r(e,t){i.vertices.push(new THREE.Vector3);i.colors.push(new THREE.Color(t));void 0===o[e]&&(o[e]=[]);o[e].push(i.vertices.length-1)}var i=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};t("n1","n2",16755200);t("n2","n4",16755200);t("n4","n3",16755200);t("n3","n1",16755200);t("f1","f2",16755200);t("f2","f4",16755200);t("f4","f3",16755200);t("f3","f1",16755200);t("n1","f1",16755200);t("n2","f2",16755200);t("n3","f3",16755200);t("n4","f4",16755200);t("p","n1",16711680);t("p","n2",16711680);t("p","n3",16711680);t("p","n4",16711680);t("u1","u2",43775);t("u2","u3",43775);t("u3","u1",43775);t("c","t",16777215);t("p","c",3355443);t("cn1","cn2",3355443);t("cn3","cn4",3355443);t("cf1","cf2",3355443);t("cf3","cf4",3355443);THREE.Line.call(this,i,n,THREE.LinePieces);this.camera=e;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=o;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,r=new THREE.Projector;return function(){function i(i,o,a,s){e.set(o,a,s);r.unprojectVector(e,t);i=n.pointMap[i];if(void 0!==i)for(o=0,a=i.length;o<a;o++)n.geometry.vertices[i[o]].copy(e)}var n=this;t.projectionMatrix.copy(this.camera.projectionMatrix);i("c",0,0,-1);i("t",0,0,1);i("n1",-1,-1,-1);i("n2",1,-1,-1);i("n3",-1,1,-1);i("n4",1,1,-1);i("f1",-1,-1,1);i("f2",1,-1,1);i("f3",-1,1,1);i("f4",1,1,1);i("u1",.7,1.1,-1);i("u2",-.7,1.1,-1);i("u3",0,2,-1);i("cf1",-1,0,1);i("cf2",1,0,1);i("cf3",0,-1,1);i("cf4",0,1,1);i("cn1",-1,0,-1);i("cn2",1,0,-1);i("cn3",0,-1,-1);i("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;t=t||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(r,i);this.add(this.lightPlane);r=new THREE.Geometry;r.vertices.push(new THREE.Vector3,new THREE.Vector3);i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(r,i);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);r.subVectors(t,e);this.lightPlane.lookAt(r);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(r);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],n={},o=function(e,t){return e-t},a=["a","b","c"],s=new THREE.BufferGeometry,h=e.geometry.clone();h.mergeVertices();h.computeFaceNormals();for(var l=h.vertices,h=h.faces,c=0,u=0,f=h.length;u<f;u++)for(var E=h[u],p=0;3>p;p++){i[0]=E[a[p]];i[1]=E[a[(p+1)%3]];i.sort(o);var d=i.toString();void 0===n[d]?(n[d]={vert1:i[0],vert2:i[1],face1:u,face2:void 0},c++):n[d].face2=u}s.addAttribute("position",new THREE.Float32Attribute(6*c,3));i=s.attributes.position.array;o=0;for(d in n)if(a=n[d],void 0===a.face2||.9999>h[a.face1].normal.dot(h[a.face2].normal))c=l[a.vert1],i[o++]=c.x,i[o++]=c.y,i[o++]=c.z,c=l[a.vert2],i[o++]=c.x,i[o++]=c.y,i[o++]=c.z;THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=e.matrixWorld};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper=function(e,t,r,i){this.object=e;this.size=void 0!==t?t:1;e=void 0!==r?r:16776960;i=void 0!==i?i:1;t=new THREE.Geometry;r=0;for(var n=this.object.geometry.faces.length;r<n;r++)t.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:e,linewidth:i}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(){var e=this.geometry.vertices,t=this.object,r=t.geometry.vertices,i=t.geometry.faces,n=t.matrixWorld;t.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(n);for(var o=t=0,a=i.length;t<a;t++,o+=2){var s=i[t];e[o].copy(r[s.a]).add(r[s.b]).add(r[s.c]).divideScalar(3).applyMatrix4(n);e[o+1].copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[o])}this.geometry.verticesNeedUpdate=!0;return this};THREE.GridHelper=function(e,t){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var n=-e;n<=e;n+=t){r.vertices.push(new THREE.Vector3(-e,0,n),new THREE.Vector3(e,0,n),new THREE.Vector3(n,0,-e),new THREE.Vector3(n,0,e));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.Line.call(this,r,i,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e);this.color2.set(t);this.geometry.colorsNeedUpdate=!0};THREE.HemisphereLightHelper=function(e,t,r,i){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];e=new THREE.SphereGeometry(t,4,2);e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(t=0;8>t;t++)e.faces[t].color=this.colors[4>t?0:1];t=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(e,t);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(e,t){this.light=e;this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,r,i);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new THREE.Geometry,r=0;r<this.bones.length;r++)this.bones[r].parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)));r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,t,r,THREE.LinePieces);this.root=e;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof THREE.Bone&&t.push(e);for(var r=0;r<e.children.length;r++)t.push.apply(t,this.getBoneList(e.children[r]));return t};THREE.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(r.multiplyMatrices(t,o.matrixWorld),e.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(t,o.parent.matrixWorld),e.vertices[i+1].setFromMatrixPosition(r),i+=2)}e.verticesNeedUpdate=!0;e.computeBoundingSphere()};THREE.SpotLightHelper=function(e){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;e=new THREE.CylinderGeometry(0,1,1,8,1,!0);e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r);e.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(t.sub(e));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(e,t,r,i){this.object=e;this.size=void 0!==t?t:1;t=void 0!==r?r:16711680;i=void 0!==i?i:1;r=new THREE.Geometry;e=e.geometry.faces;for(var n=0,o=e.length;n<o;n++)for(var a=0,s=e[n].vertexNormals.length;a<s;a++)r.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:t,linewidth:i}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){e=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var r=this.geometry.vertices,i=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;s<h;s++)for(var l=n[s],c=0,u=l.vertexNormals.length;c<u;c++){var f=l.vertexNormals[c];r[a].copy(i[l[e[c]]]).applyMatrix4(o);t.copy(f).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);t.add(r[a]);a+=1;r[a].copy(t);a+=1}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.VertexTangentsHelper=function(e,t,r,i){this.object=e;this.size=void 0!==t?t:1;t=void 0!==r?r:255;i=void 0!==i?i:1;r=new THREE.Geometry;e=e.geometry.faces;for(var n=0,o=e.length;n<o;n++)for(var a=0,s=e[n].vertexTangents.length;a<s;a++)r.vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:t,linewidth:i}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){e=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var r=this.geometry.vertices,i=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;s<h;s++)for(var l=n[s],c=0,u=l.vertexTangents.length;c<u;c++){var f=l.vertexTangents[c];r[a].copy(i[l[e[c]]]).applyMatrix4(o);t.copy(f).transformDirection(o).multiplyScalar(this.size);t.add(r[a]);a+=1;r[a].copy(t);a+=1}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.WireframeHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],n={},o=function(e,t){return e-t},a=["a","b","c"],s=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){for(var h=e.geometry.vertices,l=e.geometry.faces,c=0,u=new Uint32Array(6*l.length),f=0,E=l.length;f<E;f++)for(var p=l[f],d=0;3>d;d++){i[0]=p[a[d]];i[1]=p[a[(d+1)%3]];i.sort(o);var m=i.toString();void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}i=new Float32Array(6*c);f=0;for(E=c;f<E;f++)for(d=0;2>d;d++)c=h[u[2*f+d]],a=6*f+3*d,i[a+0]=c.x,i[a+1]=c.y,i[a+2]=c.z;s.addAttribute("position",new THREE.BufferAttribute(i,3))}else if(e.geometry instanceof THREE.BufferGeometry){if(void 0!==e.geometry.attributes.index){for(var h=e.geometry.attributes.position.array,E=e.geometry.attributes.index.array,l=e.geometry.offsets,c=0,u=new Uint32Array(2*E.length),p=0,g=l.length;p<g;++p)for(var d=l[p].start,m=l[p].count,a=l[p].index,f=d,T=d+m;f<T;f+=3)for(d=0;3>d;d++)i[0]=a+E[f+d],i[1]=a+E[f+(d+1)%3],i.sort(o),m=i.toString(),void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++);i=new Float32Array(6*c);f=0;for(E=c;f<E;f++)for(d=0;2>d;d++)a=6*f+3*d,c=3*u[2*f+d],i[a+0]=h[c],i[a+1]=h[c+1],i[a+2]=h[c+2]}else for(h=e.geometry.attributes.position.array,c=h.length/3,u=c/3,i=new Float32Array(6*c),f=0,E=u;f<E;f++)for(d=0;3>d;d++)a=18*f+6*d,u=9*f+3*d,i[a+0]=h[u],i[a+1]=h[u+1],i[a+2]=h[u+2],c=9*f+(d+1)%3*3,i[a+3]=h[c],i[a+4]=h[c+1],i[a+5]=h[c+2];s.addAttribute("position",new THREE.BufferAttribute(i,3))}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=e.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(e){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(e,t,r,i,n){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==e&&this.add(e,t,r,i,n)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(e,t,r,i,n,o){void 0===t&&(t=-1);void 0===r&&(r=0);void 0===o&&(o=1);void 0===n&&(n=new THREE.Color(16777215));void 0===i&&(i=THREE.NormalBlending);r=Math.min(r,Math.max(0,r));this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:i})};THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length,r,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;e<t;e++)r=this.lensFlares[e],r.x=this.positionScreen.x+i*r.distance,r.y=this.positionScreen.y+n*r.distance,r.wantedRotation=r.x*Math.PI*.25,r.rotation+=.25*(r.wantedRotation-r.rotation)};THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t);this.animationsMap={};this.animationsList=[];var r=this.geometry.morphTargets.length;this.createAnimation("__default",0,r-1,r/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){t={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=t;this.animationsList.push(t)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)_?(\d+)/,r,i={},n=this.geometry,o=0,a=n.morphTargets.length;o<a;o++){var s=n.morphTargets[o].name.match(t);if(s&&1<s.length){var h=s[1];i[h]||(i[h]={start:Infinity,end:-Infinity});s=i[h];o<s.start&&(s.start=o);o>s.end&&(s.end=o);r||(r=h)}}for(h in i)s=i[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=r};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){if(e=this.animationsMap[e])e.direction=1,e.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){if(e=this.animationsMap[e])e.direction=-1,e.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;if(e=this.animationsMap[e])t=e.time;return t};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;if(e=this.animationsMap[e])t=e.duration;return t};THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(e){if(e=this.animationsMap[e])e.active=!1};THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;t<r;t++){var i=this.animationsList[t];if(i.active){var n=i.duration/i.length;i.time+=i.direction*e;if(i.mirroredLoop){if(i.time>i.duration||0>i.time)i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),0>i.time&&(i.time=0,i.directionBackwards=!1)}else i.time%=i.duration,0>i.time&&(i.time+=i.duration);var o=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o);n=i.time%n/n;i.directionBackwards&&(n=1-n);this.morphTargetInfluences[i.currentFrame]=n*a;this.morphTargetInfluences[i.lastFrame]=(1-n)*a}}};THREE.LensFlarePlugin=function(){function e(e,t){var i=r.createProgram(),n=r.createShader(r.FRAGMENT_SHADER),o=r.createShader(r.VERTEX_SHADER),a="precision "+t+" float;\n";r.shaderSource(n,a+e.fragmentShader);r.shaderSource(o,a+e.vertexShader);r.compileShader(n);r.compileShader(o);r.attachShader(i,n);r.attachShader(i,o);r.linkProgram(i);return i}var t=[],r,i,n,o,a,s,h,l,c,u,f,E,p;this.init=function(t){r=t.context;i=t;n=t.getPrecision();o=new Float32Array(16);a=new Uint16Array(6);t=0;o[t++]=-1;o[t++]=-1;o[t++]=0;o[t++]=0;o[t++]=1;o[t++]=-1;o[t++]=1;o[t++]=0;o[t++]=1;o[t++]=1;o[t++]=1;o[t++]=1;o[t++]=-1;o[t++]=1;o[t++]=0;o[t++]=1;t=0;a[t++]=0;a[t++]=1;a[t++]=2;a[t++]=0;a[t++]=2;a[t++]=3;s=r.createBuffer();h=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,s);r.bufferData(r.ARRAY_BUFFER,o,r.STATIC_DRAW);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,h);r.bufferData(r.ELEMENT_ARRAY_BUFFER,a,r.STATIC_DRAW);l=r.createTexture();c=r.createTexture();r.bindTexture(r.TEXTURE_2D,l);r.texImage2D(r.TEXTURE_2D,0,r.RGB,16,16,0,r.RGB,r.UNSIGNED_BYTE,null);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST);r.bindTexture(r.TEXTURE_2D,c);r.texImage2D(r.TEXTURE_2D,0,r.RGBA,16,16,0,r.RGBA,r.UNSIGNED_BYTE,null);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST);0>=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(u=!1,f=e(THREE.ShaderFlares.lensFlare,n)):(u=!0,f=e(THREE.ShaderFlares.lensFlareVertexTexture,n));E={};p={};E.vertex=r.getAttribLocation(f,"position");
E.uv=r.getAttribLocation(f,"uv");p.renderType=r.getUniformLocation(f,"renderType");p.map=r.getUniformLocation(f,"map");p.occlusionMap=r.getUniformLocation(f,"occlusionMap");p.opacity=r.getUniformLocation(f,"opacity");p.color=r.getUniformLocation(f,"color");p.scale=r.getUniformLocation(f,"scale");p.rotation=r.getUniformLocation(f,"rotation");p.screenPosition=r.getUniformLocation(f,"screenPosition")};this.render=function(e,n,o,a){t.length=0;e.traverseVisible(function(e){e instanceof THREE.LensFlare&&t.push(e)});if(0!==t.length){e=new THREE.Vector3;var d=a/o,m=.5*o,g=.5*a,T=16/a,v=new THREE.Vector2(T*d,T),y=new THREE.Vector3(1,1,0),R=new THREE.Vector2(1,1),x=p,T=E;r.useProgram(f);r.enableVertexAttribArray(E.vertex);r.enableVertexAttribArray(E.uv);r.uniform1i(x.occlusionMap,0);r.uniform1i(x.map,1);r.bindBuffer(r.ARRAY_BUFFER,s);r.vertexAttribPointer(T.vertex,2,r.FLOAT,!1,16,0);r.vertexAttribPointer(T.uv,2,r.FLOAT,!1,16,8);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,h);r.disable(r.CULL_FACE);r.depthMask(!1);for(var H=0,_=t.length;H<_;H++){T=16/a;v.set(T*d,T);var b=t[H];e.set(b.matrixWorld.elements[12],b.matrixWorld.elements[13],b.matrixWorld.elements[14]);e.applyMatrix4(n.matrixWorldInverse);e.applyProjection(n.projectionMatrix);y.copy(e);R.x=y.x*m+m;R.y=y.y*g+g;if(u||0<R.x&&R.x<o&&0<R.y&&R.y<a){r.activeTexture(r.TEXTURE1);r.bindTexture(r.TEXTURE_2D,l);r.copyTexImage2D(r.TEXTURE_2D,0,r.RGB,R.x-8,R.y-8,16,16,0);r.uniform1i(x.renderType,0);r.uniform2f(x.scale,v.x,v.y);r.uniform3f(x.screenPosition,y.x,y.y,y.z);r.disable(r.BLEND);r.enable(r.DEPTH_TEST);r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0);r.activeTexture(r.TEXTURE0);r.bindTexture(r.TEXTURE_2D,c);r.copyTexImage2D(r.TEXTURE_2D,0,r.RGBA,R.x-8,R.y-8,16,16,0);r.uniform1i(x.renderType,1);r.disable(r.DEPTH_TEST);r.activeTexture(r.TEXTURE1);r.bindTexture(r.TEXTURE_2D,l);r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0);b.positionScreen.copy(y);b.customUpdateCallback?b.customUpdateCallback(b):b.updateLensFlares();r.uniform1i(x.renderType,2);r.enable(r.BLEND);for(var w=0,M=b.lensFlares.length;w<M;w++){var S=b.lensFlares[w];.001<S.opacity&&.001<S.scale&&(y.x=S.x,y.y=S.y,y.z=S.z,T=S.size*S.scale/a,v.x=T*d,v.y=T,r.uniform3f(x.screenPosition,y.x,y.y,y.z),r.uniform2f(x.scale,v.x,v.y),r.uniform1f(x.rotation,S.rotation),r.uniform1f(x.opacity,S.opacity),r.uniform3f(x.color,S.color.r,S.color.g,S.color.b),i.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),i.setTexture(S.texture,1),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0))}}}r.enable(r.CULL_FACE);r.enable(r.DEPTH_TEST);r.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){function e(t,r,i){if(r.visible){var n=t.__webglObjects[r.id];if(n&&r.castShadow&&(!1===r.frustumCulled||!0===s.intersectsObject(r)))for(var o=0,a=n.length;o<a;o++){var h=n[o];r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld);f.push(h)}o=0;for(a=r.children.length;o<a;o++)e(t,r.children[o],i)}}var t,r,i,n,o,a,s=new THREE.Frustum,h=new THREE.Matrix4,l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,f=[];this.init=function(e){t=e.context;r=e;e=THREE.ShaderLib.depthRGBA;var s=THREE.UniformsUtils.clone(e.uniforms);i=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:s});n=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:s,morphTargets:!0});o=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:s,skinning:!0});a=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:s,morphTargets:!0,skinning:!0});i._shadowPass=!0;n._shadowPass=!0;o._shadowPass=!0;a._shadowPass=!0};this.render=function(e,t){r.shadowMapEnabled&&r.shadowMapAutoUpdate&&this.update(e,t)};this.update=function(E,p){var d,m,g,T,v,y,R,x,H=[];T=0;t.clearColor(1,1,1,1);t.disable(t.BLEND);t.enable(t.CULL_FACE);t.frontFace(t.CCW);r.shadowMapCullFace===THREE.CullFaceFront?t.cullFace(t.FRONT):t.cullFace(t.BACK);r.setDepthTest(!0);d=0;for(m=E.__lights.length;d<m;d++)if(g=E.__lights[d],g.castShadow)if(g instanceof THREE.DirectionalLight&&g.shadowCascade)for(v=0;v<g.shadowCascadeCount;v++){var _;if(g.shadowCascadeArray[v])_=g.shadowCascadeArray[v];else{R=g;var b=v;_=new THREE.DirectionalLight;_.isVirtual=!0;_.onlyShadow=!0;_.castShadow=!0;_.shadowCameraNear=R.shadowCameraNear;_.shadowCameraFar=R.shadowCameraFar;_.shadowCameraLeft=R.shadowCameraLeft;_.shadowCameraRight=R.shadowCameraRight;_.shadowCameraBottom=R.shadowCameraBottom;_.shadowCameraTop=R.shadowCameraTop;_.shadowCameraVisible=R.shadowCameraVisible;_.shadowDarkness=R.shadowDarkness;_.shadowBias=R.shadowCascadeBias[b];_.shadowMapWidth=R.shadowCascadeWidth[b];_.shadowMapHeight=R.shadowCascadeHeight[b];_.pointsWorld=[];_.pointsFrustum=[];x=_.pointsWorld;y=_.pointsFrustum;for(var w=0;8>w;w++)x[w]=new THREE.Vector3,y[w]=new THREE.Vector3;x=R.shadowCascadeNearZ[b];R=R.shadowCascadeFarZ[b];y[0].set(-1,-1,x);y[1].set(1,-1,x);y[2].set(-1,1,x);y[3].set(1,1,x);y[4].set(-1,-1,R);y[5].set(1,-1,R);y[6].set(-1,1,R);y[7].set(1,1,R);_.originalCamera=p;y=new THREE.Gyroscope;y.position.copy(g.shadowCascadeOffset);y.add(_);y.add(_.target);p.add(y);g.shadowCascadeArray[v]=_;console.log("Created virtualLight",_)}b=g;x=v;R=b.shadowCascadeArray[x];R.position.copy(b.position);R.target.position.copy(b.target.position);R.lookAt(R.target);R.shadowCameraVisible=b.shadowCameraVisible;R.shadowDarkness=b.shadowDarkness;R.shadowBias=b.shadowCascadeBias[x];y=b.shadowCascadeNearZ[x];b=b.shadowCascadeFarZ[x];R=R.pointsFrustum;R[0].z=y;R[1].z=y;R[2].z=y;R[3].z=y;R[4].z=b;R[5].z=b;R[6].z=b;R[7].z=b;H[T]=_;T++}else H[T]=g,T++;d=0;for(m=H.length;d<m;d++){g=H[d];g.shadowMap||(v=THREE.LinearFilter,r.shadowMapType===THREE.PCFSoftShadowMap&&(v=THREE.NearestFilter),g.shadowMap=new THREE.WebGLRenderTarget(g.shadowMapWidth,g.shadowMapHeight,{minFilter:v,magFilter:v,format:THREE.RGBAFormat}),g.shadowMapSize=new THREE.Vector2(g.shadowMapWidth,g.shadowMapHeight),g.shadowMatrix=new THREE.Matrix4);if(!g.shadowCamera){if(g instanceof THREE.SpotLight)g.shadowCamera=new THREE.PerspectiveCamera(g.shadowCameraFov,g.shadowMapWidth/g.shadowMapHeight,g.shadowCameraNear,g.shadowCameraFar);else if(g instanceof THREE.DirectionalLight)g.shadowCamera=new THREE.OrthographicCamera(g.shadowCameraLeft,g.shadowCameraRight,g.shadowCameraTop,g.shadowCameraBottom,g.shadowCameraNear,g.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}E.add(g.shadowCamera);!0===E.autoUpdate&&E.updateMatrixWorld()}g.shadowCameraVisible&&!g.cameraHelper&&(g.cameraHelper=new THREE.CameraHelper(g.shadowCamera),g.shadowCamera.add(g.cameraHelper));if(g.isVirtual&&_.originalCamera==p){v=p;T=g.shadowCamera;y=g.pointsFrustum;R=g.pointsWorld;l.set(Infinity,Infinity,Infinity);c.set(-Infinity,-Infinity,-Infinity);for(b=0;8>b;b++)x=R[b],x.copy(y[b]),THREE.ShadowMapPlugin.__projector.unprojectVector(x,v),x.applyMatrix4(T.matrixWorldInverse),x.x<l.x&&(l.x=x.x),x.x>c.x&&(c.x=x.x),x.y<l.y&&(l.y=x.y),x.y>c.y&&(c.y=x.y),x.z<l.z&&(l.z=x.z),x.z>c.z&&(c.z=x.z);T.left=l.x;T.right=c.x;T.top=c.y;T.bottom=l.y;T.updateProjectionMatrix()}T=g.shadowMap;y=g.shadowMatrix;v=g.shadowCamera;v.position.setFromMatrixPosition(g.matrixWorld);u.setFromMatrixPosition(g.target.matrixWorld);v.lookAt(u);v.updateMatrixWorld();v.matrixWorldInverse.getInverse(v.matrixWorld);g.cameraHelper&&(g.cameraHelper.visible=g.shadowCameraVisible);g.shadowCameraVisible&&g.cameraHelper.update();y.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);y.multiply(v.projectionMatrix);y.multiply(v.matrixWorldInverse);h.multiplyMatrices(v.projectionMatrix,v.matrixWorldInverse);s.setFromMatrix(h);r.setRenderTarget(T);r.clear();f.length=0;e(E,E,v);g=0;for(T=f.length;g<T;g++)R=f[g],y=R.object,R=R.buffer,b=y.material instanceof THREE.MeshFaceMaterial?y.material.materials[0]:y.material,x=void 0!==y.geometry.morphTargets&&0<y.geometry.morphTargets.length&&b.morphTargets,w=y instanceof THREE.SkinnedMesh&&b.skinning,x=y.customDepthMaterial?y.customDepthMaterial:w?x?a:o:x?n:i,r.setMaterialFaces(b),R instanceof THREE.BufferGeometry?r.renderBufferDirect(v,E.__lights,null,x,R,y):r.renderBuffer(v,E.__lights,null,x,R,y);b=E.__webglObjectsImmediate;g=0;for(T=b.length;g<T;g++)R=b[g],y=R.object,y.visible&&y.castShadow&&(y._modelViewMatrix.multiplyMatrices(v.matrixWorldInverse,y.matrixWorld),r.renderImmediateObject(v,E.__lights,null,i,y))}d=r.getClearColor();m=r.getClearAlpha();t.clearColor(d.r,d.g,d.b,m);t.enable(t.BLEND);r.shadowMapCullFace===THREE.CullFaceFront&&t.cullFace(t.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){var e,t,r,i,n,o,a,s,h,l,c,u,f,E,p,d,m;function g(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var T,v,y,R=[],x,H,_,b,w;this.init=function(g){T=g.context;v=g;x=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]);H=new Uint16Array([0,1,2,0,2,3]);_=T.createBuffer();b=T.createBuffer();T.bindBuffer(T.ARRAY_BUFFER,_);T.bufferData(T.ARRAY_BUFFER,x,T.STATIC_DRAW);T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,b);T.bufferData(T.ELEMENT_ARRAY_BUFFER,H,T.STATIC_DRAW);g=T.createProgram();var R=T.createShader(T.VERTEX_SHADER),M=T.createShader(T.FRAGMENT_SHADER);T.shaderSource(R,["precision "+v.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));T.shaderSource(M,["precision "+v.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));T.compileShader(R);T.compileShader(M);T.attachShader(g,R);T.attachShader(g,M);T.linkProgram(g);w=g;d=T.getAttribLocation(w,"position");m=T.getAttribLocation(w,"uv");e=T.getUniformLocation(w,"uvOffset");t=T.getUniformLocation(w,"uvScale");r=T.getUniformLocation(w,"rotation");i=T.getUniformLocation(w,"scale");n=T.getUniformLocation(w,"color");o=T.getUniformLocation(w,"map");a=T.getUniformLocation(w,"opacity");s=T.getUniformLocation(w,"modelViewMatrix");h=T.getUniformLocation(w,"projectionMatrix");l=T.getUniformLocation(w,"fogType");c=T.getUniformLocation(w,"fogDensity");u=T.getUniformLocation(w,"fogNear");f=T.getUniformLocation(w,"fogFar");E=T.getUniformLocation(w,"fogColor");p=T.getUniformLocation(w,"alphaTest");g=document.createElement("canvas");g.width=8;g.height=8;R=g.getContext("2d");R.fillStyle="white";R.fillRect(0,0,8,8);y=new THREE.Texture(g);y.needsUpdate=!0};this.render=function(x,H,M,S){R.length=0;x.traverseVisible(function(e){e instanceof THREE.Sprite&&R.push(e)});if(0!==R.length){T.useProgram(w);T.enableVertexAttribArray(d);T.enableVertexAttribArray(m);T.disable(T.CULL_FACE);T.enable(T.BLEND);T.bindBuffer(T.ARRAY_BUFFER,_);T.vertexAttribPointer(d,2,T.FLOAT,!1,16,0);T.vertexAttribPointer(m,2,T.FLOAT,!1,16,8);T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,b);T.uniformMatrix4fv(h,!1,H.projectionMatrix.elements);T.activeTexture(T.TEXTURE0);T.uniform1i(o,0);S=M=0;var C=x.fog;C?(T.uniform3f(E,C.color.r,C.color.g,C.color.b),C instanceof THREE.Fog?(T.uniform1f(u,C.near),T.uniform1f(f,C.far),T.uniform1i(l,1),S=M=1):C instanceof THREE.FogExp2&&(T.uniform1f(c,C.density),T.uniform1i(l,2),S=M=2)):(T.uniform1i(l,0),S=M=0);for(var C=0,A=R.length;C<A;C++){var L=R[C],P=L.material;L._modelViewMatrix.multiplyMatrices(H.matrixWorldInverse,L.matrixWorld);L.z=-L._modelViewMatrix.elements[14]}R.sort(g);H=[];C=0;for(A=R.length;C<A;C++)L=R[C],P=L.material,T.uniform1f(p,P.alphaTest),T.uniformMatrix4fv(s,!1,L._modelViewMatrix.elements),H[0]=L.scale.x,H[1]=L.scale.y,L=0,x.fog&&P.fog&&(L=S),M!==L&&(T.uniform1i(l,L),M=L),null!==P.map?(T.uniform2f(e,P.map.offset.x,P.map.offset.y),T.uniform2f(t,P.map.repeat.x,P.map.repeat.y)):(T.uniform2f(e,0,0),T.uniform2f(t,1,1)),T.uniform1f(a,P.opacity),T.uniform3f(n,P.color.r,P.color.g,P.color.b),T.uniform1f(r,P.rotation),T.uniform2fv(i,H),v.setBlending(P.blending,P.blendEquation,P.blendSrc,P.blendDst),v.setDepthTest(P.depthTest),v.setDepthWrite(P.depthWrite),P.map&&P.map.image&&P.map.image.width?v.setTexture(P.map,0):v.setTexture(y,0),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0);T.enable(T.CULL_FACE)}}};THREE.DepthPassPlugin=function(){function e(t,r,i){if(r.visible){var n=t.__webglObjects[r.id];if(n&&(!1===r.frustumCulled||!0===s.intersectsObject(r)))for(var o=0,a=n.length;o<a;o++){var h=n[o];r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld);l.push(h)}o=0;for(a=r.children.length;o<a;o++)e(t,r.children[o],i)}}this.enabled=!1;this.renderTarget=null;var t,r,i,n,o,a,s=new THREE.Frustum,h=new THREE.Matrix4,l=[];this.init=function(e){t=e.context;r=e;e=THREE.ShaderLib.depthRGBA;var s=THREE.UniformsUtils.clone(e.uniforms);i=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:s});n=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:s,morphTargets:!0});o=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:s,skinning:!0});a=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:s,morphTargets:!0,skinning:!0});i._shadowPass=!0;n._shadowPass=!0;o._shadowPass=!0;a._shadowPass=!0};this.render=function(e,t){this.enabled&&this.update(e,t)};this.update=function(c,u){var f,E,p,d,m;t.clearColor(1,1,1,1);t.disable(t.BLEND);r.setDepthTest(!0);!0===c.autoUpdate&&c.updateMatrixWorld();u.matrixWorldInverse.getInverse(u.matrixWorld);h.multiplyMatrices(u.projectionMatrix,u.matrixWorldInverse);s.setFromMatrix(h);r.setRenderTarget(this.renderTarget);r.clear();l.length=0;e(c,c,u);var g;f=0;for(E=l.length;f<E;f++)p=l[f],m=p.object,p=p.buffer,m instanceof THREE.PointCloud&&!m.customDepthMaterial||((g=m.material instanceof THREE.MeshFaceMaterial?m.material.materials[0]:m.material)&&r.setMaterialFaces(m.material),d=void 0!==m.geometry.morphTargets&&0<m.geometry.morphTargets.length&&g.morphTargets,g=m instanceof THREE.SkinnedMesh&&g.skinning,d=m.customDepthMaterial?m.customDepthMaterial:g?d?a:o:d?n:i,p instanceof THREE.BufferGeometry?r.renderBufferDirect(u,c.__lights,null,d,p,m):r.renderBuffer(u,c.__lights,null,d,p,m));d=c.__webglObjectsImmediate;f=0;for(E=d.length;f<E;f++)p=d[f],m=p.object,m.visible&&(m._modelViewMatrix.multiplyMatrices(u.matrixWorldInverse,m.matrixWorld),r.renderImmediateObject(u,c.__lights,null,i,m));f=r.getClearColor();E=r.getClearAlpha();t.clearColor(f.r,f.g,f.b,E);t.enable(t.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};